{"version":3,"sources":["dictionary/dic-type.ts","common/services/action-constants.ts","common/services/action-creators.ts","pages/Home/Home.tsx","dictionary/eras.ts","utils/index.ts","pages/Eras/ErasPage.tsx","pages/GreatBuildings/services/action-constants.ts","dictionary/simple.ts","pages/GreatBuildings/GreatBuildingDetailForm.tsx","pages/GreatBuildings/GreatBuildingsPage.tsx","pages/GreatBuildings/services/action-creators.ts","pages/Skills/services/action-constants.ts","pages/Skills/SkillDetailForm.tsx","components/SearchInputWithDelay.tsx","pages/Skills/SkillsPage.tsx","pages/Skills/services/action-creators.ts","pages/Calculation/CalcForm.tsx","pages/Calculation/Calculation.tsx","pages/ResidentialBuildings/services/action-constants.ts","pages/ResidentialBuildings/ResidentialBuildingDetailForm.tsx","pages/ResidentialBuildings/ResidentialBuildingsPage.tsx","pages/ResidentialBuildings/services/action-creators.ts","pages/Main/MenuHelper.tsx","pages/Main/App.tsx","serviceWorker.ts","redux/history.ts","common/services/reducer.ts","pages/Skills/services/reducer.ts","dictionary/skills.ts","dictionary/great-buildings.ts","pages/GreatBuildings/services/reducer.ts","dictionary/residential-buildings.ts","pages/ResidentialBuildings/services/reducer.ts","redux/rootReducer.ts","redux/configureStore.ts","index.tsx"],"names":["EraKey","COMMON_SHOW_LOADER","COMMON_HIDE_LOADER","commonShowLoader","type","commonHideLoader","mapDispatch","connector","connect","state","loading","common","props","tempShowLoader","delay","setTimeout","align","onClick","danger","ERAS","short","background","borderColor","color","key","Without","name","Stone","Bronze","Iron","EarlyMiddle","HighMiddle","LateMiddle","Colonial","Industrial","Progressivism","Modern","Postmodern","NewestTime","Tomorrow","Future","Arctic","Oceanic","Virtual","Mars","Asteroid","ERA_KEY_MAP","reduce","acc","era","compareAlphabetically","a","b","aText","bText","compareNumber","aNum","bNum","downloadToFile","object","fileName","contentType","before","after","document","createElement","context","JSON","stringify","file","Blob","href","URL","createObjectURL","download","click","ErasPage","style","width","dataSource","columns","title","dataIndex","sorter","bordered","onRow","rowKey","pagination","size","GREAT_BUILDING_EDIT_SHOW","GREAT_BUILDING_SET_IS_NEW","GREAT_BUILDING_EDIT_NEW","GREAT_BUILDING_EDIT_BY_IP","GREAT_BUILDING_INSERT","GREAT_BUILDING_UPDATE","GREAT_BUILDING_DELETE","ROADS","image","Option","Select","GreatBuildingDetailForm","skills","isExist","editGreatBuilding","onSave","onClose","Form","useForm","form","useEffect","fieldsGreatBuilding","id","definition","skillTypes","place","setFieldsValue","labelCol","span","wrapperCol","Item","label","rules","required","message","pattern","disabled","placeholder","showSearch","optionLabelProp","filterOption","input","option","Boolean","toLowerCase","indexOf","map","index","value","padding","Group","compact","noStyle","min","max","step","road","src","alt","className","mode","children","skill","TextArea","rows","autoSize","justify","htmlType","validateFields","then","values","build","marginLeft","GreatBuildingsPage","createNewBuilding","editNewGreatBuilding","editRecord","editGreatBuildingById","saveDetail","greatBuilding","isNewGreatBuilding","updateGreatBuilding","insertGreatBuilding","detailClose","editGreatBuildingShow","saveToFile","greatBuildingList","this","isEditGreatBuildingShow","skillList","iconsSize","marginBottom","icon","flex","alignItems","ellipsis","render","placement","height","eraKey","backgroundColor","x","y","filter","includes","gb","visible","onCancel","footer","maskClosable","React","Component","isShow","setIsNewGreatBuilding","isNew","deleteGreatBuildingByIp","greatBuilds","SKILLS_EDIT_SKILL_SHOW","SKILLS_SET_IS_NEW_SKILL","SKILLS_SEARCH_VALUE","SKILLS_EDIT_NEW_SKILL","SKILLS_EDIT_SKILL_BY_IP","SKILLS_INSERT_SKILL","SKILLS_UPDATE_SKILL","SKILLS_DELETE_SKILL","SkillDetailForm","editSkill","fieldsSkill","SearchInputWithDelay","onChange","useState","undefined","timer","setTimer","tempValue","setTempValue","Search","e","newValue","target","clearTimeout","onPressEnter","allowClear","SkillsPage","editSkillById","isNewSkill","updateSkill","insertSkill","createNewSkill","editNewSkill","editSkillShow","setSearchValue","searchValue","setSkillSearchValue","isEditSkillShow","setIsNewSkill","deleteSkillByIp","FACTOR_OPTION","CalcForm","calc","onSaveCalc","primary","onSetPrimary","minEncl","setMinEncl","justEncl","setJustEncl","maxEncl","setMaxEncl","errors","setErrors","fac","now","ned","fee","rvl","calcEnclosure","errorList","minEnclosure","enclosure","maxEnclosure","Math","round","calcNow","push","onChangeRepayment","getFieldsValue","clipboardWriteText","text","navigator","clipboard","writeText","catch","layout","factor","classNames","toString","err","Calculation","selectedPrimary","setSelectedPrimary","getSelectedPrimary","storageLoadCalc","storageName","calcJson","localStorage","getItem","parse","storageSaveCalc","setItem","RESIDENTIAL_BUILDING_EDIT_SHOW","RESIDENTIAL_BUILDING_SET_IS_NEW","RESIDENTIAL_BUILDING_EDIT_NEW","RESIDENTIAL_BUILDING_EDIT_BY_IP","RESIDENTIAL_BUILDING_INSERT","RESIDENTIAL_BUILDING_UPDATE","RESIDENTIAL_BUILDING_DELETE","ResidentialBuildingDetailForm","editResidentialBuilding","fieldsResidentialBuilding","ResidentialBuildingsPage","editNewResidentialBuilding","editResidentialBuildingById","residentialBuilding","isNewResidentialBuilding","updateResidentialBuilding","insertResidentialBuilding","editResidentialBuildingShow","residentialBuildingList","isEditResidentialBuildingShow","setIsNewResidentialBuilding","deleteResidentialBuildingByIp","residencies","MENU_DATA","subMenus","pathname","component","findSelectedMenuByPathname","menuData","breadcrumbs","selected","menu","newBreadcrumbs","startsWith","process","length","SubMenu","Menu","Content","Layout","Footer","Sider","RESOLVED_SUBMENUS","resolveSubmenu","to","RESOLVED_ROUTES","resolveRoutes","summary","path","menuCollapsed","setMenuCollapsed","selectedKeys","setSelectedKeys","setBreadcrumbs","onSelectMenu","selectedMenu","window","location","spinning","tip","collapsible","collapsed","onCollapse","theme","onSelect","margin","crumb","exact","Home","hostname","match","createHashHistory","initialState","commonReducer","action","skillsReducer","filtered","concat","skl","greatBuildingsReducer","residentialBuildingsReducer","history","combineReducers","router","connectRouter","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","routerMiddleware","thunk","store","preloadedState","createStore","rootReducer","configureStore","ReactDOM","basename","getElementById","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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,CACDD,GAAI,aACJrF,KAAM,sEACNsF,WAAY,kZACZf,MAAO,0FACN,CACDc,GAAI,oBACJrF,KAAM,kIACNuE,MAAO,qGACPe,WAAY,4tBACX,CACDD,GAAI,SACJrF,KAAM,gEACNuE,MAAO,0FACPe,WAAY,ioBACX,CACDD,GAAI,aACJrF,KAAM,8FACNuE,MAAO,8FACPe,WAAY,4nBACX,CACDD,GAAI,UACJrF,KAAM,4EACNuE,MAAO,2FACPe,WAAY,4QACX,CACDD,GAAI,cACJrF,KAAM,kFACNuE,MAAO,+FACPe,WAAY,smBACX,CACDD,GAAI,YACJrF,KAAM,yFACNuE,MAAO,6FACPe,WAAY,ggBACX,CACDD,GAAI,gBACJrF,KAAM,yFACNuE,MAAO,iGACPe,WAAY,ieACX,CACDD,GAAI,qBACJrF,KAAM,6HACNuE,MAAO,sGACPe,WAAY,2SACX,CACDD,GAAI,iBACJrF,KAAM,+FACNuE,MAAO,kGACPe,WAAY,8QACX,CACDD,GAAI,gBACJrF,KAAM,gEACNuE,MAAO,iGACPe,WAAY,oZACX,CACDD,GAAI,aACJrF,KAAM,2GACNuE,MAAO,8FACPe,WAAY,yeACX,CACDD,GAAI,sBACJrF,KAAM,8FACNuE,MAAO,uGACPe,WAAY,iQACX,CACDD,GAAI,sBACJrF,KAAM,iHACNuE,MAAO,uGACPe,WAAY,mPACX,CACDD,GAAI,eACJrF,KAAM,gEACNuE,MAAO,gGACPe,WAAY,+rBACX,CACDD,GAAI,iBACJrF,KAAM,oGACNuE,MAAO,kGACPe,WAAY,4gBACX,CACDD,GAAI,mBACJrF,KAAM,0GACNuE,MAAO,oGACPe,WAAY,oeACX,CACDD,GAAI,gBACJrF,KAAM,kFACNuE,MAAO,iGACPe,WAAY,2bACX,CACDD,GAAI,+BACJrF,KAAM,kNACNuE,MAAO,gHACPe,WAAY,0kBACX,CACDD,GAAI,iBACJrF,KAAM,4EACNuE,MAAO,kGACPe,WAAY,krBACX,CACDD,GAAI,mBACJrF,KAAM,sHACNuE,MAAO,oGACPe,WAAY,6oBACX,CACDD,GAAI,gBACJrF,KAAM,4HACNuE,MAAO,iGACP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","file":"static/js/main.cf0a11c3.chunk.js","sourcesContent":["/*\r\n* Copyright 2020 LasGIS FOE Helper\r\n*/\r\n\r\n/** Эпохи */\r\nexport enum EraKey {\r\n  /** Without Century | Без Века */\r\n  Without = 0,\r\n  /** Stone Age | Каменный Век */\r\n  Stone = 1,\r\n  /** Bronze Age | Бронзовый Век */\r\n  Bronze = 2,\r\n  /** Iron Age | Железный Век */\r\n  Iron = 3,\r\n  /** Early Middle Ages | Раннее Средневековье */\r\n  EarlyMiddle = 4,\r\n  /** High Middle Ages | Высокое Средневековье */\r\n  HighMiddle = 5,\r\n  /** Late Middle Ages | Позднее Средневековье */\r\n  LateMiddle = 6,\r\n  /** Colonial Period | Колониальный период */\r\n  Colonial = 7,\r\n  /** Industrial Era | Индустриальная эпоха */\r\n  Industrial = 8,\r\n  /** Progressivism | Эра прогрессивизма */\r\n  Progressivism = 9,\r\n  /** Age of Modern | Эпоха Модерна */\r\n  Modern = 10,\r\n  /** Postmodern Era | Эпоха Постмодерна */\r\n  Postmodern = 11,\r\n  /** Newest Time | Новейшее время */\r\n  NewestTime = 12,\r\n  /** Tomorrow Era | Завтрашняя эпоха */\r\n  Tomorrow = 13,\r\n  /** Era of the Future | Эра Будущего */\r\n  Future = 14,\r\n  /** Arctic Future | Арктическое будущее */\r\n  Arctic = 15,\r\n  /** Oceanic Future | Океаническое будущее */\r\n  Oceanic = 16,\r\n  /** Virtual Future | Виртуальное будущее */\r\n  Virtual = 17,\r\n  /** Space Age Mars | Космическая эра Марса */\r\n  Mars = 18,\r\n  /** Asteroid Belt | Пояс астероидов из космической эры */\r\n  Asteroid = 19,\r\n}\r\n\r\nexport type EraType = {\r\n  key: EraKey;\r\n  short: string;\r\n  background: string;\r\n  borderColor: string;\r\n  color: string;\r\n  name: string;\r\n};\r\n\r\n/** единица времени */\r\nexport type UnitTimeType = '5m' | '15m' | '1h' | '4h' | '8h' | '1d' | '2d';\r\n\r\n/** Ресурсы (население, монеты, молотки, бриллианты) */\r\nexport type ResourceType = 'population' | 'money' | 'tools' | 'diamond';\r\n\r\nexport type Resource = {\r\n  type: RoadType;\r\n  name: string;\r\n  image?: string;\r\n};\r\n\r\n/** число конкретного ресурса */\r\nexport type ResourceCount = Resource & {\r\n  count: number;\r\n};\r\n\r\n/** проиводительность конкретного ресурса в единицу времени */\r\nexport type ResourceProductivity = ResourceCount & {\r\n  time: number;\r\n  unitTime: UnitTimeType;\r\n};\r\n\r\n/** дороги */\r\nexport type RoadType = 0 | 1 | 2;\r\n\r\nexport type Road = {\r\n  type: RoadType;\r\n  name: string;\r\n  image?: string;\r\n};\r\n\r\nexport type Place = {\r\n  /** число клеток снизу вправо / */\r\n  x: number;\r\n  /** сверху вправо \\ */\r\n  y: number;\r\n  /** число клеток дороги */\r\n  b: RoadType;\r\n};\r\n\r\nexport type ImageType = string;\r\n\r\n/**\r\n * 'residential' - Жилые постройки\r\n * 'production' - Производственные постройки (молотки)\r\n * 'industrial' - Промышленные постройки\r\n * 'social' - Общественные постройки\r\n * 'decor' - Декоры\r\n * 'military' - Военные постройки\r\n * 'great' - Великие строения\r\n * 'special' - Особые постройки\r\n */\r\nexport type BuildingType = 'residential' | 'production' | 'industrial' | 'social' | 'decor' | 'military' | 'great' | 'special';\r\n\r\nexport type Building = {\r\n  /** тип строения */\r\n  type: BuildingType;\r\n  /** номер по списку (уникален для типа строения) */\r\n  id: number;\r\n  /** url картинки */\r\n  image?: ImageType;\r\n  /** Название */\r\n  name: string;\r\n  /** Описание */\r\n  definition?: string;\r\n  /** Эпоха */\r\n  era: EraKey;\r\n  /** Место */\r\n  place?: Place;\r\n};\r\n\r\nexport type SkillType =\r\n  'guild_goods'\r\n  | 'defence'\r\n  | 'relic_hunt'\r\n  | 'supplies'\r\n  | 'happy'\r\n  | 'goods'\r\n  | 'population'\r\n  | 'military'\r\n  | 'medals'\r\n  | 'supplies_plus'\r\n  | 'forge_points'\r\n  | 'coins'\r\n  | 'coins_plus'\r\n  | 'fierce_resistance'\r\n  | 'scroll'\r\n  | 'penal_unit'\r\n  | 'plunder_goods'\r\n  | 'aid_goods'\r\n  | 'contribution_boost'\r\n  | 'aid_blueprints'\r\n  | 'helping_hands'\r\n  | 'critical_hit_chance'\r\n  | 'plunder_and_pillage'\r\n  | 'first_strike'\r\n  | 'double_collect'\r\n  | 'advanced_tactics'\r\n  | 'spoils_of_war'\r\n  | 'previous_era_good_production'\r\n  | 'missile_launch'\r\n  | 'special_goods'\r\n  | 'diplomatic_gifts';\r\n\r\nexport type Skill = {\r\n  id: SkillType;\r\n  name: string;\r\n  definition?: string;\r\n  image?: ImageType;\r\n};\r\n\r\nexport type GreatBuilding = Building & {\r\n  /** Умения */\r\n  skillTypes?: SkillType[];\r\n}\r\n\r\nexport type ResidentialBuilding = Building & {\r\n  /** Стоимость строительства (Монеты, Ресурсы, Бриллианты) */\r\n  expense?: ResourceCount[];\r\n  /** Приносит */\r\n  benefit?: ResourceCount[];\r\n  /** Производит */\r\n  produce?: ResourceProductivity[];\r\n}\r\n","/*\n * Copyright 2020 LasGIS FOE Helper\n */\n\nexport const COMMON_SHOW_LOADER = 'COMMON_SHOW_LOADER';\nexport const COMMON_HIDE_LOADER = 'COMMON_HIDE_LOADER';\n","/*\n * Copyright 2020 LasGIS FOE Helper\n */\n\nimport { COMMON_HIDE_LOADER, COMMON_SHOW_LOADER, } from './action-constants';\n\nexport const commonShowLoader = () => ({ type: COMMON_SHOW_LOADER } as const);\nexport const commonHideLoader = () => ({ type: COMMON_HIDE_LOADER } as const);\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport { Button, Space } from \"antd\";\r\nimport React from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { RootStoreData } from \"../../common/types/redux-types\";\r\nimport { commonHideLoader, commonShowLoader } from \"../../common/services/action-creators\";\r\n\r\nconst Home: React.FC<PropsFromRedux> = (props) => {\r\n\r\n  const { loading, commonHideLoader, commonShowLoader } = props;\r\n\r\n  const tempShowLoader = (delay: number) => {\r\n    commonShowLoader();\r\n    setTimeout(() => {\r\n      commonHideLoader();\r\n    }, delay);\r\n  }\r\n\r\n  return (\r\n    <Space align='center'>\r\n      <h1>{loading ? 'loading' : 'NOT'}</h1>\r\n      <Button type='primary' onClick={() => tempShowLoader(1000)}>Show Loader</Button>\r\n      <Button type='ghost' onClick={() => tempShowLoader(2000)}>2 сек</Button>\r\n      <Button type='default' onClick={() => tempShowLoader(5000)}>5 сек</Button>\r\n      <Button type='link' onClick={() => tempShowLoader(20000)}>20 сек</Button>\r\n      <Button type='primary' danger onClick={commonHideLoader}>Stop Loader</Button>\r\n    </Space>\r\n  );\r\n};\r\n\r\nconst mapState = (state: RootStoreData) => {\r\n  const { loading } = state.common;\r\n  return {\r\n    loading\r\n  };\r\n};\r\n\r\nconst mapDispatch = {\r\n  commonShowLoader,\r\n  commonHideLoader\r\n};\r\n\r\nconst connector = connect(mapState, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(Home);\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport { EraKey, EraType } from \"./dic-type\";\r\n\r\nexport const ERAS: EraType[] = [\r\n  { short: 'БЭ', background: '#216565', borderColor: '#79bcbc', color: '#ffffff', key: EraKey.Without, name: \"Без Века\" },\r\n  { short: 'КЭ', background: '#5a4d3c', borderColor: '#837864', color: '#ffffff', key: EraKey.Stone, name: \"Каменный Век\" },\r\n  { short: 'БВ', background: '#503d09', borderColor: '#d5b945', color: '#ffe783', key: EraKey.Bronze, name: \"Бронзовый Век\" },\r\n  { short: 'ЖВ', background: '#521e09', borderColor: '#ff7772', color: '#f4eea7', key: EraKey.Iron, name: \"Железный Век\" },\r\n  { short: 'РС', background: '#324125', borderColor: '#77ad81', color: '#cce2a2', key: EraKey.EarlyMiddle, name: \"Раннее Средневековье\" },\r\n  { short: 'ВС', background: '#154040', borderColor: '#3bbaba', color: '#9bf7f7', key: EraKey.HighMiddle, name: \"Высокое Средневековье\" },\r\n  { short: 'ПС', background: '#46254a', borderColor: '#d178db', color: '#f4c5f9', key: EraKey.LateMiddle, name: \"Позднее Средневековье\" },\r\n  { short: 'КП', background: '#6b3c08', borderColor: '#ffffff', color: '#fecead', key: EraKey.Colonial, name: \"Колониальный период\" },\r\n  { short: 'ИЭ', background: '#561918', borderColor: '#ffafaf', color: '#ffafaf', key: EraKey.Industrial, name: \"Индустриальная эпоха\" },\r\n  { short: 'ЭП', background: '#70490d', borderColor: '#ffb065', color: '#ffead5', key: EraKey.Progressivism, name: \"Эра прогрессивизма\" },\r\n  { short: 'ЭМ', background: '#27426d', borderColor: '#65b4ff', color: '#ffead5', key: EraKey.Modern, name: \"Эпоха Модерна\" },\r\n  { short: 'ПМ', background: '#4f5751', borderColor: '#f8f8f8', color: '#ffead5', key: EraKey.Postmodern, name: \"Эпоха Постмодерна\" },\r\n  { short: 'НВ', background: '#c1522e', borderColor: '#ff8946', color: '#ffd6cb', key: EraKey.NewestTime, name: \"Новейшее время\" },\r\n  { short: 'ЭЗ', background: '#1e2126', borderColor: '#3d76c8', color: '#b9b9b9', key: EraKey.Tomorrow, name: \"Завтрашняя эпоха\" },\r\n  { short: 'ЭБ', background: '#3d5f1b', borderColor: '#80ff00', color: '#cce5ac', key: EraKey.Future, name: \"Эра Будущего\" },\r\n  { short: 'АБ', background: '#b1b1b1', borderColor: '#daf0ff', color: '#1b1d29', key: EraKey.Arctic, name: \"Арктическое будущее\" },\r\n  { short: 'ОБ', background: '#19483c', borderColor: '#3fffe1', color: '#cbfff3', key: EraKey.Oceanic, name: \"Океаническое будущее\" },\r\n  { short: 'ВБ', background: '#371a52', borderColor: '#bf77ff', color: '#e1bfff', key: EraKey.Virtual, name: \"Виртуальное будущее\" },\r\n  { short: 'КМ', background: '#9c4536', borderColor: '#e04021', color: '#ffcbc1', key: EraKey.Mars, name: \"Космическая эра Марса\" },\r\n  { short: 'КА', background: '#291daf', borderColor: '#0d72fc', color: '#ccceff', key: EraKey.Asteroid, name: \"Пояс астероидов из космической эры\" },\r\n];\r\n\r\nexport const ERA_KEY_MAP: { [eraKey: number]: EraType } = ERAS.reduce((acc: { [eraKey: number]: EraType }, era: EraType) => {\r\n  acc[era.key] = era;\r\n  return acc;\r\n}, {});\r\n\r\nexport const ERA_SHORT_MAP: { [short: string]: EraType } = ERAS.reduce((acc: { [short: string]: EraType }, era: EraType) => {\r\n  acc[era.short] = era;\r\n  return acc;\r\n}, {});\r\n","export const compareAlphabetically = (a?: string, b?: string) => {\r\n  const aText = a || '';\r\n  const bText = b || '';\r\n  if (aText < bText) return -1;\r\n  if (aText > bText) return 1;\r\n  return 0;\r\n};\r\n\r\nexport const compareNumber = (a?: number, b?: number) => {\r\n  const aNum = a || 0;\r\n  const bNum = b || 0;\r\n  if (aNum < bNum) return -1;\r\n  if (aNum > bNum) return 1;\r\n  return 0;\r\n};\r\n\r\nexport const downloadToFile = (\r\n  object: any, fileName: string, contentType: string,\r\n  before?: string, after?: string\r\n) => {\r\n  const a = document.createElement(\"a\");\r\n  const context: string = (before ? before: '') + JSON.stringify(object) + (after ? after: '');\r\n  const file = new Blob([ context ], { type: contentType });\r\n  a.href = URL.createObjectURL(file);\r\n  a.download = fileName;\r\n  a.click();\r\n};\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport React from \"react\";\r\nimport { Table } from \"antd\";\r\nimport { ERAS } from \"../../dictionary/eras\";\r\nimport { EraType } from \"../../dictionary/dic-type\";\r\nimport { compareAlphabetically } from \"../../utils\";\r\n\r\nconst ErasPage: React.FC = (props) => {\r\n\r\n  return (\r\n    <Table\r\n      style={{ width: '300px' }}\r\n      dataSource={ERAS}\r\n      columns={[ {\r\n        title: '№',\r\n        dataIndex: 'key',\r\n        width: '20px'\r\n      }, {\r\n        title: 'Абр.',\r\n        dataIndex: 'short',\r\n        width: '60px',\r\n        sorter: (a: EraType, b: EraType) => compareAlphabetically(a.short, b.short),\r\n      }, {\r\n        title: 'Полное название',\r\n        dataIndex: 'name',\r\n        sorter: (a: EraType, b: EraType) => compareAlphabetically(a.name, b.name),\r\n      } ]}\r\n      bordered\r\n      onRow={(era: EraType) => ({\r\n        style: {\r\n          background: era.background,\r\n          borderColor: era.borderColor,\r\n          color: era.color\r\n        }\r\n      })}\r\n      rowKey={(era: EraType) => era.key}\r\n      pagination={false}\r\n      size='small'\r\n    />\r\n  );\r\n}\r\n\r\nexport default ErasPage;\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nexport const GREAT_BUILDING_EDIT_SHOW = 'GREAT_BUILDING_EDIT_SHOW';\r\nexport const GREAT_BUILDING_SET_IS_NEW = 'GREAT_BUILDING_SET_IS_NEW';\r\n\r\nexport const GREAT_BUILDING_EDIT_NEW = 'GREAT_BUILDING_EDIT_NEW';\r\nexport const GREAT_BUILDING_EDIT_BY_IP = 'GREAT_BUILDING_EDIT_BY_IP';\r\nexport const GREAT_BUILDING_INSERT = 'GREAT_BUILDING_INSERT';\r\nexport const GREAT_BUILDING_UPDATE = 'GREAT_BUILDING_UPDATE';\r\nexport const GREAT_BUILDING_DELETE = 'GREAT_BUILDING_DELETE';\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport { Road } from \"./dic-type\";\r\n\r\nexport const ROADS: Road[] = [\r\n  { type: 0, name: 'Без дороги', image: \"\" },\r\n  { type: 1, name: 'Однопутка', image: \"https://foeru.innogamescdn.com/assets/shared/icons/street.png\" },\r\n  { type: 2, name: 'Трасса', image: \"https://foeru.innogamescdn.com/assets/shared/icons/street_required.png\" },\r\n];\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { GreatBuilding, Road, Skill } from \"../../dictionary/dic-type\";\r\nimport { Button, Form, Input, InputNumber, Row, Select } from \"antd\";\r\nimport TextArea from \"antd/es/input/TextArea\";\r\nimport { ERAS } from \"../../dictionary/eras\";\r\nimport { ROADS } from \"../../dictionary/simple\";\r\n\r\nconst { Option } = Select;\r\n\r\ntype Props = {\r\n  skills: Skill[];\r\n  isExist: boolean;\r\n  editGreatBuilding?: GreatBuilding;\r\n  onSave: (build: GreatBuilding) => any;\r\n  onClose: () => any;\r\n};\r\n\r\nexport const GreatBuildingDetailForm = ({ skills, isExist, editGreatBuilding, onSave, onClose }: Props) => {\r\n\r\n  const [ form ] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    if (editGreatBuilding) {\r\n      const fieldsGreatBuilding = {\r\n        id: editGreatBuilding.id,\r\n        name: editGreatBuilding.name,\r\n        definition: editGreatBuilding.definition,\r\n        image: editGreatBuilding.image,\r\n        era: editGreatBuilding.era,\r\n        skillTypes: editGreatBuilding.skillTypes,\r\n        place: editGreatBuilding.place ? editGreatBuilding.place : { b: 1 },\r\n      };\r\n      form.setFieldsValue(fieldsGreatBuilding);\r\n    }\r\n  }, [ form, editGreatBuilding ]);\r\n\r\n  const handleSubmit = () => {\r\n    form.validateFields()\r\n      .then(values => {\r\n        const build: GreatBuilding = {\r\n          ...editGreatBuilding,\r\n          id: values.id,\r\n          type: \"great\",\r\n          name: values.name,\r\n          definition: values.definition,\r\n          image: values.image,\r\n          era: values.era,\r\n          skillTypes: values.skillTypes,\r\n          place: values.place,\r\n        };\r\n        onSave(build);\r\n      });\r\n  };\r\n\r\n  const layout = {\r\n    labelCol: { span: 7 },\r\n    wrapperCol: { span: 17 },\r\n  };\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Form {...layout} form={form}>\r\n      <Form.Item\r\n        name=\"id\" label=\"ID\"\r\n        rules={[ {\r\n          required: true,\r\n          message: 'ID обязательно!',\r\n        }, {\r\n          pattern: /^([a-z0-9]+[_])*[a-z0-9]+$/,\r\n          message: 'ID состоит из LAT в нижнем регистре, разделенных \"_\"',\r\n        } ]}>\r\n        <Input disabled={isExist}/>\r\n      </Form.Item>\r\n      <Form.Item name=\"image\" label=\"Картинка (URL)\">\r\n        <Input/>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"name\" label=\"Название\"\r\n        rules={[ { required: true } ]}>\r\n        <Input/>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"era\" label=\"Эра / Эпоха\"\r\n        rules={[ { required: true } ]}>\r\n        <Select\r\n          placeholder={\"Выберите эпоху\"} showSearch optionLabelProp='label'\r\n          filterOption={(input, option) => {\r\n            const label: string = (option && option.label && typeof (option.label) === 'string') ? option.label : '';\r\n            return Boolean(label.toLowerCase().indexOf(input.toLowerCase()) >= 0)\r\n          }}\r\n        >\r\n          {ERAS.map((era, index) => (\r\n            <Option key={`era_id_option_${index}`} value={era.key} label={era.name}>\r\n              <div style={{\r\n                padding: \"0 11px\",\r\n                background: era.background,\r\n                borderColor: era.borderColor,\r\n                color: era.color\r\n              }}>{era.name}</div>\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item label=\"Размер\" required={true}>\r\n        <Input.Group compact>\r\n          <Form.Item\r\n            name={[ 'place', 'x' ]}\r\n            noStyle\r\n            rules={[ { required: true } ]}\r\n          >\r\n            <InputNumber placeholder='X' min={1} max={10} step={1} style={{ width: '50px' }}/>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={[ 'place', 'y' ]}\r\n            noStyle\r\n            rules={[ { required: true } ]}\r\n          >\r\n            <InputNumber placeholder='Y' min={1} max={10} step={1} style={{ width: '50px' }}/>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={[ 'place', 'b' ]}\r\n            noStyle\r\n            rules={[ { required: true } ]}\r\n          >\r\n            <Select placeholder=\"дорога\" style={{ width: '200px' }}>\r\n              {ROADS.map((road: Road, index: number) => <Option key={index} value={road.type}>\r\n                {road.image && <img src={road.image} width='25px' alt={road.name} className=\"skill-image\"/>}{road.name}\r\n              </Option>)}\r\n            </Select>\r\n          </Form.Item>\r\n        </Input.Group>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"skillTypes\" label=\"Усиление ВC\"\r\n        rules={[ { required: true } ]}>\r\n        <Select mode='multiple' placeholder={\"добавьте усиление\"} showSearch filterOption={(input, option) => {\r\n          return Boolean(option && option.children[1].toLowerCase().indexOf(input.toLowerCase()) >= 0)\r\n        }}>\r\n          {skills?.map((skill, index) => (\r\n            <Option key={`skill_id_option_${index}`} value={skill.id}>\r\n              <img src={skill.image} width='25px' alt={skill.image} className=\"skill-image\"/>{skill.name}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item name=\"definition\" label=\"Описание\">\r\n        <TextArea rows={4} autoSize={true} />\r\n      </Form.Item>\r\n      <Row justify=\"center\">\r\n        <Form.Item noStyle>\r\n          <Button type=\"primary\" htmlType=\"submit\" onClick={handleSubmit}>\r\n            Сохранить\r\n          </Button>\r\n          <Button style={{ marginLeft: 8 }} htmlType=\"reset\" onClick={handleClose}>\r\n            Закрыть\r\n          </Button>\r\n        </Form.Item>\r\n      </Row>\r\n    </Form>\r\n  );\r\n}\r\n\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport React from \"react\";\r\nimport { Button, Modal, Row, Table, Tooltip } from \"antd\";\r\nimport { compareAlphabetically, compareNumber, downloadToFile } from \"../../utils\";\r\nimport { EraType, GreatBuilding, Place, SkillType } from \"../../dictionary/dic-type\";\r\nimport { RootStoreData } from \"../../common/types/redux-types\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { ERA_KEY_MAP } from \"../../dictionary/eras\";\r\nimport { DownloadOutlined, PlusOutlined } from \"@ant-design/icons/lib/icons\";\r\nimport {\r\n  deleteGreatBuildingByIp,\r\n  editGreatBuildingById,\r\n  editGreatBuildingShow,\r\n  editNewGreatBuilding,\r\n  insertGreatBuilding,\r\n  setIsNewGreatBuilding,\r\n  updateGreatBuilding\r\n} from \"./services/action-creators\";\r\nimport { GreatBuildingDetailForm } from \"./GreatBuildingDetailForm\";\r\n\r\nclass GreatBuildingsPage extends React.Component<PropsFromRedux> {\r\n\r\n  createNewBuilding = () => {\r\n    const { editNewGreatBuilding } = this.props;\r\n    editNewGreatBuilding();\r\n  };\r\n\r\n  editRecord = (id?: number) => {\r\n    const { editGreatBuildingById } = this.props;\r\n    id && editGreatBuildingById(id);\r\n  };\r\n\r\n  saveDetail = (greatBuilding: GreatBuilding) => {\r\n    const { isNewGreatBuilding, updateGreatBuilding, insertGreatBuilding } = this.props;\r\n    isNewGreatBuilding ? insertGreatBuilding(greatBuilding) : updateGreatBuilding(greatBuilding);\r\n  };\r\n\r\n  detailClose = () => {\r\n    const { editGreatBuildingShow } = this.props;\r\n    editGreatBuildingShow(false);\r\n  };\r\n\r\n  saveToFile = () => {\r\n    const { greatBuildingList } = this.props;\r\n    downloadToFile(greatBuildingList, 'great-buildings.ts', 'text/plain',\r\n      \"/** Великие Строения */\\n\" +\r\n      \"import { GreatBuilding } from \\\"./dic-type\\\";\\n\\n\" +\r\n      \"export const GREAT_BUILDING: GreatBuilding[] = \", \";\\n\");\r\n  }\r\n\r\n  render() {\r\n    const { greatBuildingList, editGreatBuilding, isEditGreatBuildingShow, isNewGreatBuilding, skillList } = this.props;\r\n    const iconsSize: string = 'https://foeru.innogamescdn.com/assets/shared/icons/size.png';\r\n    return (\r\n      <>\r\n        <Row style={{ marginBottom: '5px' }}>\r\n          <Button\r\n            type=\"primary\"\r\n            icon={<DownloadOutlined/>}\r\n            onClick={this.saveToFile}\r\n          >\r\n            Сохранить как Файл\r\n          </Button>\r\n          <div style={{ flex: \"auto\" }}/>\r\n          <Button\r\n            style={{ alignItems: \"end\" }}\r\n            type=\"link\"\r\n            icon={<PlusOutlined/>}\r\n            onClick={this.createNewBuilding}\r\n          >\r\n            Добавить Великое Строение\r\n          </Button>\r\n        </Row>\r\n        <Table\r\n          dataSource={greatBuildingList}\r\n          columns={[ {\r\n            title: '№',\r\n            dataIndex: 'id',\r\n            ellipsis: true,\r\n            width: '50px',\r\n            sorter: (a: GreatBuilding, b: GreatBuilding) => compareNumber(a.id, b.id),\r\n          }, {\r\n            title: 'Здание',\r\n            dataIndex: 'name',\r\n            ellipsis: true,\r\n            width: '300px',\r\n            sorter: (a: GreatBuilding, b: GreatBuilding) => compareAlphabetically(a.name, b.name),\r\n            render: (name: string, build: GreatBuilding) => (\r\n              <Tooltip placement=\"topLeft\" title={`Редактировать строение \"${build.name}\"`}>\r\n                <Button\r\n                  type='link'\r\n                  className='era-button'\r\n                  icon={<img src={build.image} height='46px' alt={build.image} className=\"skill-image\"/>}\r\n                  onClick={() => this.editRecord(build.id)}\r\n                >{name}</Button>\r\n              </Tooltip>\r\n            )\r\n          }, {\r\n            title: 'Эра',\r\n            dataIndex: 'era',\r\n            width: '250px',\r\n            sorter: (a: GreatBuilding, b: GreatBuilding) => compareAlphabetically(ERA_KEY_MAP[a.era].name, ERA_KEY_MAP[b.era].name),\r\n            render: (eraKey: number) => {\r\n              const era: EraType = ERA_KEY_MAP[eraKey];\r\n              return <div className='circle-wrapper'>\r\n                <div className='circle' style={{\r\n                  backgroundColor: `${era.background}`,\r\n                  borderColor: `${era.borderColor}`,\r\n                  color: `${era.color}`\r\n                }}>{era.short}</div>\r\n                {era.name}</div>\r\n            },\r\n          }, {\r\n            title: 'Размер',\r\n            dataIndex: 'place',\r\n            width: '90px',\r\n            render: (place?: Place) => place ?\r\n              <><img src={iconsSize} width='25px' alt={iconsSize} className=\"skill-image\"/>{`${place.x}x${place.y}`}</>\r\n              : '',\r\n          }, {\r\n            title: 'Умения',\r\n            dataIndex: 'skillTypes',\r\n            width: '300px',\r\n            render: (skillTypes?: SkillType[]) => skillList.filter(skill => skillTypes?.includes(skill.id)).map((skill, index) =>\r\n              <div><Tooltip key={index} title={skill.definition}>\r\n                <img key={skill.id} src={skill.image} width='25px' alt={skill.image} className=\"skill-image\"/>{skill.name}\r\n              </Tooltip></div>\r\n            ),\r\n          }, {\r\n            title: 'Описание',\r\n            dataIndex: 'definition',\r\n            ellipsis: true,\r\n            sorter: (a: GreatBuilding, b: GreatBuilding) => compareAlphabetically(a.definition, b.definition),\r\n          } ]}\r\n          bordered\r\n          rowKey={(gb: GreatBuilding) => gb.id}\r\n          pagination={false}\r\n          size='small'\r\n        />\r\n        <Modal\r\n          title={`Здание \"${editGreatBuilding?.name}\"`}\r\n          visible={isEditGreatBuildingShow}\r\n          onCancel={this.detailClose}\r\n          footer={false}\r\n          maskClosable={false}\r\n          width='1024px'\r\n        >\r\n          <GreatBuildingDetailForm\r\n            isExist={!isNewGreatBuilding}\r\n            skills={skillList}\r\n            editGreatBuilding={editGreatBuilding}\r\n            onSave={this.saveDetail}\r\n            onClose={this.detailClose}\r\n          />\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapState = (state: RootStoreData) => {\r\n  const { greatBuildingList, editGreatBuilding, isEditGreatBuildingShow, isNewGreatBuilding } = state.greatBuilds;\r\n  const { skillList } = state.skills;\r\n  return {\r\n    greatBuildingList,\r\n    editGreatBuilding,\r\n    isEditGreatBuildingShow,\r\n    isNewGreatBuilding,\r\n    skillList\r\n  };\r\n};\r\n\r\nconst mapDispatch = {\r\n  editGreatBuildingShow,\r\n  setIsNewGreatBuilding,\r\n  editNewGreatBuilding,\r\n  editGreatBuildingById,\r\n  insertGreatBuilding,\r\n  updateGreatBuilding,\r\n  deleteGreatBuildingByIp,\r\n};\r\n\r\nconst connector = connect(mapState, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(GreatBuildingsPage);\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport {\r\n  GREAT_BUILDING_DELETE,\r\n  GREAT_BUILDING_EDIT_NEW,\r\n  GREAT_BUILDING_EDIT_BY_IP,\r\n  GREAT_BUILDING_EDIT_SHOW,\r\n  GREAT_BUILDING_INSERT,\r\n  GREAT_BUILDING_SET_IS_NEW,\r\n  GREAT_BUILDING_UPDATE,\r\n} from './action-constants';\r\nimport { GreatBuilding } from \"../../../dictionary/dic-type\";\r\n\r\nexport const editGreatBuildingShow = (isShow: boolean) => ({ type: GREAT_BUILDING_EDIT_SHOW, isShow } as const);\r\nexport const setIsNewGreatBuilding = (isNew: boolean) => ({ type: GREAT_BUILDING_SET_IS_NEW, isNew } as const);\r\n\r\nexport const editNewGreatBuilding = () => ({ type: GREAT_BUILDING_EDIT_NEW } as const);\r\n\r\nexport const editGreatBuildingById = (id: number) => ({ type: GREAT_BUILDING_EDIT_BY_IP, id } as const);\r\n\r\nexport const insertGreatBuilding = (greatBuilding: GreatBuilding) => ({ type: GREAT_BUILDING_INSERT, greatBuilding } as const);\r\n\r\nexport const updateGreatBuilding = (greatBuilding: GreatBuilding) => ({ type: GREAT_BUILDING_UPDATE, greatBuilding } as const);\r\n\r\nexport const deleteGreatBuildingByIp = (id: number) => ({ type: GREAT_BUILDING_DELETE, id } as const);\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nexport const SKILLS_EDIT_SKILL_SHOW = 'SKILLS_EDIT_SKILL_SHOW';\r\nexport const SKILLS_SET_IS_NEW_SKILL = 'SKILLS_SET_IS_NEW_SKILL';\r\nexport const SKILLS_SEARCH_VALUE = 'SKILLS_SEARCH_VALUE';\r\n\r\nexport const SKILLS_EDIT_NEW_SKILL = 'SKILLS_EDIT_NEW_SKILL';\r\nexport const SKILLS_EDIT_SKILL_BY_IP = 'SKILLS_EDIT_SKILL_BY_IP';\r\nexport const SKILLS_INSERT_SKILL = 'SKILLS_INSERT_SKILL';\r\nexport const SKILLS_UPDATE_SKILL = 'SKILLS_UPDATE_SKILL';\r\nexport const SKILLS_DELETE_SKILL = 'SKILLS_DELETE_SKILL';\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { Skill } from \"../../dictionary/dic-type\";\r\nimport { Button, Form, Input, Row } from \"antd\";\r\nimport TextArea from \"antd/es/input/TextArea\";\r\n\r\ntype Props = {\r\n  isExist: boolean,\r\n  editSkill?: Skill;\r\n  onSave: (skill: Skill) => any;\r\n  onClose: () => any;\r\n};\r\n\r\nexport const SkillDetailForm = ({ isExist, editSkill, onSave, onClose }: Props) => {\r\n\r\n  const [ form ] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    if (editSkill) {\r\n      const fieldsSkill = {\r\n        id: editSkill.id,\r\n        name: editSkill.name,\r\n        definition: editSkill.definition,\r\n        image: editSkill.image\r\n      };\r\n      form.setFieldsValue(fieldsSkill);\r\n    }\r\n  }, [ form, editSkill ]);\r\n\r\n  const handleSubmit = () => {\r\n    form.validateFields()\r\n      .then(values => {\r\n        const skill: Skill = {\r\n          ...editSkill,\r\n          id: values.id,\r\n          name: values.name,\r\n          definition: values.definition,\r\n          image: values.image\r\n        };\r\n        onSave(skill);\r\n      });\r\n  };\r\n\r\n  const layout = {\r\n    labelCol: { span: 7 },\r\n    wrapperCol: { span: 17 },\r\n  };\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Form {...layout} form={form}>\r\n      <Form.Item\r\n        name=\"id\" label=\"ID\"\r\n        rules={[ {\r\n          required: true,\r\n          message: 'ID обязательно!',\r\n        }, {\r\n          pattern: /^([a-z0-9]+[_])*[a-z0-9]+$/,\r\n          message: 'ID состоит из LAT в нижнем регистре, разделенных \"_\"',\r\n        } ]}>\r\n        <Input disabled={isExist}/>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"name\" label=\"Название\"\r\n        rules={[ { required: true } ]}>\r\n        <Input/>\r\n      </Form.Item>\r\n      <Form.Item name=\"definition\" label=\"Описание\">\r\n        <TextArea/>\r\n      </Form.Item>\r\n      <Form.Item name=\"image\" label=\"Картинка (URL)\">\r\n        <Input/>\r\n      </Form.Item>\r\n      <Row justify=\"center\">\r\n        <Form.Item noStyle>\r\n          <Button type=\"primary\" htmlType=\"submit\" onClick={handleSubmit}>\r\n            Сохранить\r\n          </Button>\r\n          <Button style={{ marginLeft: 8 }} htmlType=\"reset\" onClick={handleClose}>\r\n            Закрыть\r\n          </Button>\r\n        </Form.Item>\r\n      </Row>\r\n    </Form>\r\n  );\r\n}\r\n\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport React, { ChangeEvent, useEffect, useState } from \"react\";\r\nimport Search from \"antd/es/input/Search\";\r\n\r\ntype Props = {\r\n  value: string;\r\n  placeholder: string;\r\n  onChange: (value: string) => void;\r\n  delay?: number\r\n};\r\n\r\nconst SearchInputWithDelay = ({ value, placeholder, onChange, delay = 500 }: Props) => {\r\n\r\n  const [ timer, setTimer ] = useState<NodeJS.Timeout | undefined>(undefined);\r\n  const [ tempValue, setTempValue ] = useState<string>(value);\r\n\r\n  useEffect(() => {\r\n    setTempValue(value)\r\n  }, [value]);\r\n\r\n  const onPressEnter = () => {\r\n    timer && clearTimeout(timer);\r\n    setTimer(undefined);\r\n    onChange(tempValue);\r\n  };\r\n\r\n  const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const newValue = e.target.value;\r\n    setTempValue(newValue);\r\n    timer && clearTimeout(timer);\r\n    setTimer(\r\n      setTimeout(() => {\r\n        onChange(newValue);\r\n      }, delay)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Search\r\n      value={tempValue}\r\n      onChange={onChangeValue}\r\n      onPressEnter={onPressEnter}\r\n      placeholder={placeholder}\r\n      allowClear\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchInputWithDelay;\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport React from \"react\";\r\nimport { Button, Modal, Row, Table, Tooltip } from \"antd\";\r\nimport { DownloadOutlined, PlusOutlined } from \"@ant-design/icons/lib/icons\";\r\nimport { SkillType, Skill } from \"../../dictionary/dic-type\";\r\nimport { compareAlphabetically, downloadToFile } from \"../../utils\";\r\nimport { RootStoreData } from \"../../common/types/redux-types\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport {\r\n  deleteSkillByIp,\r\n  editNewSkill,\r\n  editSkillById,\r\n  editSkillShow,\r\n  insertSkill,\r\n  setIsNewSkill,\r\n  setSkillSearchValue,\r\n  updateSkill\r\n} from \"./services/action-creators\";\r\nimport { SkillDetailForm } from \"./SkillDetailForm\";\r\nimport SearchInputWithDelay from \"../../components/SearchInputWithDelay\";\r\n\r\nclass SkillsPage extends React.Component<PropsFromRedux> {\r\n\r\n  editRecord = (id: SkillType) => {\r\n    const { editSkillById } = this.props;\r\n    editSkillById(id)\r\n  };\r\n\r\n  saveDetail = (skill: Skill) => {\r\n    const { isNewSkill, updateSkill, insertSkill } = this.props;\r\n    isNewSkill ? insertSkill(skill) : updateSkill(skill);\r\n  };\r\n\r\n  createNewSkill = () => {\r\n    const { editNewSkill } = this.props;\r\n    editNewSkill();\r\n  };\r\n\r\n  detailClose = () => {\r\n    const { editSkillShow } = this.props;\r\n    editSkillShow(false);\r\n  };\r\n\r\n  saveToFile = () => {\r\n    const { skillList } = this.props;\r\n    downloadToFile(skillList, 'skills.ts', 'text/plain',\r\n      \"import { SkillType } from \\\"./dic-type\\\";\\n\\nexport const SKILLS: SkillType[] = \", \";\\n\");\r\n  }\r\n\r\n  setSearchValue = (searchValue: string) => {\r\n    const { setSkillSearchValue } = this.props;\r\n    setSkillSearchValue(searchValue)\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      searchValue, skillList, editSkill, isEditSkillShow, isNewSkill\r\n    } = this.props;\r\n    return (\r\n      <>\r\n        <Row style={{ marginBottom: '5px' }}>\r\n          <Button\r\n            type=\"primary\"\r\n            icon={<DownloadOutlined/>}\r\n            onClick={this.saveToFile}\r\n          >\r\n            Сохранить как Файл\r\n          </Button>\r\n          <div style={{ flex: \"auto\" }}/>\r\n          <Button\r\n            style={{ alignItems: \"end\" }}\r\n            type=\"link\"\r\n            icon={<PlusOutlined/>}\r\n            onClick={this.createNewSkill}\r\n          >\r\n            Добавить Connectivity\r\n          </Button>\r\n        </Row>\r\n        <SearchInputWithDelay\r\n          value={searchValue}\r\n          onChange={this.setSearchValue}\r\n          placeholder=\"Начните набирать значение любого из полей\"\r\n        />\r\n        <Table\r\n          dataSource={skillList}\r\n          columns={[ {\r\n            title: '№',\r\n            dataIndex: 'id',\r\n            ellipsis: true,\r\n            width: '200px',\r\n            sorter: (a: Skill, b: Skill) => compareAlphabetically(a.id, b.id),\r\n          }, {\r\n            title: 'Название',\r\n            dataIndex: 'name',\r\n            ellipsis: true,\r\n            width: '300px',\r\n            sorter: (a: Skill, b: Skill) => compareAlphabetically(a.name, b.name),\r\n            render: (name: string, skill: Skill) => (\r\n              <Tooltip placement=\"topLeft\" title={`Редактировать умение \"${skill.name}\"`}>\r\n                <Button\r\n                  type='link' className='gray_button_link'\r\n                  icon={<img src={skill.image} width='25px' alt={skill.image} className=\"skill-image\"/>}\r\n                  onClick={() => this.editRecord(skill.id)}\r\n                >{name}</Button>\r\n              </Tooltip>\r\n            )\r\n          }, {\r\n            title: 'Описание',\r\n            dataIndex: 'definition',\r\n            ellipsis: true\r\n          } ]}\r\n          bordered\r\n          rowKey={(gb: Skill) => gb.id}\r\n          pagination={false}\r\n          size='small'\r\n        />\r\n        <Modal\r\n          title={`Усиление Великих Cтроений ${editSkill?.name}`}\r\n          visible={isEditSkillShow}\r\n          onCancel={this.detailClose}\r\n          footer={false}\r\n          maskClosable={false}\r\n          width='1024px'\r\n        >\r\n          <SkillDetailForm\r\n            isExist={!isNewSkill}\r\n            editSkill={editSkill}\r\n            onSave={this.saveDetail}\r\n            onClose={this.detailClose}\r\n          />\r\n        </Modal>\r\n      </>\r\n\r\n    )\r\n      ;\r\n  }\r\n}\r\n\r\nconst mapState = (state: RootStoreData) => {\r\n  const { searchValue, skillList, editSkill, isEditSkillShow, isNewSkill } = state.skills;\r\n  return {\r\n    searchValue,\r\n    skillList,\r\n    editSkill,\r\n    isEditSkillShow,\r\n    isNewSkill\r\n  };\r\n};\r\n\r\nconst mapDispatch = {\r\n  editSkillShow,\r\n  setIsNewSkill,\r\n  setSkillSearchValue,\r\n  editNewSkill,\r\n  editSkillById,\r\n  insertSkill,\r\n  updateSkill,\r\n  deleteSkillByIp\r\n};\r\n\r\nconst connector = connect(mapState, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(SkillsPage);\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport {\r\n  SKILLS_DELETE_SKILL,\r\n  SKILLS_EDIT_NEW_SKILL,\r\n  SKILLS_EDIT_SKILL_BY_IP,\r\n  SKILLS_EDIT_SKILL_SHOW,\r\n  SKILLS_INSERT_SKILL,\r\n  SKILLS_SEARCH_VALUE,\r\n  SKILLS_SET_IS_NEW_SKILL,\r\n  SKILLS_UPDATE_SKILL,\r\n} from './action-constants';\r\nimport { SkillType, Skill } from \"../../../dictionary/dic-type\";\r\n\r\nexport const editSkillShow = (isShow: boolean) => ({ type: SKILLS_EDIT_SKILL_SHOW, isShow } as const);\r\nexport const setIsNewSkill = (isNew: boolean) => ({ type: SKILLS_SET_IS_NEW_SKILL, isNew } as const);\r\nexport const setSkillSearchValue = (searchValue: string) => ({ type: SKILLS_SEARCH_VALUE, searchValue } as const);\r\n\r\nexport const editNewSkill = () => ({ type: SKILLS_EDIT_NEW_SKILL } as const);\r\n\r\nexport const editSkillById = (id: SkillType) => ({ type: SKILLS_EDIT_SKILL_BY_IP, id } as const);\r\n\r\nexport const insertSkill = (skill: Skill) => ({ type: SKILLS_INSERT_SKILL, skill } as const);\r\n\r\nexport const updateSkill = (skill: Skill) => ({ type: SKILLS_UPDATE_SKILL, skill } as const);\r\n\r\nexport const deleteSkillByIp = (id: SkillType) => ({ type: SKILLS_DELETE_SKILL, id } as const);\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport \"./styles.scss\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, Form, Input, InputNumber, Select, Tooltip } from \"antd\";\r\nimport { SnippetsOutlined } from \"@ant-design/icons/lib/icons\";\r\nimport { Calc } from \"./calc-type\";\r\nimport classNames from \"classnames\";\r\nimport { Primary } from \"./Calculation\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst FACTOR_OPTION: number[] = [ 1.85, 1.9, 1.92, 2.0 ];\r\n\r\ntype Error = {\r\n  message: string;\r\n  type: 'info' | 'warn' | 'error'\r\n}\r\n\r\ntype Props = {\r\n  calc: Calc;\r\n  primary: Primary;\r\n  onSaveCalc: (calc: Calc) => void;\r\n  onSetPrimary: (primary: Primary) => void;\r\n};\r\n\r\nconst CalcForm: React.FC<Props> = ({ calc, onSaveCalc, primary, onSetPrimary }) => {\r\n\r\n  const [ minEncl, setMinEncl ] = useState<number | undefined>(undefined);\r\n  const [ justEncl, setJustEncl ] = useState<number | undefined>(undefined);\r\n  const [ maxEncl, setMaxEncl ] = useState<number | undefined>(undefined);\r\n\r\n  const [ errors, setErrors ] = useState<Error[]>([]);\r\n  const [ form ] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({\r\n      fac: calc.fac,\r\n      now: calc.now,\r\n      ned: calc.ned,\r\n      fee: calc.fee,\r\n      rvl: calc.rvl,\r\n    });\r\n    calcEnclosure(calc);\r\n  }, [ form, calc ]);\r\n\r\n  const calcEnclosure = (calc: Calc) => {\r\n    const errorList: Error[] = [];\r\n    let minEnclosure: number | undefined = undefined;\r\n    let enclosure: number | undefined = undefined;\r\n    let maxEnclosure: number | undefined = undefined;\r\n\r\n    if (calc.fee) {\r\n\r\n      enclosure = Math.round(calc.fac * calc.fee);\r\n      if (calc.ned) {\r\n        const calcNow: number = calc.now || 0;\r\n        if (calc.rvl) {\r\n\r\n          minEnclosure = Math.round((calc.ned - calcNow + calc.rvl) / 2);\r\n          if (calc.rvl >= Math.round(calc.ned - calcNow)) {\r\n            errorList.push({\r\n              type: 'error',\r\n              message: `Конкурент уже занял это место:   ${calc.rvl} >= ${calc.ned} - ${calcNow} = ${Math.round(calc.ned - calcNow)}`\r\n            });\r\n            enclosure = undefined;\r\n            minEnclosure = undefined;\r\n          } else if (calc.fee > calc.ned - calcNow) {\r\n            errorList.push({\r\n              type: 'error',\r\n              message: `Вложение превышает остаток:   ${calc.fee} > ${calc.ned} - ${calcNow} = ${Math.round(calc.ned - calcNow)}`\r\n            });\r\n            enclosure = undefined;\r\n          } else if (enclosure > calc.ned - calcNow) {\r\n            errorList.push({\r\n              type: 'warn',\r\n              message: `Вложение превышает остаток:   ${calc.fac} * ${calc.fee} = ${Math.round(calc.fac * calc.fee)}`\r\n                + ` >= ${calc.ned} - ${calcNow} = ${Math.round(calc.ned - calcNow)}`\r\n            });\r\n            enclosure = undefined;\r\n          } else if (enclosure === minEnclosure) {\r\n            minEnclosure = undefined;\r\n          } else if (enclosure < (calc.ned - calcNow + calc.rvl) / 2) {\r\n            errorList.push({\r\n              type: 'warn',\r\n              message: `Нет ГАРАНТА для занятия места:  ${calc.fac} * ${calc.fee} = ${Math.round(calc.fac * calc.fee)}`\r\n                + ` <= (${calc.ned} - ${calcNow} + ${calc.rvl}) / 2 = ${Math.round((calc.ned - calcNow + calc.rvl) / 2)}`\r\n            });\r\n            maxEnclosure = minEnclosure;\r\n            minEnclosure = undefined;\r\n          }\r\n\r\n        } else {\r\n\r\n          minEnclosure = Math.round((calc.ned - calcNow) / 2);\r\n          if (calc.fee > calc.ned - calcNow) {\r\n            errorList.push({\r\n              type: 'error',\r\n              message: `Вложение превышает остаток:   ${calc.fee} >= ${calc.ned} - ${calcNow} = ${Math.round(calc.ned - calcNow)}`\r\n            });\r\n            enclosure = undefined;\r\n          } else if (enclosure > calc.ned - calcNow) {\r\n            errorList.push({\r\n              type: 'warn',\r\n              message: `Вложение превышает остаток:   ${calc.fac} * ${calc.fee} = ${Math.round(calc.fac * calc.fee)}`\r\n                + ` >= ${calc.ned} - ${calcNow} = ${Math.round(calc.ned - calcNow)}`\r\n            });\r\n            enclosure = undefined;\r\n          } else if (enclosure === minEnclosure) {\r\n            minEnclosure = undefined;\r\n          } else if (enclosure < (calc.ned - calcNow) / 2) {\r\n            errorList.push({\r\n              type: 'warn',\r\n              message: `Нет ГАРАНТА для занятия места:  ${calc.fac} * ${calc.fee} = ${Math.round(calc.fac * calc.fee)}`\r\n                + ` <= (${calc.ned} - ${calcNow}) / 2 = ${Math.round((calc.ned - calcNow) / 2)}`\r\n            });\r\n            maxEnclosure = minEnclosure;\r\n            minEnclosure = undefined;\r\n          }\r\n\r\n        }\r\n      }\r\n    } else {\r\n      errorList.push({ type: 'error', message: \"Введи Откат\" });\r\n    }\r\n\r\n    setMinEncl(minEnclosure);\r\n    setJustEncl(enclosure);\r\n    setMaxEncl(maxEnclosure);\r\n    setErrors(errorList);\r\n  };\r\n\r\n  const onChangeRepayment = () => {\r\n    const calc: Calc = form.getFieldsValue();\r\n    onSaveCalc(calc);\r\n    calcEnclosure(calc);\r\n    onSetPrimary(undefined);\r\n  };\r\n\r\n  const onChangeFactor = (factor: number) => {\r\n    const calc: Calc = form.getFieldsValue();\r\n    calc.fac = factor;\r\n    onSaveCalc(calc);\r\n    calcEnclosure(calc);\r\n    onSetPrimary(undefined);\r\n  };\r\n\r\n  const clipboardWriteText = (text: string, primary: Primary) => {\r\n    navigator.clipboard.writeText(text)\r\n      .then(() => onSetPrimary(primary))\r\n      .catch(() => onSetPrimary(undefined))\r\n  };\r\n\r\n  return (\r\n    <Form className='calc-form' layout='vertical' form={form}>\r\n      <Input.Group compact>\r\n        <Form.Item name=\"fac\" noStyle>\r\n          <Select id=\"fac\" style={{ width: 80 }} onChange={onChangeFactor}>\r\n            {FACTOR_OPTION.map((value: number, index: number) => <Option key={index} value={value}>{value}</Option>)}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item name=\"now\">\r\n          <InputNumber placeholder='внесено' min={0} onChange={onChangeRepayment}/>\r\n        </Form.Item>\r\n        <Form.Item name=\"ned\">\r\n          <InputNumber placeholder='нужно' min={0} onChange={onChangeRepayment}/>\r\n        </Form.Item>\r\n        <Form.Item name=\"fee\">\r\n          <InputNumber placeholder='откат' min={0} onChange={onChangeRepayment}/>\r\n        </Form.Item>\r\n        <Form.Item name=\"rvl\">\r\n          <InputNumber placeholder='конкур.' min={0} onChange={onChangeRepayment}/>\r\n        </Form.Item>\r\n        {minEncl &&\r\n        <Form.Item>\r\n          <Tooltip title='Для занятия места с ГАРАНТОМ'>\r\n            <Button className={classNames('button-min', { 'selected': primary === 'min' })} type='primary' icon={<SnippetsOutlined/>}\r\n                    onClick={() => clipboardWriteText(minEncl.toString(), 'min')}> {minEncl}</Button>\r\n          </Tooltip>\r\n        </Form.Item>\r\n        }\r\n        {justEncl &&\r\n        <Form.Item>\r\n          <Tooltip title='Вложение по откату'>\r\n            <Button className={classNames('button-just', { 'selected': primary === 'just' })} type='primary' icon={<SnippetsOutlined/>}\r\n                    onClick={() => clipboardWriteText(justEncl.toString(), 'just')}> {justEncl}</Button>\r\n          </Tooltip>\r\n        </Form.Item>\r\n        }\r\n        {maxEncl &&\r\n        <Form.Item>\r\n          <Tooltip title='Для занятия места с ГАРАНТОМ'>\r\n            <Button className={classNames('button-max', { 'selected': primary === 'max' })} type='primary' icon={<SnippetsOutlined/>}\r\n                    onClick={() => clipboardWriteText(maxEncl.toString(), 'max')}> {maxEncl}</Button>\r\n          </Tooltip>\r\n        </Form.Item>\r\n        }\r\n      </Input.Group>\r\n      <div className='errors'>{errors.map((err: Error, index) => <div key={index} className={`${err.type}`}>{err.message}</div>)}</div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CalcForm;\r\n\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Form } from \"antd\";\r\nimport CalcForm from \"./CalcForm\";\r\nimport { Calc } from \"./calc-type\";\r\n\r\nexport type Primary = 'min' | 'just' | 'max' | undefined;\r\nexport type CalcFormKey = 'calc0' | 'calc1' | 'calc2' | 'calc3';\r\n\r\ntype SelectedPrimary = {\r\n  key?: CalcFormKey;\r\n  primary: Primary;\r\n}\r\n\r\nconst Calculation: React.FC = () => {\r\n\r\n  const [ selectedPrimary, setSelectedPrimary ] = useState<SelectedPrimary>({ key: undefined, primary: undefined });\r\n\r\n  const getSelectedPrimary = (key: CalcFormKey): Primary => {\r\n    return selectedPrimary.key === key ? selectedPrimary.primary : undefined;\r\n  }\r\n\r\n  const storageLoadCalc = (storageName: string): Calc => {\r\n    const calcJson: string | null = localStorage.getItem(storageName);\r\n    if (typeof (calcJson) === 'string') {\r\n      return JSON.parse(calcJson);\r\n    } else {\r\n      return {\r\n        fac: 1.9,\r\n        fee: 0\r\n      }\r\n    }\r\n  };\r\n\r\n  const storageSaveCalc = (storageName: string, calc: Calc) => {\r\n    localStorage.setItem(storageName, JSON.stringify(calc));\r\n  };\r\n\r\n  return (\r\n    <div className='ant-form-vertical'>\r\n      <Form.Item label=\"Расчет вложения\">\r\n        <CalcForm key='calc-form-0'\r\n                  calc={storageLoadCalc(\"calc0\")}\r\n                  onSaveCalc={(calc: Calc) => storageSaveCalc(\"calc0\", calc)}\r\n                  primary={getSelectedPrimary('calc0')}\r\n                  onSetPrimary={(primary: Primary) => setSelectedPrimary({ key: 'calc0', primary })}\r\n        />\r\n        <CalcForm key='calc-form-1'\r\n                  calc={storageLoadCalc(\"calc1\")}\r\n                  onSaveCalc={(calc: Calc) => storageSaveCalc(\"calc1\", calc)}\r\n                  primary={getSelectedPrimary('calc1')}\r\n                  onSetPrimary={(primary: Primary) => setSelectedPrimary({ key: 'calc1', primary })}\r\n        />\r\n        <CalcForm key='calc-form-2'\r\n                  calc={storageLoadCalc(\"calc2\")}\r\n                  onSaveCalc={(calc: Calc) => storageSaveCalc(\"calc2\", calc)}\r\n                  primary={getSelectedPrimary('calc2')}\r\n                  onSetPrimary={(primary: Primary) => setSelectedPrimary({ key: 'calc2', primary })}\r\n        />\r\n        <CalcForm key='calc-form-3'\r\n                  calc={storageLoadCalc(\"calc3\")}\r\n                  onSaveCalc={(calc: Calc) => storageSaveCalc(\"calc3\", calc)}\r\n                  primary={getSelectedPrimary('calc3')}\r\n                  onSetPrimary={(primary: Primary) => setSelectedPrimary({ key: 'calc3', primary })}\r\n        />\r\n      </Form.Item>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calculation;\r\n\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nexport const RESIDENTIAL_BUILDING_EDIT_SHOW = 'GREAT_BUILDING_EDIT_SHOW';\r\nexport const RESIDENTIAL_BUILDING_SET_IS_NEW = 'GREAT_BUILDING_SET_IS_NEW';\r\n\r\nexport const RESIDENTIAL_BUILDING_EDIT_NEW = 'GREAT_BUILDING_EDIT_NEW';\r\nexport const RESIDENTIAL_BUILDING_EDIT_BY_IP = 'GREAT_BUILDING_EDIT_BY_IP';\r\nexport const RESIDENTIAL_BUILDING_INSERT = 'GREAT_BUILDING_INSERT';\r\nexport const RESIDENTIAL_BUILDING_UPDATE = 'GREAT_BUILDING_UPDATE';\r\nexport const RESIDENTIAL_BUILDING_DELETE = 'GREAT_BUILDING_DELETE';\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { ResidentialBuilding, Road } from \"../../dictionary/dic-type\";\r\nimport { Button, Form, Input, InputNumber, Row, Select } from \"antd\";\r\nimport TextArea from \"antd/es/input/TextArea\";\r\nimport { ERAS } from \"../../dictionary/eras\";\r\nimport { ROADS } from \"../../dictionary/simple\";\r\n\r\nconst { Option } = Select;\r\n\r\ntype Props = {\r\n  isExist: boolean;\r\n  editResidentialBuilding?: ResidentialBuilding;\r\n  onSave: (build: ResidentialBuilding) => any;\r\n  onClose: () => any;\r\n};\r\n\r\nexport const ResidentialBuildingDetailForm = ({ isExist, editResidentialBuilding, onSave, onClose }: Props) => {\r\n\r\n  const [ form ] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    if (editResidentialBuilding) {\r\n      const fieldsResidentialBuilding = {\r\n        id: editResidentialBuilding.id,\r\n        name: editResidentialBuilding.name,\r\n        definition: editResidentialBuilding.definition,\r\n        image: editResidentialBuilding.image,\r\n        era: editResidentialBuilding.era,\r\n        place: editResidentialBuilding.place ? editResidentialBuilding.place : { b: 1 },\r\n      };\r\n      form.setFieldsValue(fieldsResidentialBuilding);\r\n    }\r\n  }, [ form, editResidentialBuilding ]);\r\n\r\n  const handleSubmit = () => {\r\n    form.validateFields()\r\n      .then(values => {\r\n        const build: ResidentialBuilding = {\r\n          ...editResidentialBuilding,\r\n          id: values.id,\r\n          type: \"residential\",\r\n          name: values.name,\r\n          definition: values.definition,\r\n          image: values.image,\r\n          era: values.era,\r\n          place: values.place,\r\n        };\r\n        onSave(build);\r\n      });\r\n  };\r\n\r\n  const layout = {\r\n    labelCol: { span: 7 },\r\n    wrapperCol: { span: 17 },\r\n  };\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Form {...layout} form={form}>\r\n      <Form.Item\r\n        name=\"id\" label=\"ID\"\r\n        rules={[ {\r\n          required: true,\r\n          message: 'ID обязательно!',\r\n        }, {\r\n          pattern: /^([a-z0-9]+[_])*[a-z0-9]+$/,\r\n          message: 'ID состоит из LAT в нижнем регистре, разделенных \"_\"',\r\n        } ]}>\r\n        <Input disabled={isExist}/>\r\n      </Form.Item>\r\n      <Form.Item name=\"image\" label=\"Картинка (URL)\">\r\n        <Input/>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"name\" label=\"Название\"\r\n        rules={[ { required: true } ]}>\r\n        <Input/>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"era\" label=\"Эра / Эпоха\"\r\n        rules={[ { required: true } ]}>\r\n        <Select\r\n          placeholder={\"Выберите эпоху\"} showSearch optionLabelProp='label'\r\n          filterOption={(input, option) => {\r\n            const label: string = (option && option.label && typeof (option.label) === 'string') ? option.label : '';\r\n            return Boolean(label.toLowerCase().indexOf(input.toLowerCase()) >= 0)\r\n          }}\r\n        >\r\n          {ERAS.map((era, index) => (\r\n            <Option key={`era_id_option_${index}`} value={era.key} label={era.name}>\r\n              <div style={{\r\n                padding: \"0 11px\",\r\n                background: era.background,\r\n                borderColor: era.borderColor,\r\n                color: era.color\r\n              }}>{era.name}</div>\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item label=\"Размер\" required={true}>\r\n        <Input.Group compact>\r\n          <Form.Item\r\n            name={[ 'place', 'x' ]}\r\n            noStyle\r\n            rules={[ { required: true } ]}\r\n          >\r\n            <InputNumber placeholder='X' min={1} max={10} step={1} style={{ width: '50px' }}/>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={[ 'place', 'y' ]}\r\n            noStyle\r\n            rules={[ { required: true } ]}\r\n          >\r\n            <InputNumber placeholder='Y' min={1} max={10} step={1} style={{ width: '50px' }}/>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={[ 'place', 'b' ]}\r\n            noStyle\r\n            rules={[ { required: true } ]}\r\n          >\r\n            <Select placeholder=\"дорога\" style={{ width: '200px' }}>\r\n              {ROADS.map((road: Road, index: number) => <Option key={index} value={road.type}>\r\n                {road.image && <img src={road.image} width='25px' alt={road.name} className=\"skill-image\"/>}{road.name}\r\n              </Option>)}\r\n            </Select>\r\n          </Form.Item>\r\n        </Input.Group>\r\n      </Form.Item>\r\n      <Form.Item name=\"definition\" label=\"Описание\">\r\n        <TextArea rows={4} autoSize={true}/>\r\n      </Form.Item>\r\n      <Row justify=\"center\">\r\n        <Form.Item noStyle>\r\n          <Button type=\"primary\" htmlType=\"submit\" onClick={handleSubmit}>\r\n            Сохранить\r\n          </Button>\r\n          <Button style={{ marginLeft: 8 }} htmlType=\"reset\" onClick={handleClose}>\r\n            Закрыть\r\n          </Button>\r\n        </Form.Item>\r\n      </Row>\r\n    </Form>\r\n  );\r\n}\r\n\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport React from \"react\";\r\nimport { Button, Modal, Row, Table, Tooltip } from \"antd\";\r\nimport { compareAlphabetically, compareNumber, downloadToFile } from \"../../utils\";\r\nimport { EraType, ResidentialBuilding, Place, SkillType } from \"../../dictionary/dic-type\";\r\nimport { RootStoreData } from \"../../common/types/redux-types\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { ERA_KEY_MAP } from \"../../dictionary/eras\";\r\nimport { DownloadOutlined, PlusOutlined } from \"@ant-design/icons/lib/icons\";\r\nimport {\r\n  deleteResidentialBuildingByIp,\r\n  editResidentialBuildingById,\r\n  editResidentialBuildingShow,\r\n  editNewResidentialBuilding,\r\n  insertResidentialBuilding,\r\n  setIsNewResidentialBuilding,\r\n  updateResidentialBuilding\r\n} from \"./services/action-creators\";\r\nimport { ResidentialBuildingDetailForm } from \"./ResidentialBuildingDetailForm\";\r\n\r\nclass ResidentialBuildingsPage extends React.Component<PropsFromRedux> {\r\n\r\n  createNewBuilding = () => {\r\n    const { editNewResidentialBuilding } = this.props;\r\n    editNewResidentialBuilding();\r\n  };\r\n\r\n  editRecord = (id?: number) => {\r\n    const { editResidentialBuildingById } = this.props;\r\n    id && editResidentialBuildingById(id);\r\n  };\r\n\r\n  saveDetail = (residentialBuilding: ResidentialBuilding) => {\r\n    const { isNewResidentialBuilding, updateResidentialBuilding, insertResidentialBuilding } = this.props;\r\n    isNewResidentialBuilding ? insertResidentialBuilding(residentialBuilding) : updateResidentialBuilding(residentialBuilding);\r\n  };\r\n\r\n  detailClose = () => {\r\n    const { editResidentialBuildingShow } = this.props;\r\n    editResidentialBuildingShow(false);\r\n  };\r\n\r\n  saveToFile = () => {\r\n    const { residentialBuildingList } = this.props;\r\n    downloadToFile(residentialBuildingList, 'residential-buildings.ts', 'text/plain',\r\n      \"/** Великие Строения */\\n\" +\r\n      \"import { ResidentialBuilding } from \\\"./dic-type\\\";\\n\\n\" +\r\n      \"export const GREAT_BUILDING: ResidentialBuilding[] = \", \";\\n\");\r\n  }\r\n\r\n  render() {\r\n    const { residentialBuildingList, editResidentialBuilding, isEditResidentialBuildingShow, isNewResidentialBuilding, skillList } = this.props;\r\n    const iconsSize: string = 'https://foeru.innogamescdn.com/assets/shared/icons/size.png';\r\n    return (\r\n      <>\r\n        <Row style={{ marginBottom: '5px' }}>\r\n          <Button\r\n            type=\"primary\"\r\n            icon={<DownloadOutlined/>}\r\n            onClick={this.saveToFile}\r\n          >\r\n            Сохранить как Файл\r\n          </Button>\r\n          <div style={{ flex: \"auto\" }}/>\r\n          <Button\r\n            style={{ alignItems: \"end\" }}\r\n            type=\"link\"\r\n            icon={<PlusOutlined/>}\r\n            onClick={this.createNewBuilding}\r\n          >\r\n            Добавить Великое Строение\r\n          </Button>\r\n        </Row>\r\n        <Table\r\n          dataSource={residentialBuildingList}\r\n          columns={[ {\r\n            title: '№',\r\n            dataIndex: 'id',\r\n            ellipsis: true,\r\n            width: '50px',\r\n            sorter: (a: ResidentialBuilding, b: ResidentialBuilding) => compareNumber(a.id, b.id),\r\n          }, {\r\n            title: 'Здание',\r\n            dataIndex: 'name',\r\n            ellipsis: true,\r\n            width: '300px',\r\n            sorter: (a: ResidentialBuilding, b: ResidentialBuilding) => compareAlphabetically(a.name, b.name),\r\n            render: (name: string, build: ResidentialBuilding) => (\r\n              <Tooltip placement=\"topLeft\" title={`Редактировать строение \"${build.name}\"`}>\r\n                <Button\r\n                  type='link'\r\n                  className='era-button'\r\n                  icon={<img src={build.image} height='46px' alt={build.image} className=\"skill-image\"/>}\r\n                  onClick={() => this.editRecord(build.id)}\r\n                >{name}</Button>\r\n              </Tooltip>\r\n            )\r\n          }, {\r\n            title: 'Эра',\r\n            dataIndex: 'era',\r\n            width: '250px',\r\n            sorter: (a: ResidentialBuilding, b: ResidentialBuilding) => compareAlphabetically(ERA_KEY_MAP[a.era].name, ERA_KEY_MAP[b.era].name),\r\n            render: (eraKey: number) => {\r\n              const era: EraType = ERA_KEY_MAP[eraKey];\r\n              return <div className='circle-wrapper'>\r\n                <div className='circle' style={{\r\n                  backgroundColor: `${era.background}`,\r\n                  borderColor: `${era.borderColor}`,\r\n                  color: `${era.color}`\r\n                }}>{era.short}</div>\r\n                {era.name}</div>\r\n            },\r\n          }, {\r\n            title: 'Размер',\r\n            dataIndex: 'place',\r\n            width: '90px',\r\n            render: (place?: Place) => place ?\r\n              <><img src={iconsSize} width='25px' alt={iconsSize} className=\"skill-image\"/>{`${place.x}x${place.y}`}</>\r\n              : '',\r\n          }, {\r\n            title: 'Умения',\r\n            dataIndex: 'skillTypes',\r\n            width: '300px',\r\n            render: (skillTypes?: SkillType[]) => skillList.filter(skill => skillTypes?.includes(skill.id)).map((skill, index) =>\r\n              <div><Tooltip key={index} title={skill.definition}>\r\n                <img key={skill.id} src={skill.image} width='25px' alt={skill.image} className=\"skill-image\"/>{skill.name}\r\n              </Tooltip></div>\r\n            ),\r\n          }, {\r\n            title: 'Описание',\r\n            dataIndex: 'definition',\r\n            ellipsis: true,\r\n            sorter: (a: ResidentialBuilding, b: ResidentialBuilding) => compareAlphabetically(a.definition, b.definition),\r\n          } ]}\r\n          bordered\r\n          rowKey={(gb: ResidentialBuilding) => gb.id}\r\n          pagination={false}\r\n          size='small'\r\n        />\r\n        <Modal\r\n          title={`Здание \"${editResidentialBuilding?.name}\"`}\r\n          visible={isEditResidentialBuildingShow}\r\n          onCancel={this.detailClose}\r\n          footer={false}\r\n          maskClosable={false}\r\n          width='1024px'\r\n        >\r\n          <ResidentialBuildingDetailForm\r\n            isExist={!isNewResidentialBuilding}\r\n            editResidentialBuilding={editResidentialBuilding}\r\n            onSave={this.saveDetail}\r\n            onClose={this.detailClose}\r\n          />\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapState = (state: RootStoreData) => {\r\n  const { residentialBuildingList, editResidentialBuilding, isEditResidentialBuildingShow, isNewResidentialBuilding } = state.residencies;\r\n  const { skillList } = state.skills;\r\n  return {\r\n    residentialBuildingList,\r\n    editResidentialBuilding,\r\n    isEditResidentialBuildingShow,\r\n    isNewResidentialBuilding,\r\n    skillList\r\n  };\r\n};\r\n\r\nconst mapDispatch = {\r\n  editResidentialBuildingShow,\r\n  setIsNewResidentialBuilding,\r\n  editNewResidentialBuilding,\r\n  editResidentialBuildingById,\r\n  insertResidentialBuilding,\r\n  updateResidentialBuilding,\r\n  deleteResidentialBuildingByIp,\r\n};\r\n\r\nconst connector = connect(mapState, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(ResidentialBuildingsPage);\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport {\r\n  RESIDENTIAL_BUILDING_DELETE,\r\n  RESIDENTIAL_BUILDING_EDIT_NEW,\r\n  RESIDENTIAL_BUILDING_EDIT_BY_IP,\r\n  RESIDENTIAL_BUILDING_EDIT_SHOW,\r\n  RESIDENTIAL_BUILDING_INSERT,\r\n  RESIDENTIAL_BUILDING_SET_IS_NEW,\r\n  RESIDENTIAL_BUILDING_UPDATE,\r\n} from './action-constants';\r\nimport { ResidentialBuilding } from \"../../../dictionary/dic-type\";\r\n\r\nexport const editResidentialBuildingShow = (isShow: boolean) => ({ type: RESIDENTIAL_BUILDING_EDIT_SHOW, isShow } as const);\r\nexport const setIsNewResidentialBuilding = (isNew: boolean) => ({ type: RESIDENTIAL_BUILDING_SET_IS_NEW, isNew } as const);\r\n\r\nexport const editNewResidentialBuilding = () => ({ type: RESIDENTIAL_BUILDING_EDIT_NEW } as const);\r\n\r\nexport const editResidentialBuildingById = (id: number) => ({ type: RESIDENTIAL_BUILDING_EDIT_BY_IP, id } as const);\r\n\r\nexport const insertResidentialBuilding = (residentialBuilding: ResidentialBuilding) => ({ type: RESIDENTIAL_BUILDING_INSERT, residentialBuilding } as const);\r\n\r\nexport const updateResidentialBuilding = (residentialBuilding: ResidentialBuilding) => ({ type: RESIDENTIAL_BUILDING_UPDATE, residentialBuilding } as const);\r\n\r\nexport const deleteResidentialBuildingByIp = (id: number) => ({ type: RESIDENTIAL_BUILDING_DELETE, id } as const);\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport React from \"react\";\r\nimport {\r\n  BankOutlined,\r\n  BookOutlined,\r\n  CalculatorOutlined,\r\n  GlobalOutlined,\r\n  HomeOutlined,\r\n  ReadOutlined,\r\n  ToolOutlined\r\n} from \"@ant-design/icons/lib/icons\";\r\nimport Home from \"../Home/Home\";\r\nimport ErasPage from \"../Eras/ErasPage\";\r\nimport GreatBuildingsPage from \"../GreatBuildings/GreatBuildingsPage\";\r\nimport SkillsPage from \"../Skills/SkillsPage\";\r\nimport Calculation from \"../Calculation/Calculation\";\r\nimport ResidentialBuildingsPage from \"../ResidentialBuildings/ResidentialBuildingsPage\";\r\n\r\nexport type SubmenuData = {\r\n  type: 'submenu';\r\n  key: string;\r\n  name: string;\r\n  icon?: React.ReactNode;\r\n  subMenus: MenuData[];\r\n};\r\n\r\nexport type OptionData = {\r\n  type: 'option';\r\n  key: string;\r\n  name: string;\r\n  pathname: string;\r\n  icon?: React.ReactNode;\r\n  component?: React.ReactNode;\r\n  props?: any;\r\n};\r\n\r\nexport type MenuData = SubmenuData | OptionData;\r\n\r\nexport type SelectedMenuData = {\r\n  menu: OptionData;\r\n  breadcrumbs: string[];\r\n};\r\n\r\nexport const MENU_DATA: MenuData[] = [\r\n  {\r\n    type: 'submenu', key: \"help\", name: \"Помощь\", icon: <ToolOutlined/>,\r\n    subMenus: [ {\r\n      type: 'option', key: 'calculation', name: 'Расчёт вложения', icon: <CalculatorOutlined/>,\r\n      pathname: \"/calculation\", component: <Calculation/>\r\n    },{\r\n      type: 'option', key: 'level-growing', name: 'Рост Уровня', icon: <CalculatorOutlined/>,\r\n      pathname: \"/level-growing\", component: <Calculation/>\r\n    }, {\r\n      type: 'option', key: 'home', name: 'Дома', icon: <HomeOutlined/>,\r\n      pathname: \"/home\", component: <Home/>\r\n    } ]\r\n\r\n  }, {\r\n    type: 'submenu', key: \"dic\", name: \"Словари\", icon: <ReadOutlined/>,\r\n    subMenus: [ {\r\n      type: 'option', key: \"eras\", name: \"Эпохи\", icon: <BookOutlined/>,\r\n      pathname: \"/eras\", component: <ErasPage/>\r\n    }, {\r\n      type: 'option', key: \"gb-skills\", name: \"Усиления Великих Строений\", icon: <BookOutlined/>,\r\n      pathname: \"/great-building-skills\", component: <SkillsPage/>\r\n    } ]\r\n  }, {\r\n    type: 'submenu', key: \"builds\", name: \"Строения\", icon: <BankOutlined/>,\r\n    subMenus: [ {\r\n      type: 'option', key: \"g-build\", name: \"Великие Строения\", icon: <GlobalOutlined/>,\r\n      pathname: \"/great-buildings\", component: <GreatBuildingsPage/>\r\n    }, {\r\n      type: 'option', key: \"r-build\", name: \"Жилые постройки\", icon: <HomeOutlined/>,\r\n      pathname: \"/residential-buildings\", component: <ResidentialBuildingsPage/>\r\n    } ]\r\n  }\r\n];\r\n\r\nexport const findSelectedMenuByPathname = (\r\n  pathname: string, menuData: MenuData[], breadcrumbs?: string[]\r\n): SelectedMenuData | undefined => {\r\n  const selected = menuData.map(menu => {\r\n    switch (menu.type) {\r\n      case \"submenu\":\r\n        const newBreadcrumbs: string[] = breadcrumbs ? [ ...breadcrumbs ] : [];\r\n        newBreadcrumbs.push(menu.name);\r\n        const selected = findSelectedMenuByPathname(pathname, menu.subMenus, newBreadcrumbs);\r\n        if (selected) {\r\n          return selected\r\n        }\r\n        break;\r\n      case \"option\":\r\n        if (pathname.startsWith(process.env.PUBLIC_URL + menu.pathname)) {\r\n          const newBreadcrumbs: string[] = breadcrumbs ? breadcrumbs : [];\r\n          newBreadcrumbs.push(menu.name);\r\n          return {\r\n            menu: menu,\r\n            breadcrumbs: newBreadcrumbs\r\n          }\r\n        }\r\n    }\r\n    return undefined;\r\n  }).filter(menu => menu);\r\n  return selected.length ? selected[0] : undefined;\r\n};\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport './App.scss';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\nimport { Breadcrumb, Layout, Menu, Spin } from 'antd';\r\nimport classNames from 'classnames';\r\nimport Home from \"../Home/Home\";\r\nimport { findSelectedMenuByPathname, MENU_DATA, MenuData } from \"./MenuHelper\";\r\nimport { RootStoreData } from \"../../common/types/redux-types\";\r\nimport { commonHideLoader, commonShowLoader } from \"../../common/services/action-creators\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport Calculation from \"../Calculation/Calculation\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Content, Footer, Sider } = Layout;\r\n\r\n/** Здесь указывается версия билда */\r\nconst version = '1.0.0.12';\r\n\r\nconst resolveSubmenu = (subMenus: MenuData[]) => {\r\n  return subMenus.map((menu: MenuData) => {\r\n    switch (menu.type) {\r\n      case \"option\": {\r\n        return (\r\n          <Menu.Item key={menu.key} icon={menu.icon}>\r\n            <span>{menu.name}</span>\r\n            <Link to={menu.pathname}/>\r\n          </Menu.Item>\r\n        );\r\n      }\r\n      case \"submenu\": {\r\n        return (\r\n          <SubMenu key={menu.key} icon={menu.icon} title={menu.name}>\r\n            {resolveSubmenu(menu.subMenus)}\r\n          </SubMenu>\r\n        );\r\n      }\r\n      default:\r\n        return null;\r\n    }\r\n  });\r\n};\r\n\r\nconst resolveRoutes = (subMenus: MenuData[]): any[] => {\r\n  return subMenus.map((menu: MenuData) => {\r\n    const summary = [];\r\n    switch (menu.type) {\r\n      case \"option\": {\r\n        summary.push(\r\n          <Route key={menu.key} path={menu.pathname}>\r\n            {menu.component}\r\n          </Route>\r\n        );\r\n        break;\r\n      }\r\n      case \"submenu\": {\r\n        summary.push(resolveRoutes(menu.subMenus));\r\n        break;\r\n      }\r\n    }\r\n    return summary;\r\n  });\r\n};\r\n\r\nconst RESOLVED_SUBMENUS = resolveSubmenu(MENU_DATA);\r\nconst RESOLVED_ROUTES = resolveRoutes(MENU_DATA);\r\n\r\nconst App: React.FC<PropsFromRedux> = (props) => {\r\n\r\n  const [ menuCollapsed, setMenuCollapsed ] = useState<boolean>(true);\r\n  const [ selectedKeys, setSelectedKeys ] = useState<string[]>([ '' ]);\r\n  const [ breadcrumbs, setBreadcrumbs ] = useState<string[]>([ '...' ]);\r\n\r\n  useEffect(() => {\r\n    onSelectMenu();\r\n  }, []);\r\n\r\n  const onSelectMenu = () => {\r\n    const selectedMenu = findSelectedMenuByPathname(window.location.pathname, MENU_DATA);\r\n    setSelectedKeys([ selectedMenu ? selectedMenu.menu.key : '' ]);\r\n    setBreadcrumbs(selectedMenu ? selectedMenu.breadcrumbs : [ '...' ]);\r\n  };\r\n\r\n  return (\r\n    <Spin spinning={props.loading} size=\"large\" tip={\"Загрузка данных\"}>\r\n      <Layout className='app' >\r\n        <Sider\r\n          className=\"app__left-menu\"\r\n          collapsible\r\n          collapsed={menuCollapsed}\r\n          onCollapse={(collapsed) => {\r\n            setMenuCollapsed(collapsed);\r\n          }}\r\n        >\r\n          <div className={classNames(\"app__left-menu__logo\", { \"app__left-menu__logo--short\": menuCollapsed })}><span>FoeHelp</span></div>\r\n          <Menu\r\n            mode=\"inline\"\r\n            theme='dark'\r\n            selectedKeys={selectedKeys}\r\n            onSelect={onSelectMenu}\r\n            style={{ height: '100%' }}\r\n          >\r\n            {RESOLVED_SUBMENUS}\r\n          </Menu>\r\n        </Sider>\r\n        <Layout style={{ padding: '0 12px' }}>\r\n          <Breadcrumb style={{ margin: '6px 0' }}>\r\n            {breadcrumbs.map((crumb: string, index: number) => <Breadcrumb.Item key={index}>{crumb}</Breadcrumb.Item>)}\r\n          </Breadcrumb>\r\n          <Content className=\"app__content\">\r\n            <Switch>\r\n              <Route key='zero' exact path=\"/\" component={Calculation}/>\r\n              <Route key='_home' path=\"/home\" component={Home}/>\r\n              {RESOLVED_ROUTES}\r\n            </Switch>\r\n          </Content>\r\n          <Footer className='app__footer'>LasGIS ©2020 Created using Ant Design - version({version})</Footer>\r\n        </Layout>\r\n      </Layout>\r\n    </Spin>\r\n  );\r\n};\r\n\r\nconst mapState = (state: RootStoreData) => {\r\n  const { loading } = state.common;\r\n  return {\r\n    loading\r\n  };\r\n};\r\n\r\nconst mapDispatch = {\r\n  commonShowLoader,\r\n  commonHideLoader\r\n};\r\n\r\nconst connector = connect(mapState, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(App);\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport { createHashHistory } from 'history';\r\n\r\nexport default createHashHistory();\r\n","/*\n * Copyright 2020 LasGIS FOE Helper\n */\n\nimport { COMMON_HIDE_LOADER, COMMON_SHOW_LOADER } from './action-constants';\nimport { CommonActions, CommonStoreData } from './types';\n\nconst initialState: CommonStoreData = {\n  loading: false,\n};\n\nexport function commonReducer(state: CommonStoreData = initialState, action: CommonActions): CommonStoreData {\n  switch (action.type) {\n    case COMMON_SHOW_LOADER:\n      return { ...state, loading: true };\n    case COMMON_HIDE_LOADER:\n      return { ...state, loading: false };\n    default:\n      return state;\n  }\n}\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport {\r\n  SKILLS_DELETE_SKILL,\r\n  SKILLS_EDIT_NEW_SKILL,\r\n  SKILLS_EDIT_SKILL_BY_IP,\r\n  SKILLS_EDIT_SKILL_SHOW,\r\n  SKILLS_INSERT_SKILL,\r\n  SKILLS_SEARCH_VALUE,\r\n  SKILLS_SET_IS_NEW_SKILL,\r\n  SKILLS_UPDATE_SKILL\r\n} from './action-constants';\r\nimport { SkillsActions, SkillsStoreData } from './types';\r\nimport { SKILLS } from \"../../../dictionary/skills\";\r\nimport { Skill } from \"../../../dictionary/dic-type\";\r\n\r\nconst initialState: SkillsStoreData = {\r\n  searchValue: '',\r\n  skillList: SKILLS,\r\n  editSkill: undefined,\r\n  isEditSkillShow: false,\r\n  isNewSkill: false,\r\n};\r\n\r\nexport function skillsReducer(state: SkillsStoreData = initialState, action: SkillsActions): SkillsStoreData {\r\n  switch (action.type) {\r\n    case SKILLS_SEARCH_VALUE:\r\n      return { ...state, searchValue: action.searchValue };\r\n    case SKILLS_EDIT_SKILL_SHOW:\r\n      return { ...state, isEditSkillShow: action.isShow };\r\n    case SKILLS_SET_IS_NEW_SKILL:\r\n      return { ...state, isNewSkill: action.isNew };\r\n\r\n    case SKILLS_EDIT_NEW_SKILL:\r\n      return {\r\n        ...state,\r\n        editSkill: undefined,\r\n        isEditSkillShow: true,\r\n        isNewSkill: true,\r\n      };\r\n    case SKILLS_EDIT_SKILL_BY_IP: {\r\n      const filtered: Skill[] = state.skillList.filter(skill => skill.id === action.id);\r\n      if (filtered.length) {\r\n        return {\r\n          ...state,\r\n          editSkill: filtered[0],\r\n          isEditSkillShow: true,\r\n          isNewSkill: false,\r\n        };\r\n      }\r\n      return state;\r\n    }\r\n    case SKILLS_INSERT_SKILL:\r\n      return {\r\n        ...state,\r\n        skillList: state.skillList.concat([ action.skill ]),\r\n        isEditSkillShow: false,\r\n      };\r\n    case SKILLS_UPDATE_SKILL:\r\n      return {\r\n        ...state,\r\n        skillList: state.skillList.map(skl => (skl.id === action.skill.id) ? action.skill : skl),\r\n        isEditSkillShow: false,\r\n      };\r\n    case SKILLS_DELETE_SKILL:\r\n      return {\r\n        ...state,\r\n        skillList: state.skillList.filter(skl => skl.id !== action.id),\r\n        isEditSkillShow: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { Skill } from \"./dic-type\";\n\nexport const SKILLS: Skill[] = [ {\n  id: \"population\",\n  name: \"Население\",\n  definition: \"Обеспечивает следующий ресурс: Население.\",\n  image: \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_population.png\"\n}, {\n  id: \"goods\",\n  name: \"Производство товаров\",\n  image: \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_goods.png\",\n  definition: \"Производит случайные товары из эпохи игрока каждые 24 часа. Начиная с эпохи Модерна, производит в два раза больше полуфабрикатов.\"\n}, {\n  id: \"military\",\n  name: \"Неистовство\",\n  image: \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_military.png\",\n  definition: \"Атака и защита атакующих боевых единиц повышаются на определенный процент.\"\n}, {\n  id: \"happy\",\n  name: \"Уровень счастья\",\n  image: \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_happy.png\",\n  definition: \"Обеспечивает следующий ресурс: Уровень счастья.\"\n}, {\n  id: \"medals\",\n  name: \"Производство медалей\",\n  image: \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_medals.png\",\n  definition: \"Производит ресурс «Медали» каждые 24 часа.\"\n}, {\n  id: \"supplies_plus\",\n  name: \"Изобилие\",\n  image: \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_supplies.png\",\n  definition: \"Первые собранные ресурсы здания Ресурсы умножаются на определенный процент.\"\n}, {\n  id: \"supplies\",\n  name: \"Производство ресурсов\",\n  image: \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_supplies.png\",\n  definition: \"Производит ресурс «Ресурсы» каждые 24 часа.\"\n}, {\n  id: \"forge_points\",\n  name: \"Исследования\",\n  image: \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_forgepoints.png\",\n  definition: \"Производит ресурс «Стратегические очки» каждые 24 часа.\"\n}, {\n  id: \"coins\",\n  name: \"Производство монет\",\n  image: \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_coins.png\",\n  definition: \"Производит ресурс «Монеты» каждые 24 часа.\"\n}, {\n  id: \"coins_plus\",\n  name: \"Приток монет\",\n  definition: \"Первые собранные ресурсы здания Монеты умножаются на определенный процент.\",\n  image: \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_coins.png\"\n}, {\n  id: \"fierce_resistance\",\n  name: \"Жестокое сопротивление\",\n  image: \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_fierce_resistance.png\",\n  definition: \"Атака и защита обороняющихся боевых единиц повышаются на определенный процент. К тому же гильдия получает определенную прибавку к резерву.\"\n}, {\n  id: \"scroll\",\n  name: \"Квест-бонус\",\n  image: \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_scroll.png\",\n  definition: \"Получая за выполненные задания монеты, ресурсы, товары, бриллианты или медали, вы получаете дополнительный процент сверху.\"\n}, {\n  id: \"penal_unit\",\n  name: \"Карательный юнит\",\n  image: \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_penal_unit.png\",\n  definition: \"Производит свободные боевые единицы военного здания в городе игрока каждые 24 часа. Ускорение найма гильдии снижает время.\"\n}, {\n  id: \"defence\",\n  name: \"Бонус резерва\",\n  image: \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_defence.png\",\n  definition: \"Гильдия получает определенную прибавку к резерву.\"\n}, {\n  id: \"guild_goods\",\n  name: \"Товары гильдии\",\n  image: \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_guild_goods.png\",\n  definition: \"Производит некоторое количество каждого текущего товара для казны гильдии. Можно собрать только находясь в гильдии.\"\n}, {\n  id: \"aid_goods\",\n  name: \"Товары за помощь\",\n  image: \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_aid_goods.png\",\n  definition: \"За первые случаи помощи зданию вы получаете случайный товар той эпохи, к которой относится здание.\"\n}, {\n  id: \"plunder_goods\",\n  name: \"Товары за грабёж\",\n  image: \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_plunder_goods.png\",\n  definition: \"За первые грабежи здания вы получаете случайный товар той эпохи, к которой относится здание.\"\n}, {\n  id: \"contribution_boost\",\n  name: \"Приз за сотрудничество\",\n  image: \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_contribution_boost.png\",\n  definition: \"Награды за вложение повышаются на определенный процент.\"\n}, {\n  id: \"aid_blueprints\",\n  name: \"Чертежи за помощь\",\n  image: \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_aid_blueprints.png\",\n  definition: \"Повышает шанс найти чертеж, помогая другому игроку.\"\n}, {\n  id: \"helping_hands\",\n  name: \"Рука помощи\",\n  image: \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_helping_hands.png\",\n  definition: \"Добавляет шанс получить что-нибудь дополнительное за помощь другим игрокам.\"\n}, {\n  id: \"relic_hunt\",\n  name: \"Охота за реликвиями\",\n  image: \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_relic_hunt.png\",\n  definition: \"Шанс появления скрытой реликвии на карте Экспедиции гильдии после разрешения столкновения.\"\n}, {\n  id: \"critical_hit_chance\",\n  name: \"Критический удар\",\n  image: \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_critical_hit_chance.png\",\n  definition: \"Шанс нанести 150% урона боевым единицам той же эпохи.\"\n}, {\n  id: \"plunder_and_pillage\",\n  name: \"Грабёж и мародёрство\",\n  image: \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_plunder_and_pillage.png\",\n  definition: \"Добавляет шанс удвоить награбленные ресурсы.\"\n}, {\n  id: \"first_strike\",\n  name: \"Первый удар\",\n  image: \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_first_strike.png\",\n  definition: \"В первых битвах есть шанс убить одну боевую единицу врага в начале боя. Если в битве две волны, то умение действует только во время первой.\"\n}, {\n  id: \"double_collect\",\n  name: \"Двойная коллекция\",\n  image: \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_double_collect.png\",\n  definition: \"При первом сборе есть шанс удвоить собранные ресурсы. Не касается военных зданий и Великих строений.\"\n}, {\n  id: \"advanced_tactics\",\n  name: \"Улучшенная тактика\",\n  image: \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_advanced_tactics.png\",\n  definition: \"Атака и защита атакующих и обороняющихся боевых единиц повышаются на определенный процент.\"\n}, {\n  id: \"spoils_of_war\",\n  name: \"Военные трофеи\",\n  image: \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_spoils_of_war.png\",\n  definition: \"После победы в первых нескольких битвах у вас будет шанс получить случайную награду.\"\n}, {\n  id: \"previous_era_good_production\",\n  name: \"Производство товаров предыдущей эпохи\",\n  image: \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_previous_era_good_production.png\",\n  definition: \"Производит случайные товары предыдущей эпохи каждые 24 часа. В Бронзовом веке производит товары Бронзового века.\"\n}, {\n  id: \"missile_launch\",\n  name: \"Запуск ракеты\",\n  image: \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_missile_launch.png\",\n  definition: \"В первых битвах есть шанс убить половину войска врага в начале боя. Если в битве две волны, то умение применяется только к первой волне.\"\n}, {\n  id: \"diplomatic_gifts\",\n  name: \"Дипломатические дары\",\n  image: \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_diplomatic_gifts.png\",\n  definition: \"После победы в первых нескольких переговорах (исключая переговоры в поселениях) у вас будет шанс получить случайную награду.\"\n}, {\n  id: \"special_goods\",\n  name: \"Орбитальный транспорт\",\n  image: \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_special_goods.png\",\n  definition: \"Начиная с эпохи Арктического будущего производит особые ресурсы каждые 24 часа. Вероятность и типы особых ресурсов зависят от эпохи. До эпохи Арктического будущего производит медали.\"\n} ];\n","/** Великие Строения */\nimport { GreatBuilding } from \"./dic-type\";\n\nexport const GREAT_BUILDING: GreatBuilding[] = [ {\n  id: 1, type: \"great\",\n  name: \"Обсерватория\",\n  era: 0,\n  place: { x: 3, y: 3, b: 1 },\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_AllAge_EasterBonus4.png\",\n  definition: \"Построенная для наблюдения астрономических событий, высокая Обсерватория собирает знания, которые неоценимы для альянсов. Помимо наблюдения за звездами и небом, слежение за земными событиями помогает обнаружить новые ресурсы и получить преимущество над конкурентами.\",\n  skillTypes: [ \"guild_goods\", \"defence\" ]\n}, {\n  id: 2, type: \"great\",\n  name: \"Храм Реликвий\",\n  era: 0,\n  definition: \"Храм реликвий основан на древней мудрости, полученной во время ваших экспедиций гильдии. Он хранит знания редких реликвий, которые вы можете найти в ходе исследования карты экспедиций.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_AllAge_Expedition.png\",\n  skillTypes: [ \"relic_hunt\" ],\n  place: { x: 6, y: 6, b: 1 }\n}, {\n  id: 3, type: \"great\",\n  name: \"Дельфийский Оракул\",\n  era: 0,\n  skillTypes: [ \"supplies\", \"happy\" ],\n  place: { x: 3, y: 3, b: 1 },\n  definition: \"Жрица Дельфийского оракула слышала слова бога Аполлона и говорила от его имени. Древние греки и чужеземцы задавали ей вопросы, чтобы заглянуть в своё будущее.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_AllAge_Oracle.png\"\n}, {\n  id: 4, type: \"great\",\n  name: \"Вавилонская башня\",\n  era: 2,\n  skillTypes: [ \"goods\", \"population\" ],\n  place: { x: 4, y: 4, b: 1 },\n  definition: \"Легендарная Вавилонская башня должна была быть произведением искусства древних архитекторов. Если бы она существовала, она бы утонула в посетителях со всех уголков планеты.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_BronzeAge_Landmark1.png\"\n}, {\n  id: 5, type: \"great\",\n  name: \"Статуя Зевса\",\n  era: 2,\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_BronzeAge_Landmark2.png\",\n  skillTypes: [ \"military\" ],\n  place: { x: 2, y: 3, b: 1 },\n  definition: \"Статуя Зевса на Олимпе была одним из семи чудес света Древнего мира. Её великолепие вдохновляло поколения греческих солдат.\"\n}, {\n  id: 6, type: \"great\",\n  name: \"Колизей\",\n  era: 3,\n  definition: \"Колизей — бриллиант, венчающий корону города городов, коим являлся Рим. В нём устраивалось множество развлечений, но нам он запомнился как место проведения кровавых боёв гладиаторов.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_IronAge_Landmark1.png\",\n  skillTypes: [ \"medals\", \"happy\" ],\n  place: { x: 6, y: 7, b: 1 }\n}, {\n  id: 7, type: \"great\",\n  name: \"Александрийский маяк\",\n  era: 3,\n  definition: \"Веками Александрийский Маяк был самым высоким рукотворным строением на Земле. Его луч света направлял путников со всего света в порт Александрии.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_IronAge_Landmark2.png\",\n  skillTypes: [ \"goods\", \"supplies_plus\" ],\n  place: { x: 4, y: 4, b: 1 }\n}, {\n  id: 8, type: \"great\",\n  name: \"Собор Святой Софии\",\n  era: 4,\n  definition: \"Одна из самых старых и самых великих церквей в мире, Собор святой Софии, была посвящена мудрости Бога. Она была гордостью всех империй, которые удерживали её.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_EarlyMiddleAge_Landmark1.png\",\n  skillTypes: [ \"forge_points\", \"happy\" ],\n  place: { x: 7, y: 6, b: 1 }\n}, {\n  id: 9, type: \"great\",\n  name: \"Ахенский Собор\",\n  era: 4,\n  definition: \"Ахенский Собор, также известный как Имперский Собор, был построен Карлом Великим и обозначал Ахен центром империи.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_EarlyMiddleAge_Landmark2.png\",\n  skillTypes: [ \"coins\", \"military\" ],\n  place: { x: 4, y: 6, b: 1 }\n}, {\n  id: 10, type: \"great\",\n  name: \"Собор Святого Марка\",\n  era: 5,\n  definition: \"Построенная торговцами Венецианской республики, Базилика показывала богатство и силу Венецианских торговцев. Веками добавлялось всё больше и больше украшений, большинство из которых, были привезены из далёких стран.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_HighMiddleAge_Landmark1.png\",\n  skillTypes: [ \"goods\", \"coins_plus\" ],\n  place: { x: 6, y: 6, b: 1 }\n}, {\n  id: 11, type: \"great\",\n  name: \"Нотр-Дам\",\n  era: 5,\n  definition: \"Собор Парижской Богоматери был вершиной архитектурного искусства и не имел аналогов в западной Европе. Его великолепие и безупречность вдохновляли всех ремесленников, которые смотрели на него.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_HighMiddleAge_Landmark3.png\",\n  skillTypes: [ \"happy\", \"supplies\" ],\n  place: { x: 4, y: 6, b: 1 }\n}, {\n  id: 12, type: \"great\",\n  name: \"Собор Василия Блаженного\",\n  era: 6,\n  definition: \"Храм Василия Блаженного на Красной площади Москвы был построен в честь завершения Русско-Казанской войны. Он вдохновляет всех россиян и является центральной точкой Москвы.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_LateMiddleAge_Landmark1.png\",\n  skillTypes: [ \"coins\", \"fierce_resistance\" ],\n  place: { x: 5, y: 5, b: 1 }\n}, {\n  id: 13, type: \"great\",\n  name: \"Кастель-Дель-Монте\",\n  era: 6,\n  definition: \"Таинственный Кастель-дель-Монте скорее всего предназначался для того, чтобы удерживать дворян-повстанцев. Множество его загадок и особенностей озадачивают учёных до сих пор.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_LateMiddleAge_Landmark3.png\",\n  skillTypes: [ \"forge_points\", \"military\" ],\n  place: { x: 5, y: 5, b: 1 }\n}, {\n  id: 14, type: \"great\",\n  name: \"Дильский замок\",\n  era: 7,\n  definition: \"Построенный Генрихом VIII, чтобы противостоять объединённому франко-испанскому нашествию, Дильский замок прошёл проверку временем, доказав, что он является ценным стратегическим достоянием Британской империи.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_ColonialAge_Landmark2.png\",\n  skillTypes: [ \"medals\", \"fierce_resistance\" ],\n  place: { x: 7, y: 7, b: 1 }\n}, {\n  id: 15, type: \"great\",\n  name: \"Фрауэнкирхе\",\n  era: 7,\n  definition: \"Построенный совместными усилиями протестантского населения Дрездена и их Римско-Католическим правителем, Фрауэнкирхе устояла перед многим трудностями и войнами.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_ColonialAge_Landmark1.png\",\n  skillTypes: [ \"goods\", \"happy\" ],\n  place: { x: 5, y: 5, b: 1 }\n}, {\n  id: 16, type: \"great\",\n  name: \"Капитолий\",\n  era: 8,\n  definition: \"Здание Капитолия в Вашингтоне, округ Колумбия, где собирались представители всех штатов входящих в состав страны. Он является символом победы демократии в Новом Свете, манящий к себе людей со всех уголков земного шара.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_IndustrialAge_Landmark2.png\",\n  skillTypes: [ \"supplies\", \"population\" ],\n  place: { x: 7, y: 5, b: 1 }\n}, {\n  id: 17, type: \"great\",\n  name: \"Альберт-Холл\",\n  era: 8,\n  definition: \"Назван в память об Альберте, Принце-консорте Соединенного королевства при королеве Виктории, Королевский Альберт-холл место проведения самых значимых событий Великобритании. Его атмосфера и репутация притягивает лучшие творческие умы планеты.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_IndustrialAge_Landmark1.png\",\n  skillTypes: [ \"goods\", \"supplies_plus\" ],\n  place: { x: 7, y: 6, b: 1 }\n}, {\n  id: 18, type: \"great\",\n  name: \"Шато-Фронтенак\",\n  era: 9,\n  definition: \"На фоне неба Квебек-Сити чётко выделяется Шато-Фронтенак - легендарный гранд-отель. Известное имя и роскошь отеля привлекают состоятельных гостей со всего мира. Они готовы платить любые деньги за комфорт, предлагаемый им в Шато. В свою очередь, они ожидают безоговорочного выполнения всех своих - порой очень экстравагантных - желаний.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_ProgressiveEra_Landmark2.png\",\n  skillTypes: [ \"coins\", \"scroll\" ],\n  place: { x: 5, y: 6, b: 1 }\n}, {\n  id: 19, type: \"great\",\n  name: \"Алькатрас\",\n  era: 9,\n  definition: \"Тюрьма строгого режима на острове Алькатрас, использовалась как место заключения одних из самых известных преступников в новейшей истории. Изначально на острове размещался военный гарнизон позднее ставший тюрьмой. Не смотря на короткий период 30-ти летнего использования Алькатрас в качестве федеральной тюрьмы, он стал символом самых низменных аспектов человеческой природы и крайностей, на которое готово пойти общество для удержания их.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_ProgressiveEra_Landmark1.png\",\n  skillTypes: [ \"penal_unit\", \"happy\" ],\n  place: { x: 10, y: 7, b: 1 }\n}, {\n  id: 20, type: \"great\",\n  name: \"Спейс-Нидл\",\n  era: 10,\n  definition: \"Сиэтлская башня Спейс-Нидл была построена в 1962 году для Всемирной выставки. Воплотив в себе новейший дизайн и инженерное искусство, она стала символом северо-западного побережья Америки, привлекающим миллионы туристов со всего мира.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_ModernEra_Landmark1.png\",\n  skillTypes: [ \"coins\", \"happy\" ],\n  place: { x: 6, y: 5, b: 1 }\n}, {\n  id: 21, type: \"great\",\n  name: \"Атомиум\",\n  era: 10,\n  definition: \"Построенный для Всемирной выставки 1958 года, первой после Второй Мировой войны, Атомиум быстро стал культовым сооружением для Брюсселя. Он продолжает олицетворять дух деятельности, технологического продвижения и сотрудничества, которые являются ключом к будущему Европы.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_ModernEra_Landmark2.png\",\n  skillTypes: [ \"guild_goods\", \"happy\" ],\n  place: { x: 7, y: 6, b: 1 }\n}, {\n  id: 22, type: \"great\",\n  name: \"Хабитат\",\n  era: 11,\n  definition: \"Жилищный комплекс Хабитат-67 являет собой блоки, поставленные друг на друга с виду в хаотическом порядке. Он является одним из самых зрелищных и дальновидных достижений канадской архитектуры. Его сложный дизайн, архитектура, учитывающая аспекты человеческого жилья и плотность застройки городов, продолжает вдохновлять архитекторов всего мира.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_PostModernEra_Landmark2.png\",\n  skillTypes: [ \"coins\", \"population\" ],\n  place: { x: 7, y: 6, b: 1 }\n}, {\n  id: 23, type: \"great\",\n  name: \"Космодром Канаверал\",\n  era: 11,\n  definition: \"Основанная после Второй Мировой Войны, база ВВС на мысе Канаверал получила свою известность во время «космической гонки», кульминационным моментом которой стала легендарная миссия Апполон-11. В наши дни мыс Канаверал продолжает отправлять космические корабли, чтобы смело идти туда, где ещё не ступала нога человечества.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_PostModernEra_Landmark1.png\",\n  skillTypes: [ \"forge_points\" ],\n  place: { x: 4, y: 5, b: 1 }\n}, {\n  id: 24, type: \"great\",\n  name: \"Храм Лотоса\",\n  era: 12,\n  definition: \"Храм Лотоса в Нью-Дели — святилище открытое для последователей всех религий, находится в самой густонаселенной части мира. Миллионы людей находят в храме веру и понимание.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_ContemporaryEra_Landmark1.png\",\n  skillTypes: [ \"coins\", \"happy\" ],\n  place: { x: 6, y: 6, b: 1 }\n}, {\n  id: 25, type: \"great\",\n  name: \"Башня Инноваций\",\n  era: 12,\n  definition: \"Башня Инноваций в Гонконге символизирует смелый уход от классической архитектуры и представляет собой уникальную смесь инноваций и интуитивной организации. Может быть, это форма будущего?\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_ContemporaryEra_Landmark2.png\",\n  skillTypes: [ \"forge_points\", \"population\" ],\n  place: { x: 6, y: 6, b: 1 }\n}, {\n  id: 26, type: \"great\",\n  name: \"Башня перемирия\",\n  era: 13,\n  definition: \"Эта постройка символизирует единство. Затонувшее здание состоит из нескольких эффектных архитектурных элементов и хранится в прочной стеклянной витрине. Впечатляющая конструкция напоминает собор и опирается на саму себя, являясь символом поддержки и сотрудничества.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_TomorrowEra_Landmark2.png\",\n  skillTypes: [ \"supplies\", \"aid_goods\" ],\n  place: { x: 6, y: 5, b: 1 }\n}, {\n  id: 27, type: \"great\",\n  name: \"Вояджер V1\",\n  era: 13,\n  definition: \"Смесь отеля и гигантского вращающегося колеса, Вояджер V1 обладает роскошными кабинами, которые медленно вращаются и открывает превосходный обзор. Они подойдут для коктейльных вечеринок, свадебных торжеств, небольших конференций или тайных встреч, на которых будет решаться судьба стран.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_TomorrowEra_Landmark1.png\",\n  skillTypes: [ \"supplies\", \"plunder_goods\" ],\n  place: { x: 4, y: 7, b: 1 }\n}, {\n  id: 28, type: \"great\",\n  name: \"Арка\",\n  era: 14,\n  definition: \"Построенный в научных целях гигантский биосферный проект «Арка» включает в себя ряд различных экосистем, заключенных в лаборатории замкнутого цикла. Ученые со всего мира собираются, чтобы поделиться уникальными открытиями о нашей планете.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_FutureEra_Landmark1.png\",\n  skillTypes: [ \"guild_goods\", \"contribution_boost\" ],\n  place: { x: 7, y: 5, b: 1 }\n}, {\n  id: 29, type: \"great\",\n  name: \"Дождевой лес\",\n  era: 14,\n  definition: \"Для борьбы с природными бедствиями типа пожаров и засух в огромном небоскребе проекта «Дождевой лес» производится сбор и хранение дождевой воды. Этой уникальной конструкцией управляют люди из разных стран мира, взамен получающие широкий спектр научных знаний.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_FutureEra_Landmark2.png\",\n  skillTypes: [ \"goods\", \"aid_blueprints\" ],\n  place: { x: 6, y: 6, b: 1 }\n}, {\n  id: 30, type: \"great\",\n  name: \"Статуя Геи\",\n  era: 15,\n  definition: \"Гея, Гайя, Теллура или Мать Природа, она — это персонификация планеты Земля. Эта статуя посвящена Богине, которая может быть одновременно мирной и воинственной.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_ArcticFuture_Landmark1.png\",\n  skillTypes: [ \"medals\", \"happy\" ],\n  place: { x: 6, y: 4, b: 1 }\n}, {\n  id: 31, type: \"great\",\n  name: \"Арктическая оранжерея\",\n  era: 15,\n  definition: \"Изначально Оранжерея должна была быть построена в Антарктике для выращивания снежных маков и являться ботаническим и медицинским центром исследования и зоной отдыха. Эта адаптация пошла несколько дальше. Покров снега создает достаточно света, чтобы вырастить все виды экзотических растений со всего света.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_ArcticFuture_Landmark2.png\",\n  skillTypes: [ \"forge_points\", \"critical_hit_chance\" ],\n  place: { x: 7, y: 7, b: 1 }\n}, {\n  id: 32, type: \"great\",\n  name: \"Зернохранилище\",\n  era: 15,\n  definition: \"Зернохранилище сохраняет большое разнообразие семян растений и защищает их генетический код от глобальных катастроф и стихийных бедствий. Хранящиеся замороженные образцы семян являются резервными копиями других банков мировых семян.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_ArcticFuture_Landmark3.png\",\n  skillTypes: [ \"supplies\", \"helping_hands\" ],\n  place: { x: 5, y: 6, b: 1 }\n}, {\n  id: 33, type: \"great\",\n  name: \"Музей Атлантиды\",\n  era: 16,\n  definition: \"В прошлом это был памятник бесстрашию и неукротимой мощи империи. Не так давно его снова открыли и превратили в популярный музей. Некоторые считают, что это единственное веское доказательство существования Атлантиды, поэтому легенда о ней всё ещё жива\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_OceanicFuture_Landmark1.png\",\n  skillTypes: [ \"goods\", \"plunder_and_pillage\" ],\n  place: { x: 6, y: 7, b: 1 }\n}, {\n  id: 34, type: \"great\",\n  name: \"Кракен\",\n  era: 16,\n  definition: \"Выпускайте кракена!\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_OceanicFuture_Landmark2.png\",\n  skillTypes: [ \"forge_points\", \"first_strike\" ],\n  place: { x: 5, y: 5, b: 1 }\n}, {\n  id: 35, type: \"great\",\n  name: \"Синяя галактика\",\n  era: 16,\n  definition: \"В Синей галактике содержится самая полная в мире коллекция медуз. Также здесь посетители могут исследовать чудеса подводных глубин.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_OceanicFuture_Landmark3.png\",\n  skillTypes: [ \"medals\", \"double_collect\" ],\n  place: { x: 7, y: 5, b: 1 }\n}, {\n  id: 36, type: \"great\",\n  name: \"Терракотовая армия\",\n  era: 17,\n  definition: \"Терракотовая армия была создана в честь китайского императора Цинь Шихуанди. Сейчас туристы могут увидеть не только статуи воинов, но и виртуальные дополнения, демонстрирующие армию в движении, а также дополнительную информацию.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_VirtualFuture_Landmark1.png\",\n  skillTypes: [ \"advanced_tactics\" ],\n  place: { x: 4, y: 6, b: 1 }\n}, {\n  id: 37, type: \"great\",\n  name: \"Замок Химэдзи\",\n  era: 17,\n  definition: \"Замок Химэдзи невероятно красив, однако поговаривали, что захватить его невозможно. Сейчас на него наложены виртуальные изображения, которые показывают, как он менялся в ходе строительства.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_VirtualFuture_Landmark2.png\",\n  skillTypes: [ \"supplies\", \"spoils_of_war\" ],\n  place: { x: 6, y: 6, b: 1 }\n}, {\n  id: 38, type: \"great\",\n  name: \"Звездочёт\",\n  era: 18,\n  definition: \"«Звездочёт» — один из самых мощных наземных телескопов, с помощью которого можно в подробностях рассмотреть Солнечную систему. Он сыграл ключевую роль в колонизации Марса.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_SpaceAgeMars_Landmark1.png\",\n  skillTypes: [ \"previous_era_good_production\" ],\n  place: { x: 5, y: 5, b: 1 }\n}, {\n  id: 39, type: \"great\",\n  name: \"Проект «Дева»\",\n  era: 18,\n  definition: \"Целью проекта «Дева» являлся запуск космических зондов. Но при строительстве произошла ошибка, в результате которой изначальная цель оказалась недостижимой. Поэтому проект теперь используется для запуска военных ракет.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_SpaceAgeMars_Landmark2.png\",\n  skillTypes: [ \"coins\", \"missile_launch\" ],\n  place: { x: 5, y: 5, b: 1 }\n}, {\n  id: 40, type: \"great\",\n  name: \"Космический авианосец\",\n  era: 19,\n  definition: \"Космический авианосец обеспечивает связь с городами по всему миру и даже с другими планетами. Чем лучше связь, тем больше ресурсов в нашей столице.\",\n  image: \"https://foeru.innogamescdn.com/assets/city/buildings/X_SS_SpaceAgeAsteroidBelt_Landmark1.png\",\n  skillTypes: [ \"special_goods\", \"diplomatic_gifts\" ],\n  place: { x: 7, y: 4, b: 1 }\n} ];\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport {\r\n  GREAT_BUILDING_DELETE,\r\n  GREAT_BUILDING_EDIT_NEW,\r\n  GREAT_BUILDING_EDIT_BY_IP,\r\n  GREAT_BUILDING_EDIT_SHOW,\r\n  GREAT_BUILDING_INSERT,\r\n  GREAT_BUILDING_SET_IS_NEW,\r\n  GREAT_BUILDING_UPDATE\r\n} from './action-constants';\r\nimport { GreatBuildingsActions, GreatBuildingsStoreData } from './types';\r\nimport { GREAT_BUILDING } from \"../../../dictionary/great-buildings\";\r\nimport { GreatBuilding } from \"../../../dictionary/dic-type\";\r\n\r\nconst initialState: GreatBuildingsStoreData = {\r\n  greatBuildingList: GREAT_BUILDING,\r\n  editGreatBuilding: undefined,\r\n  isEditGreatBuildingShow: false,\r\n  isNewGreatBuilding: false,\r\n};\r\n\r\nexport function greatBuildingsReducer(state: GreatBuildingsStoreData = initialState, action: GreatBuildingsActions): GreatBuildingsStoreData {\r\n  switch (action.type) {\r\n    case GREAT_BUILDING_EDIT_SHOW:\r\n      return { ...state, isEditGreatBuildingShow: action.isShow };\r\n    case GREAT_BUILDING_SET_IS_NEW:\r\n      return { ...state, isNewGreatBuilding: action.isNew };\r\n\r\n    case GREAT_BUILDING_EDIT_NEW:\r\n      return {\r\n        ...state,\r\n        editGreatBuilding: undefined,\r\n        isEditGreatBuildingShow: true,\r\n        isNewGreatBuilding: true,\r\n      };\r\n    case GREAT_BUILDING_EDIT_BY_IP: {\r\n      const filtered: GreatBuilding[] = state.greatBuildingList.filter(greatBuilding => greatBuilding.id === action.id);\r\n      if (filtered.length) {\r\n        return {\r\n          ...state,\r\n          editGreatBuilding: filtered[0],\r\n          isEditGreatBuildingShow: true,\r\n          isNewGreatBuilding: false,\r\n        };\r\n      }\r\n      return state;\r\n    }\r\n    case GREAT_BUILDING_INSERT:\r\n      return {\r\n        ...state,\r\n        greatBuildingList: state.greatBuildingList.concat([ action.greatBuilding ]),\r\n        isEditGreatBuildingShow: false,\r\n      };\r\n    case GREAT_BUILDING_UPDATE:\r\n      return {\r\n        ...state,\r\n        greatBuildingList: state.greatBuildingList.map(skl => (skl.id === action.greatBuilding.id) ? action.greatBuilding : skl),\r\n        isEditGreatBuildingShow: false,\r\n      };\r\n    case GREAT_BUILDING_DELETE:\r\n      return {\r\n        ...state,\r\n        greatBuildingList: state.greatBuildingList.filter(skl => skl.id !== action.id),\r\n        isEditGreatBuildingShow: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\n/** Жилые Строения */\r\nimport { ResidentialBuilding } from \"./dic-type\";\r\n\r\nexport const RESIDENTIAL_BUILDINGS: ResidentialBuilding[] = [ ];\r\n\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport {\r\n  RESIDENTIAL_BUILDING_DELETE,\r\n  RESIDENTIAL_BUILDING_EDIT_NEW,\r\n  RESIDENTIAL_BUILDING_EDIT_BY_IP,\r\n  RESIDENTIAL_BUILDING_EDIT_SHOW,\r\n  RESIDENTIAL_BUILDING_INSERT,\r\n  RESIDENTIAL_BUILDING_SET_IS_NEW,\r\n  RESIDENTIAL_BUILDING_UPDATE\r\n} from './action-constants';\r\nimport { ResidentialBuildingsActions, ResidentialBuildingsStoreData } from './types';\r\nimport { RESIDENTIAL_BUILDINGS } from \"../../../dictionary/residential-buildings\";\r\nimport { ResidentialBuilding } from \"../../../dictionary/dic-type\";\r\n\r\nconst initialState: ResidentialBuildingsStoreData = {\r\n  residentialBuildingList: RESIDENTIAL_BUILDINGS,\r\n  editResidentialBuilding: undefined,\r\n  isEditResidentialBuildingShow: false,\r\n  isNewResidentialBuilding: false,\r\n};\r\n\r\nexport function residentialBuildingsReducer(\r\n  state: ResidentialBuildingsStoreData = initialState,\r\n  action: ResidentialBuildingsActions\r\n): ResidentialBuildingsStoreData {\r\n\r\n  switch (action.type) {\r\n    case RESIDENTIAL_BUILDING_EDIT_SHOW:\r\n      return { ...state, isEditResidentialBuildingShow: action.isShow };\r\n    case RESIDENTIAL_BUILDING_SET_IS_NEW:\r\n      return { ...state, isNewResidentialBuilding: action.isNew };\r\n\r\n    case RESIDENTIAL_BUILDING_EDIT_NEW:\r\n      return {\r\n        ...state,\r\n        editResidentialBuilding: undefined,\r\n        isEditResidentialBuildingShow: true,\r\n        isNewResidentialBuilding: true,\r\n      };\r\n    case RESIDENTIAL_BUILDING_EDIT_BY_IP: {\r\n      const filtered: ResidentialBuilding[] = state.residentialBuildingList.filter(residentialBuilding => residentialBuilding.id === action.id);\r\n      if (filtered.length) {\r\n        return {\r\n          ...state,\r\n          editResidentialBuilding: filtered[0],\r\n          isEditResidentialBuildingShow: true,\r\n          isNewResidentialBuilding: false,\r\n        };\r\n      }\r\n      return state;\r\n    }\r\n    case RESIDENTIAL_BUILDING_INSERT:\r\n      return {\r\n        ...state,\r\n        residentialBuildingList: state.residentialBuildingList.concat([ action.residentialBuilding ]),\r\n        isEditResidentialBuildingShow: false,\r\n      };\r\n    case RESIDENTIAL_BUILDING_UPDATE:\r\n      return {\r\n        ...state,\r\n        residentialBuildingList: state.residentialBuildingList.map(skl => (skl.id === action.residentialBuilding.id) ? action.residentialBuilding : skl),\r\n        isEditResidentialBuildingShow: false,\r\n      };\r\n    case RESIDENTIAL_BUILDING_DELETE:\r\n      return {\r\n        ...state,\r\n        residentialBuildingList: state.residentialBuildingList.filter(skl => skl.id !== action.id),\r\n        isEditResidentialBuildingShow: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","/*\n * Copyright 2020 LasGIS FOE Helper\n */\n\nimport { combineReducers } from 'redux';\nimport { commonReducer } from '../common/services/reducer';\nimport { connectRouter } from \"connected-react-router\";\nimport { History } from \"history\";\nimport { skillsReducer } from \"../pages/Skills/services/reducer\";\nimport { greatBuildingsReducer } from \"../pages/GreatBuildings/services/reducer\";\nimport { residentialBuildingsReducer } from \"../pages/ResidentialBuildings/services/reducer\";\n\nexport default (history: History) => combineReducers({\n  router: connectRouter(history),\n  common: commonReducer,\n  skills: skillsReducer,\n  greatBuilds: greatBuildingsReducer,\n  residencies: residentialBuildingsReducer\n});\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport history from './history';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object'\r\n  && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(routerMiddleware(history), thunk));\r\n\r\nexport default function configureStore(preloadedState = {}) {\r\n  return createStore(rootReducer(history), preloadedState, enhancer);\r\n}\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './pages/Main/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter} from \"react-router-dom\";\r\nimport configureStore from \"./redux/configureStore\";\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n//  <React.StrictMode>\r\n  <Provider store={store}>\r\n    <HashRouter basename={process.env.PUBLIC_URL}>\r\n      <App/>\r\n    </HashRouter>\r\n  </Provider>\r\n//  </React.StrictMode>\r\n  , document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}