{"version":3,"sources":["dictionary/dic-type.ts","common/services/action-creators.ts","common/services/action-constants.ts","pages/Home/Home.tsx","dictionary/eras.ts","utils/index.ts","pages/Eras/ErasPage.tsx","dictionary/great-buildings.ts","pages/GreatBuildings/GreatBuildingsPage.tsx","pages/Skills/SkillDetailForm.tsx","components/SearchInputWithDelay.tsx","pages/Skills/SkillsPage.tsx","pages/Skills/services/action-creators.ts","pages/Skills/services/action-constants.ts","pages/Main/MenuHelper.tsx","pages/Main/App.tsx","serviceWorker.ts","redux/history.ts","common/services/reducer.ts","pages/Skills/services/reducer.ts","dictionary/skills.ts","redux/rootReducer.ts","redux/configureStore.ts","index.tsx"],"names":["EraKey","commonShowLoader","type","commonHideLoader","mapDispatch","connector","connect","state","loading","common","props","tempShowLoader","delay","setTimeout","align","onClick","danger","ERAS","short","background","borderColor","color","key","Without","name","Stone","Bronze","Iron","EarlyMiddle","HighMiddle","LateMiddle","Colonial","Industrial","Progressivism","Modern","Postmodern","NewestTime","Tomorrow","Future","Arctic","Oceanic","Virtual","Mars","Asteroid","ERA_KEY_MAP","reduce","acc","era","compareAlphabetically","a","b","aText","bText","downloadToFile","object","fileName","contentType","before","after","document","createElement","context","JSON","stringify","file","Blob","href","URL","createObjectURL","download","click","ErasPage","style","width","dataSource","columns","title","dataIndex","sorter","bordered","onRow","rowKey","pagination","size","GREAT_BUILDING","id","place","x","y","image","GreatBuildingsPage","aNum","bNum","compareNumber","render","gb","React","Component","SkillDetailForm","isExist","editSkill","onSave","onClose","Form","useForm","form","useEffect","fieldsSkill","definition","setFieldsValue","labelCol","span","wrapperCol","Item","label","rules","required","message","pattern","disabled","TextArea","justify","noStyle","htmlType","validateFields","then","values","skill","marginLeft","SearchInputWithDelay","value","placeholder","onChange","useState","undefined","timer","setTimer","tempValue","setTempValue","Search","e","newValue","target","clearTimeout","onPressEnter","allowClear","SkillsPage","editRecord","editSkillById","saveDetail","isNewSkill","updateSkill","insertSkill","createNewSkill","editNewSkill","detailClose","editSkillShow","saveAll2File","skillList","setSearchValue","searchValue","setSkillSearchValue","this","isEditSkillShow","marginBottom","icon","flex","alignItems","ellipsis","placement","className","src","alt","visible","onCancel","footer","maskClosable","isShow","setIsNewSkill","isNew","deleteSkillByIp","skills","MENU_DATA","pathname","component","subMenus","SubMenu","Menu","Content","Layout","Footer","Sider","RESOLVED_SUBMENUS","resolveSubmenu","map","menu","to","RESOLVED_ROUTES","resolveRoutes","summary","push","path","menuCollapsed","setMenuCollapsed","selectedKeys","setSelectedKeys","breadcrumbs","setBreadcrumbs","onSelectMenu","selectedMenu","findSelectedMenuByPathname","menuData","selected","newBreadcrumbs","startsWith","process","filter","length","window","location","spinning","tip","collapsible","collapsed","onCollapse","classNames","mode","theme","onSelect","height","padding","margin","crumb","index","exact","Home","Boolean","hostname","match","createHashHistory","initialState","commonReducer","action","skillsReducer","filtered","concat","skl","history","combineReducers","router","connectRouter","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","routerMiddleware","thunk","store","preloadedState","createStore","rootReducer","configureStore","ReactDOM","basename","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.94dd80c3.chunk.js","sourcesContent":["/*\r\n* Copyright 2020 LasGIS FOE Helper\r\n*/\r\n\r\n/** Эпохи */\r\nexport enum EraKey {\r\n  /** Without Century | Без Века */\r\n  Without = 0,\r\n  /** Stone Age | Каменный Век */\r\n  Stone = 1,\r\n  /** Bronze Age | Бронзовый Век */\r\n  Bronze = 2,\r\n  /** Iron Age | Железный Век */\r\n  Iron = 3,\r\n  /** Early Middle Ages | Раннее Средневековье */\r\n  EarlyMiddle = 4,\r\n  /** High Middle Ages | Высокое Средневековье */\r\n  HighMiddle = 5,\r\n  /** Late Middle Ages | Позднее Средневековье */\r\n  LateMiddle = 6,\r\n  /** Colonial Period | Колониальный период */\r\n  Colonial = 7,\r\n  /** Industrial Era | Индустриальная эпоха */\r\n  Industrial = 8,\r\n  /** Progressivism | Эра прогрессивизма */\r\n  Progressivism = 9,\r\n  /** Age of Modern | Эпоха Модерна */\r\n  Modern = 10,\r\n  /** Postmodern Era | Эпоха Постмодерна */\r\n  Postmodern = 11,\r\n  /** Newest Time | Новейшее время */\r\n  NewestTime = 12,\r\n  /** Tomorrow Era | Завтрашняя эпоха */\r\n  Tomorrow = 13,\r\n  /** Era of the Future | Эра Будущего */\r\n  Future = 14,\r\n  /** Arctic Future | Арктическое будущее */\r\n  Arctic = 15,\r\n  /** Oceanic Future | Океаническое будущее */\r\n  Oceanic = 16,\r\n  /** Virtual Future | Виртуальное будущее */\r\n  Virtual = 17,\r\n  /** Space Age Mars | Космическая эра Марса */\r\n  Mars = 18,\r\n  /** Asteroid Belt | Пояс астероидов из космической эры */\r\n  Asteroid = 19,\r\n}\r\n\r\nexport type EraType = {\r\n  key: EraKey;\r\n  short: string;\r\n  background: string;\r\n  borderColor: string;\r\n  color: string;\r\n  name: string;\r\n};\r\n\r\nexport type PlaceType = {\r\n  /** число клеток снизу вправо / */\r\n  x: number;\r\n  /** сверху вправо \\ */\r\n  y: number;\r\n  /** число клеток дороги */\r\n  b: 0 | 1 | 2;\r\n}\r\nexport type ImageType = string;\r\n\r\nexport type BuildingType = {\r\n  /** url картинки */\r\n  image?: ImageType;\r\n  /** Название */\r\n  name: string;\r\n  /** Эпоха */\r\n  era: EraKey;\r\n  /** Место */\r\n  place?: PlaceType;\r\n};\r\n\r\nexport type SkillKind =\r\n  'guild_goods'\r\n  | 'defence'\r\n  | 'relic_hunt'\r\n  | 'supplies'\r\n  | 'happy'\r\n  | 'goods'\r\n  | 'population'\r\n  | 'military'\r\n  | 'medals'\r\n  | 'supplies_plus'\r\n  | 'forge_points'\r\n  | 'coins'\r\n  | 'coins_plus'\r\n  | 'fierce_resistance'\r\n  | 'scroll'\r\n  | 'penal_unit'\r\n  | 'plunder_goods'\r\n  | 'aid_goods'\r\n  | 'contribution_boost'\r\n  | 'aid_blueprints'\r\n  | 'helping_hands'\r\n  | 'critical_hit_chance'\r\n  | 'plunder_and_pillage'\r\n  | 'first_strike'\r\n  | 'double_collect'\r\n  | 'advanced_tactics'\r\n  | 'spoils_of_war'\r\n  | 'previous_era_good_production'\r\n  | 'missile_launch'\r\n  | 'special_goods'\r\n  | 'diplomatic_gifts'\r\n  ;\r\n\r\nexport type SkillType = {\r\n  id: SkillKind;\r\n  name: string;\r\n  definition?: string;\r\n  image?: ImageType;\r\n};\r\n\r\nexport type GreatBuildingType = BuildingType & {\r\n  id: number;\r\n  /** Умения */\r\n  skills?: SkillType[];\r\n}\r\n\r\n","/*\n * Copyright 2020 LasGIS FOE Helper\n */\n\nimport { COMMON_HIDE_LOADER, COMMON_SHOW_LOADER, } from './action-constants';\n\nexport const commonShowLoader = () => ({ type: COMMON_SHOW_LOADER } as const);\nexport const commonHideLoader = () => ({ type: COMMON_HIDE_LOADER } as const);\n","/*\n * Copyright 2020 LasGIS FOE Helper\n */\n\nexport const COMMON_SHOW_LOADER = 'COMMON_SHOW_LOADER';\nexport const COMMON_HIDE_LOADER = 'COMMON_HIDE_LOADER';\n","import { Button, Space } from \"antd\";\r\nimport React from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { RootStoreData } from \"../../common/types/redux-types\";\r\nimport { commonHideLoader, commonShowLoader } from \"../../common/services/action-creators\";\r\n\r\nconst Home: React.FC<PropsFromRedux> = (props) => {\r\n\r\n  const { loading, commonHideLoader, commonShowLoader } = props;\r\n\r\n  const tempShowLoader = (delay: number) => {\r\n    commonShowLoader();\r\n    setTimeout(() => {\r\n      commonHideLoader();\r\n    }, delay);\r\n  }\r\n\r\n  return (\r\n    <Space align='center'>\r\n      <h1>{loading ? 'loading' : 'NOT'}</h1>\r\n      <Button type='primary' onClick={() => tempShowLoader(1000)}>Show Loader</Button>\r\n      <Button type='ghost' onClick={() => tempShowLoader(2000)}>2 сек</Button>\r\n      <Button type='default' onClick={() => tempShowLoader(5000)}>5 сек</Button>\r\n      <Button type='link' onClick={() => tempShowLoader(20000)}>20 сек</Button>\r\n      <Button type='primary' danger onClick={commonHideLoader}>Stop Loader</Button>\r\n    </Space>\r\n  );\r\n};\r\n\r\nconst mapState = (state: RootStoreData) => {\r\n  const { loading } = state.common;\r\n  return {\r\n    loading\r\n  };\r\n};\r\n\r\nconst mapDispatch = {\r\n  commonShowLoader,\r\n  commonHideLoader\r\n};\r\n\r\nconst connector = connect(mapState, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(Home);\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport { EraKey, EraType } from \"./dic-type\";\r\n\r\nexport const ERAS: EraType[] = [\r\n  { short: 'БЭ', background: '#216565', borderColor: '#79bcbc', color: '#ffffff', key: EraKey.Without, name: \"Без Века\" },\r\n  { short: 'КЭ', background: '#5a4d3c', borderColor: '#837864', color: '#ffffff', key: EraKey.Stone, name: \"Каменный Век\" },\r\n  { short: 'БВ', background: '#503d09', borderColor: '#d5b945', color: '#ffe783', key: EraKey.Bronze, name: \"Бронзовый Век\" },\r\n  { short: 'ЖВ', background: '#521e09', borderColor: '#ff7772', color: '#f4eea7', key: EraKey.Iron, name: \"Железный Век\" },\r\n  { short: 'РС', background: '#324125', borderColor: '#77ad81', color: '#cce2a2', key: EraKey.EarlyMiddle, name: \"Раннее Средневековье\" },\r\n  { short: 'ВС', background: '#154040', borderColor: '#3bbaba', color: '#9bf7f7', key: EraKey.HighMiddle, name: \"Высокое Средневековье\" },\r\n  { short: 'ПС', background: '#46254a', borderColor: '#d178db', color: '#f4c5f9', key: EraKey.LateMiddle, name: \"Позднее Средневековье\" },\r\n  { short: 'КП', background: '#6b3c08', borderColor: '#ffffff', color: '#fecead', key: EraKey.Colonial, name: \"Колониальный период\" },\r\n  { short: 'ИЭ', background: '#561918', borderColor: '#ffafaf', color: '#ffafaf', key: EraKey.Industrial, name: \"Индустриальная эпоха\" },\r\n  { short: 'ЭП', background: '#70490d', borderColor: '#ffb065', color: '#ffead5', key: EraKey.Progressivism, name: \"Эра прогрессивизма\" },\r\n  { short: 'ЭМ', background: '#27426d', borderColor: '#65b4ff', color: '#ffead5', key: EraKey.Modern, name: \"Эпоха Модерна\" },\r\n  { short: 'ПМ', background: '#4f5751', borderColor: '#f8f8f8', color: '#ffead5', key: EraKey.Postmodern, name: \"Эпоха Постмодерна\" },\r\n  { short: 'НВ', background: '#c1522e', borderColor: '#ff8946', color: '#ffd6cb', key: EraKey.NewestTime, name: \"Новейшее время\" },\r\n  { short: 'ЭЗ', background: '#1e2126', borderColor: '#3d76c8', color: '#b9b9b9', key: EraKey.Tomorrow, name: \"Завтрашняя эпоха\" },\r\n  { short: 'ЭБ', background: '#3d5f1b', borderColor: '#80ff00', color: '#cce5ac', key: EraKey.Future, name: \"Эра Будущего\" },\r\n  { short: 'АБ', background: '#b1b1b1', borderColor: '#daf0ff', color: '#1b1d29', key: EraKey.Arctic, name: \"Арктическое будущее\" },\r\n  { short: 'ОБ', background: '#19483c', borderColor: '#3fffe1', color: '#cbfff3', key: EraKey.Oceanic, name: \"Океаническое будущее\" },\r\n  { short: 'ВБ', background: '#371a52', borderColor: '#bf77ff', color: '#e1bfff', key: EraKey.Virtual, name: \"Виртуальное будущее\" },\r\n  { short: 'КМ', background: '#9c4536', borderColor: '#e04021', color: '#ffcbc1', key: EraKey.Mars, name: \"Космическая эра Марса\" },\r\n  { short: 'КА', background: '#291daf', borderColor: '#0d72fc', color: '#ccceff', key: EraKey.Asteroid, name: \"Пояс астероидов из космической эры\" },\r\n];\r\n\r\nexport const ERA_KEY_MAP: { [eraKey: number]: EraType } = ERAS.reduce((acc: { [eraKey: number]: EraType }, era: EraType) => {\r\n  acc[era.key] = era;\r\n  return acc;\r\n}, {});\r\n\r\nexport const ERA_SHORT_MAP: { [short: string]: EraType } = ERAS.reduce((acc: { [short: string]: EraType }, era: EraType) => {\r\n  acc[era.short] = era;\r\n  return acc;\r\n}, {});\r\n","export const compareAlphabetically = (a?: string, b?: string) => {\r\n  const aText = a || '';\r\n  const bText = b || '';\r\n  if (aText < bText) return -1;\r\n  if (aText > bText) return 1;\r\n  return 0;\r\n};\r\n\r\nexport const compareNumber = (a?: number, b?: number) => {\r\n  const aNum = a || 0;\r\n  const bNum = b || 0;\r\n  if (aNum < bNum) return -1;\r\n  if (aNum > bNum) return 1;\r\n  return 0;\r\n};\r\n\r\nexport const downloadToFile = (\r\n  object: any, fileName: string, contentType: string,\r\n  before?: string, after?: string\r\n) => {\r\n  const a = document.createElement(\"a\");\r\n  const context: string = (before ? before: '') + JSON.stringify(object) + (after ? after: '');\r\n  const file = new Blob([ context ], { type: contentType });\r\n  a.href = URL.createObjectURL(file);\r\n  a.download = fileName;\r\n  a.click();\r\n};\r\n","import React from \"react\";\r\nimport { Table } from \"antd\";\r\nimport { ERAS } from \"../../dictionary/eras\";\r\nimport { EraType } from \"../../dictionary/dic-type\";\r\nimport { compareAlphabetically } from \"../../utils\";\r\n\r\nconst ErasPage: React.FC = (props) => {\r\n\r\n  return (\r\n    <Table\r\n      style={{ width: '300px' }}\r\n      dataSource={ERAS}\r\n      columns={[ {\r\n        title: '№',\r\n        dataIndex: 'key',\r\n        width: '20px'\r\n      }, {\r\n        title: 'Абр.',\r\n        dataIndex: 'short',\r\n        width: '60px',\r\n        sorter: (a: EraType, b: EraType) => compareAlphabetically(a.short, b.short),\r\n      }, {\r\n        title: 'Полное название',\r\n        dataIndex: 'name',\r\n        sorter: (a: EraType, b: EraType) => compareAlphabetically(a.name, b.name),\r\n      } ]}\r\n      bordered\r\n      onRow={(era: EraType) => ({\r\n        style: {\r\n          background: era.background,\r\n          borderColor: era.borderColor,\r\n          color: era.color\r\n        }\r\n      })}\r\n      rowKey={(era: EraType) => era.key}\r\n      pagination={false}\r\n      size='small'\r\n    />\r\n  );\r\n}\r\n\r\nexport default ErasPage;\r\n","/** Великие Строения */\r\nimport { GreatBuildingType } from \"./dic-type\";\r\n\r\nexport const GREAT_BUILDING: GreatBuildingType[] = [\r\n  {\r\n    id: 1, name: 'Обсерватория', era: 0, place: { x: 3, y: 3, b: 1 },\r\n    image: 'https://foeru.innogamescdn.com/assets/city/buildings/X_SS_AllAge_EasterBonus4.png'\r\n  },\r\n  { id: 2, name: 'Храм Реликвий', era: 0 },\r\n  { id: 3, name: 'Дельфийский Оракул', era: 0 },\r\n  { id: 4, name: 'Вавилонская башня', era: 2 },\r\n  { id: 5, name: 'Статуя Зевса', era: 2 },\r\n  { id: 6, name: 'Колизей', era: 3 },\r\n  { id: 7, name: 'Александрийский маяк', era: 3 },\r\n  { id: 8, name: 'Собор Святой Софии', era: 4 },\r\n  { id: 9, name: 'Ахенский Собор', era: 4 },\r\n  { id: 10, name: 'Собор Святого Марка', era: 5 },\r\n  { id: 11, name: 'Нотр-Дам', era: 5 },\r\n  { id: 12, name: 'Собор Василия Блаженного', era: 6 },\r\n  { id: 13, name: 'Кастель-Дель-Монте', era: 6 },\r\n  { id: 14, name: 'Дильский замок', era: 7 },\r\n  { id: 15, name: 'Фрауэнкирхе', era: 7 },\r\n  { id: 16, name: 'Капитолий', era: 8 },\r\n  { id: 17, name: 'Альберт-Холл', era: 8 },\r\n  { id: 18, name: 'Шато-Фронтенак', era: 9 },\r\n  { id: 19, name: 'Алькатрас', era: 9 },\r\n  { id: 20, name: 'Спейс-Нидл', era: 10 },\r\n  { id: 21, name: 'Атомиум', era: 10 },\r\n  { id: 22, name: 'Хабитат', era: 11 },\r\n  { id: 23, name: 'Космодром Канаверал', era: 11 },\r\n  { id: 24, name: 'Храм Лотоса', era: 12 },\r\n  { id: 25, name: 'Башня Инноваций', era: 12 },\r\n  { id: 26, name: 'Вращающаяся башня', era: 13 },\r\n  { id: 27, name: 'Вояджер V1', era: 13 },\r\n  { id: 28, name: 'Арка', era: 14 },\r\n  { id: 29, name: 'Дождевой лес', era: 14 },\r\n  { id: 30, name: 'Статуя Геи', era: 15 },\r\n  { id: 31, name: 'Арктическая оранжерея', era: 15 },\r\n  { id: 32, name: 'Зернохранилище', era: 15 },\r\n  { id: 33, name: 'Музей Атлантиды', era: 16 },\r\n  { id: 34, name: 'Кракен', era: 16 },\r\n  { id: 35, name: 'Синяя галактика', era: 16 },\r\n  { id: 36, name: 'Терракотовая армия', era: 17 },\r\n  { id: 37, name: 'Замок Химэдзи', era: 17 },\r\n  { id: 38, name: 'Космопорт (Колония на Марсе)', era: 18 },\r\n  { id: 39, name: 'Звездочёт', era: 18 },\r\n  { id: 40, name: 'Проект «Дева»', era: 18 },\r\n];\r\n","import React from \"react\";\r\nimport { Table } from \"antd\";\r\nimport { GREAT_BUILDING } from \"../../dictionary/great-buildings\";\r\nimport { compareAlphabetically, compareNumber } from \"../../utils\";\r\nimport { EraKey, EraType, GreatBuildingType } from \"../../dictionary/dic-type\";\r\nimport { RootStoreData } from \"../../common/types/redux-types\";\r\nimport { commonHideLoader, commonShowLoader } from \"../../common/services/action-creators\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { ERA_KEY_MAP } from \"../../dictionary/eras\";\r\n\r\nclass GreatBuildingsPage extends React.Component<PropsFromRedux> {\r\n\r\n  render() {\r\n    return (\r\n      <Table\r\n//        style={{ width: '520px' }}\r\n        dataSource={GREAT_BUILDING}\r\n        columns={[ {\r\n          title: '№',\r\n          dataIndex: 'id',\r\n          width: '20px',\r\n          sorter: (a: GreatBuildingType, b: GreatBuildingType) => compareNumber(a.id, b.id),\r\n        }, {\r\n          title: 'Название',\r\n          dataIndex: 'name',\r\n          width: '300px',\r\n          sorter: (a: GreatBuildingType, b: GreatBuildingType) => compareAlphabetically(a.name, b.name),\r\n        }, {\r\n          title: 'Эра',\r\n          dataIndex: 'era',\r\n          width: '200px',\r\n          sorter: (a: GreatBuildingType, b: GreatBuildingType) => compareAlphabetically(ERA_KEY_MAP[a.era].name, ERA_KEY_MAP[b.era].name),\r\n          render: (era: EraKey) => ERA_KEY_MAP[era].name,\r\n        } ]}\r\n        bordered\r\n        rowKey={(gb: GreatBuildingType) => gb.id}\r\n        onRow={(gb: GreatBuildingType) => {\r\n          const era: EraType = ERA_KEY_MAP[gb.era];\r\n          return ({\r\n            style: {\r\n              background: era.background,\r\n              borderColor: era.borderColor,\r\n              color: era.color\r\n            }\r\n          });\r\n        }}\r\n        pagination={false}\r\n        size='small'\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapState = (state: RootStoreData) => {\r\n  const { loading } = state.common;\r\n  return {\r\n    loading\r\n  };\r\n};\r\n\r\nconst mapDispatch = {\r\n  commonShowLoader,\r\n  commonHideLoader\r\n};\r\n\r\nconst connector = connect(mapState, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(GreatBuildingsPage);\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { SkillType } from \"../../dictionary/dic-type\";\r\nimport { Button, Form, Input, Row } from \"antd\";\r\nimport TextArea from \"antd/es/input/TextArea\";\r\n\r\ntype Props = {\r\n  isExist: boolean,\r\n  editSkill?: SkillType;\r\n  onSave: (skill: SkillType) => any;\r\n  onClose: () => any;\r\n};\r\n\r\nexport const SkillDetailForm = ({ isExist, editSkill, onSave, onClose }: Props) => {\r\n\r\n  const [ form ] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    if (editSkill) {\r\n      const fieldsSkill = {\r\n        id: editSkill.id,\r\n        name: editSkill.name,\r\n        definition: editSkill.definition,\r\n        image: editSkill.image\r\n      };\r\n      form.setFieldsValue(fieldsSkill);\r\n    }\r\n  }, [ form, editSkill ]);\r\n\r\n  const handleSubmit = () => {\r\n    form.validateFields()\r\n      .then(values => {\r\n        const skill: SkillType = {\r\n          ...editSkill,\r\n          id: values.id,\r\n          name: values.name,\r\n          definition: values.definition,\r\n          image: values.image\r\n        };\r\n        onSave(skill);\r\n      });\r\n  };\r\n\r\n  const layout = {\r\n    labelCol: { span: 7 },\r\n    wrapperCol: { span: 17 },\r\n  };\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Form {...layout} form={form}>\r\n      <Form.Item\r\n        name=\"id\" label=\"ID\"\r\n        rules={[ {\r\n          required: true,\r\n          message: 'ID обязательно!',\r\n        }, {\r\n          pattern: /^([a-z0-9]+[_])*[a-z0-9]+$/,\r\n          message: 'ID состоит из LAT в нижнем регистре, разделенных \"_\"',\r\n        } ]}>\r\n        <Input disabled={isExist}/>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"name\" label=\"Название\"\r\n        rules={[ { required: true } ]}>\r\n        <Input/>\r\n      </Form.Item>\r\n      <Form.Item name=\"definition\" label=\"Описание\">\r\n        <TextArea/>\r\n      </Form.Item>\r\n      <Form.Item name=\"image\" label=\"Картинка (URL)\">\r\n        <Input/>\r\n      </Form.Item>\r\n      <Row justify=\"center\">\r\n        <Form.Item noStyle>\r\n          <Button type=\"primary\" htmlType=\"submit\" onClick={handleSubmit}>\r\n            Сохранить\r\n          </Button>\r\n          <Button style={{ marginLeft: 8 }} htmlType=\"reset\" onClick={handleClose}>\r\n            Закрыть\r\n          </Button>\r\n        </Form.Item>\r\n      </Row>\r\n    </Form>\r\n  );\r\n}\r\n\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport React, { ChangeEvent, useEffect, useState } from \"react\";\r\nimport Search from \"antd/es/input/Search\";\r\n\r\ntype Props = {\r\n  value: string;\r\n  placeholder: string;\r\n  onChange: (value: string) => void;\r\n  delay?: number\r\n};\r\n\r\nconst SearchInputWithDelay = ({ value, placeholder, onChange, delay = 500 }: Props) => {\r\n\r\n  const [ timer, setTimer ] = useState<NodeJS.Timeout | undefined>(undefined);\r\n  const [ tempValue, setTempValue ] = useState<string>(value);\r\n\r\n  useEffect(() => {\r\n    setTempValue(value)\r\n  }, [value]);\r\n\r\n  const onPressEnter = () => {\r\n    timer && clearTimeout(timer);\r\n    setTimer(undefined);\r\n    onChange(tempValue);\r\n  };\r\n\r\n  const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const newValue = e.target.value;\r\n    setTempValue(newValue);\r\n    timer && clearTimeout(timer);\r\n    setTimer(\r\n      setTimeout(() => {\r\n        onChange(newValue);\r\n      }, delay)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Search\r\n      value={tempValue}\r\n      onChange={onChangeValue}\r\n      onPressEnter={onPressEnter}\r\n      placeholder={placeholder}\r\n      allowClear\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchInputWithDelay;\r\n","import React from \"react\";\r\nimport { Button, Modal, Row, Table, Tooltip } from \"antd\";\r\nimport { DownloadOutlined, PlusOutlined } from \"@ant-design/icons/lib/icons\";\r\nimport { SkillKind, SkillType } from \"../../dictionary/dic-type\";\r\nimport { compareAlphabetically, downloadToFile } from \"../../utils\";\r\nimport { RootStoreData } from \"../../common/types/redux-types\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport {\r\n  deleteSkillByIp,\r\n  editNewSkill,\r\n  editSkillById,\r\n  editSkillShow,\r\n  insertSkill,\r\n  setIsNewSkill,\r\n  setSkillSearchValue,\r\n  updateSkill\r\n} from \"./services/action-creators\";\r\nimport { SkillDetailForm } from \"./SkillDetailForm\";\r\nimport SearchInputWithDelay from \"../../components/SearchInputWithDelay\";\r\n\r\nclass SkillsPage extends React.Component<PropsFromRedux> {\r\n\r\n  editRecord = (id: SkillKind) => {\r\n    const { editSkillById } = this.props;\r\n    editSkillById(id)\r\n  };\r\n\r\n  saveDetail = (skill: SkillType) => {\r\n    const { isNewSkill, updateSkill, insertSkill } = this.props;\r\n    isNewSkill ? insertSkill(skill) : updateSkill(skill);\r\n  };\r\n\r\n  createNewSkill = () => {\r\n    const { editNewSkill } = this.props;\r\n    editNewSkill();\r\n  };\r\n\r\n  detailClose = () => {\r\n    const { editSkillShow } = this.props;\r\n    editSkillShow(false);\r\n  };\r\n\r\n  saveAll2File = () => {\r\n    const { skillList } = this.props;\r\n    downloadToFile(skillList, 'skills.ts', 'text/plain',\r\n      \"import { SkillType } from \\\"./dic-type\\\";\\n\\nexport const SKILLS: SkillType[] = \", \";\\n\");\r\n  }\r\n\r\n  setSearchValue = (searchValue: string) => {\r\n    const { setSkillSearchValue } = this.props;\r\n    setSkillSearchValue(searchValue)\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      searchValue, skillList, editSkill, isEditSkillShow, isNewSkill\r\n    } = this.props;\r\n    return (\r\n      <>\r\n        <Row style={{ marginBottom: '5px' }}>\r\n          <Button\r\n            type=\"primary\"\r\n            icon={<DownloadOutlined/>}\r\n            onClick={this.saveAll2File}\r\n          >\r\n            Сохранить как Файл\r\n          </Button>\r\n          <div style={{ flex: \"auto\" }}/>\r\n          <Button\r\n            style={{ alignItems: \"end\" }}\r\n            type=\"link\"\r\n            icon={<PlusOutlined/>}\r\n            onClick={this.createNewSkill}\r\n          >\r\n            Добавить Connectivity\r\n          </Button>\r\n        </Row>\r\n        <SearchInputWithDelay\r\n          value={searchValue}\r\n          onChange={this.setSearchValue}\r\n          placeholder=\"Начните набирать значение любого из полей\"\r\n        />\r\n        <Table\r\n          dataSource={skillList}\r\n          columns={[ {\r\n            title: '№',\r\n            dataIndex: 'id',\r\n            ellipsis: true,\r\n            width: '200px',\r\n            sorter: (a: SkillType, b: SkillType) => compareAlphabetically(a.id, b.id),\r\n          }, {\r\n            title: 'Название',\r\n            dataIndex: 'name',\r\n            ellipsis: true,\r\n            width: '300px',\r\n            sorter: (a: SkillType, b: SkillType) => compareAlphabetically(a.name, b.name),\r\n            render: (name: string, skill: SkillType) => (\r\n              <Tooltip placement=\"topLeft\" title={`Редактировать умение \"${skill.name}\"`}>\r\n                <Button\r\n                  type='link' className='gray_button_link'\r\n                  icon={<img src={skill.image} width='25px' alt={skill.image} className=\"skill-image\"/>}\r\n                  onClick={() => this.editRecord(skill.id)}\r\n                >{name}</Button>\r\n              </Tooltip>\r\n            )\r\n          }, {\r\n            title: 'Описание',\r\n            dataIndex: 'definition',\r\n            ellipsis: true\r\n          } ]}\r\n          bordered\r\n          rowKey={(gb: SkillType) => gb.id}\r\n          pagination={false}\r\n          size='small'\r\n        />\r\n        <Modal\r\n          title={`Детали Host ${editSkill?.name}`}\r\n          visible={isEditSkillShow}\r\n          onCancel={this.detailClose}\r\n          footer={false}\r\n          maskClosable={false}\r\n          width='1024px'\r\n        >\r\n          <SkillDetailForm\r\n            isExist={!isNewSkill}\r\n            editSkill={editSkill}\r\n            onSave={this.saveDetail}\r\n            onClose={this.detailClose}\r\n          />\r\n        </Modal>\r\n      </>\r\n\r\n    )\r\n      ;\r\n  }\r\n}\r\n\r\nconst mapState = (state: RootStoreData) => {\r\n  const { searchValue, skillList, editSkill, isEditSkillShow, isNewSkill } = state.skills;\r\n  return {\r\n    searchValue,\r\n    skillList,\r\n    editSkill,\r\n    isEditSkillShow,\r\n    isNewSkill\r\n  };\r\n};\r\n\r\nconst mapDispatch = {\r\n  editSkillShow, setIsNewSkill, setSkillSearchValue, editNewSkill, editSkillById, insertSkill, updateSkill, deleteSkillByIp\r\n};\r\n\r\nconst connector = connect(mapState, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(SkillsPage);\r\n","import {\r\n  SKILLS_DELETE_SKILL,\r\n  SKILLS_EDIT_NEW_SKILL,\r\n  SKILLS_EDIT_SKILL_BY_IP,\r\n  SKILLS_EDIT_SKILL_SHOW,\r\n  SKILLS_INSERT_SKILL,\r\n  SKILLS_SEARCH_VALUE,\r\n  SKILLS_SET_IS_NEW_SKILL,\r\n  SKILLS_UPDATE_SKILL,\r\n} from './action-constants';\r\nimport { SkillKind, SkillType } from \"../../../dictionary/dic-type\";\r\n\r\nexport const editSkillShow = (isShow: boolean) => ({ type: SKILLS_EDIT_SKILL_SHOW, isShow } as const);\r\nexport const setIsNewSkill = (isNew: boolean) => ({ type: SKILLS_SET_IS_NEW_SKILL, isNew } as const);\r\nexport const setSkillSearchValue = (searchValue: string) => ({ type: SKILLS_SEARCH_VALUE, searchValue } as const);\r\n\r\nexport const editNewSkill = () => ({ type: SKILLS_EDIT_NEW_SKILL } as const);\r\n\r\nexport const editSkillById = (id: SkillKind) => ({ type: SKILLS_EDIT_SKILL_BY_IP, id } as const);\r\n\r\nexport const insertSkill = (skill: SkillType) => ({ type: SKILLS_INSERT_SKILL, skill } as const);\r\n\r\nexport const updateSkill = (skill: SkillType) => ({ type: SKILLS_UPDATE_SKILL, skill } as const);\r\n\r\nexport const deleteSkillByIp = (id: SkillKind) => ({ type: SKILLS_DELETE_SKILL, id } as const);\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nexport const SKILLS_EDIT_SKILL_SHOW = 'SKILLS_EDIT_SKILL_SHOW';\r\nexport const SKILLS_SET_IS_NEW_SKILL = 'SKILLS_SET_IS_NEW_SKILL';\r\nexport const SKILLS_SEARCH_VALUE = 'SKILLS_SEARCH_VALUE';\r\n\r\nexport const SKILLS_EDIT_NEW_SKILL = 'SKILLS_EDIT_NEW_SKILL';\r\nexport const SKILLS_EDIT_SKILL_BY_IP = 'SKILLS_EDIT_SKILL_BY_IP';\r\nexport const SKILLS_INSERT_SKILL = 'SKILLS_INSERT_SKILL';\r\nexport const SKILLS_UPDATE_SKILL = 'SKILLS_UPDATE_SKILL';\r\nexport const SKILLS_DELETE_SKILL = 'SKILLS_DELETE_SKILL';\r\n","import React from \"react\";\r\nimport { DesktopOutlined, HomeOutlined, LaptopOutlined } from \"@ant-design/icons/lib/icons\";\r\nimport Home from \"../Home/Home\";\r\nimport ErasPage from \"../Eras/ErasPage\";\r\nimport GreatBuildingsPage from \"../GreatBuildings/GreatBuildingsPage\";\r\nimport SkillsPage from \"../Skills/SkillsPage\";\r\n\r\nexport type SubmenuData = {\r\n  type: 'submenu';\r\n  key: string;\r\n  name: string;\r\n  icon?: React.ReactNode;\r\n  subMenus: MenuData[];\r\n};\r\n\r\nexport type OptionData = {\r\n  type: 'option';\r\n  key: string;\r\n  name: string;\r\n  pathname: string;\r\n  icon?: React.ReactNode;\r\n  component?: React.ReactNode;\r\n  props?: any;\r\n};\r\n\r\nexport type MenuData = SubmenuData | OptionData;\r\n\r\nexport type SelectedMenuData = {\r\n  menu: OptionData;\r\n  breadcrumbs: string[];\r\n};\r\n\r\nexport const MENU_DATA: MenuData[] = [\r\n  {\r\n    type: 'option', key: \"home\", name: \"Home\", icon: <HomeOutlined/>,\r\n    pathname: \"/home\", component: <Home/>\r\n  }, {\r\n    type: 'submenu', key: \"dic\", name: \"Словари\", icon: <DesktopOutlined/>,\r\n    subMenus: [ {\r\n      type: 'option', key: \"eras\", name: \"Эпохи\", icon: <LaptopOutlined/>,\r\n      pathname: \"/eras\", component: <ErasPage/>\r\n    }, {\r\n      type: 'option', key: \"g-build\", name: \"Великие Строения\", icon: <LaptopOutlined/>,\r\n      pathname: \"/great-buildings\", component: <GreatBuildingsPage/>\r\n    }, {\r\n      type: 'option', key: \"gb-skills\", name: \"Усиления Великих Строений\", icon: <LaptopOutlined/>,\r\n      pathname: \"/great-building-skills\", component: <SkillsPage/>\r\n    } ]\r\n  }\r\n];\r\n\r\nexport const findSelectedMenuByPathname = (\r\n  pathname: string, menuData: MenuData[], breadcrumbs?: string[]\r\n): SelectedMenuData | undefined => {\r\n  const selected = menuData.map(menu => {\r\n    switch (menu.type) {\r\n      case \"submenu\":\r\n        const newBreadcrumbs: string[] = breadcrumbs ? [ ...breadcrumbs ] : [];\r\n        newBreadcrumbs.push(menu.name);\r\n        const selected = findSelectedMenuByPathname(pathname, menu.subMenus, newBreadcrumbs);\r\n        if (selected) {\r\n          return selected\r\n        }\r\n        break;\r\n      case \"option\":\r\n        if (pathname.startsWith(process.env.PUBLIC_URL + menu.pathname)) {\r\n          const newBreadcrumbs: string[] = breadcrumbs ? breadcrumbs : [];\r\n          newBreadcrumbs.push(menu.name);\r\n          return {\r\n            menu: menu,\r\n            breadcrumbs: newBreadcrumbs\r\n          }\r\n        }\r\n    }\r\n    return undefined;\r\n  }).filter(menu => menu);\r\n  return selected.length ? selected[0] : undefined;\r\n};\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport './App.scss';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\nimport { Breadcrumb, Layout, Menu, Spin } from 'antd';\r\nimport classNames from 'classnames';\r\nimport Home from \"../Home/Home\";\r\nimport { findSelectedMenuByPathname, MENU_DATA, MenuData } from \"./MenuHelper\";\r\nimport { RootStoreData } from \"../../common/types/redux-types\";\r\nimport { commonHideLoader, commonShowLoader } from \"../../common/services/action-creators\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Content, Footer, Sider } = Layout;\r\n\r\n/** Здесь указывается версия билда */\r\nconst version = '1.0.0.4';\r\n\r\nconst resolveSubmenu = (subMenus: MenuData[]) => {\r\n  return subMenus.map((menu: MenuData) => {\r\n    switch (menu.type) {\r\n      case \"option\": {\r\n        return (\r\n          <Menu.Item key={menu.key} icon={menu.icon}>\r\n            <span>{menu.name}</span>\r\n            <Link to={menu.pathname}/>\r\n          </Menu.Item>\r\n        );\r\n      }\r\n      case \"submenu\": {\r\n        return (\r\n          <SubMenu key={menu.key} icon={menu.icon} title={menu.name}>\r\n            {resolveSubmenu(menu.subMenus)}\r\n          </SubMenu>\r\n        );\r\n      }\r\n      default:\r\n        return null;\r\n    }\r\n  });\r\n};\r\n\r\nconst resolveRoutes = (subMenus: MenuData[]): any[] => {\r\n  return subMenus.map((menu: MenuData) => {\r\n    const summary = [];\r\n    switch (menu.type) {\r\n      case \"option\": {\r\n        summary.push(\r\n          <Route key={menu.key} path={menu.pathname}>\r\n            {menu.component}\r\n          </Route>\r\n        );\r\n        break;\r\n      }\r\n      case \"submenu\": {\r\n        summary.push(resolveRoutes(menu.subMenus));\r\n        break;\r\n      }\r\n    }\r\n    return summary;\r\n  });\r\n};\r\n\r\nconst RESOLVED_SUBMENUS = resolveSubmenu(MENU_DATA);\r\nconst RESOLVED_ROUTES = resolveRoutes(MENU_DATA);\r\n\r\nconst App: React.FC<PropsFromRedux> = (props) => {\r\n\r\n  const [ menuCollapsed, setMenuCollapsed ] = useState<boolean>(false);\r\n  const [ selectedKeys, setSelectedKeys ] = useState<string[]>([ '' ]);\r\n  const [ breadcrumbs, setBreadcrumbs ] = useState<string[]>([ '...' ]);\r\n\r\n  useEffect(() => {\r\n    onSelectMenu();\r\n  }, []);\r\n\r\n  const onSelectMenu = () => {\r\n    const selectedMenu = findSelectedMenuByPathname(window.location.pathname, MENU_DATA);\r\n    setSelectedKeys([ selectedMenu ? selectedMenu.menu.key : '' ]);\r\n    setBreadcrumbs(selectedMenu ? selectedMenu.breadcrumbs : [ '...' ]);\r\n  };\r\n\r\n  return (\r\n    <Spin spinning={props.loading} size=\"large\" tip={\"Загрузка данных\"}>\r\n      <Layout className='app' >\r\n        <Sider\r\n          className=\"app__left-menu\"\r\n          collapsible\r\n          collapsed={menuCollapsed}\r\n          onCollapse={(collapsed) => {\r\n            setMenuCollapsed(collapsed);\r\n          }}\r\n        >\r\n          <div className={classNames(\"app__left-menu__logo\", { \"app__left-menu__logo--short\": menuCollapsed })}><span>Logo</span></div>\r\n          <Menu\r\n            mode=\"inline\"\r\n            theme='dark'\r\n            selectedKeys={selectedKeys}\r\n            onSelect={onSelectMenu}\r\n            style={{ height: '100%' }}\r\n          >\r\n            {RESOLVED_SUBMENUS}\r\n          </Menu>\r\n        </Sider>\r\n        <Layout style={{ padding: '0 12px' }}>\r\n          <Breadcrumb style={{ margin: '6px 0' }}>\r\n            {breadcrumbs.map((crumb: string, index: number) => <Breadcrumb.Item key={index}>{crumb}</Breadcrumb.Item>)}\r\n          </Breadcrumb>\r\n          <Content className=\"app__content\">\r\n            <Switch>\r\n              <Route key='zero' exact path=\"/\" component={Home}/>\r\n              <Route key='home' path=\"/home\" component={Home}/>\r\n              {RESOLVED_ROUTES}\r\n            </Switch>\r\n          </Content>\r\n          <Footer className='app__footer'>LasGIS ©2020 Created using Ant Design - version({version})</Footer>\r\n        </Layout>\r\n      </Layout>\r\n    </Spin>\r\n  );\r\n};\r\n\r\nconst mapState = (state: RootStoreData) => {\r\n  const { loading } = state.common;\r\n  return {\r\n    loading\r\n  };\r\n};\r\n\r\nconst mapDispatch = {\r\n  commonShowLoader,\r\n  commonHideLoader\r\n};\r\n\r\nconst connector = connect(mapState, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(App);\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport { createHashHistory } from 'history';\r\n\r\nexport default createHashHistory();\r\n","/*\n * Copyright 2020 LasGIS FOE Helper\n */\n\nimport { COMMON_HIDE_LOADER, COMMON_SHOW_LOADER } from './action-constants';\nimport { CommonActions, CommonStoreData } from './types';\n\nconst initialState: CommonStoreData = {\n  loading: false,\n};\n\nexport function commonReducer(state: CommonStoreData = initialState, action: CommonActions): CommonStoreData {\n  switch (action.type) {\n    case COMMON_SHOW_LOADER:\n      return { ...state, loading: true };\n    case COMMON_HIDE_LOADER:\n      return { ...state, loading: false };\n    default:\n      return state;\n  }\n}\n","import {\r\n  SKILLS_DELETE_SKILL,\r\n  SKILLS_EDIT_NEW_SKILL,\r\n  SKILLS_EDIT_SKILL_BY_IP,\r\n  SKILLS_EDIT_SKILL_SHOW,\r\n  SKILLS_INSERT_SKILL,\r\n  SKILLS_SEARCH_VALUE,\r\n  SKILLS_SET_IS_NEW_SKILL,\r\n  SKILLS_UPDATE_SKILL\r\n} from './action-constants';\r\nimport { SkillsActions, SkillsStoreData } from './types';\r\nimport { SKILLS } from \"../../../dictionary/skills\";\r\nimport { SkillType } from \"../../../dictionary/dic-type\";\r\n\r\nconst initialState: SkillsStoreData = {\r\n  searchValue: '',\r\n  skillList: SKILLS,\r\n  editSkill: undefined,\r\n  isEditSkillShow: false,\r\n  isNewSkill: false,\r\n};\r\n\r\nexport function skillsReducer(state: SkillsStoreData = initialState, action: SkillsActions): SkillsStoreData {\r\n  switch (action.type) {\r\n    case SKILLS_SEARCH_VALUE:\r\n      return { ...state, searchValue: action.searchValue };\r\n    case SKILLS_EDIT_SKILL_SHOW:\r\n      return { ...state, isEditSkillShow: action.isShow };\r\n    case SKILLS_SET_IS_NEW_SKILL:\r\n      return { ...state, isNewSkill: action.isNew };\r\n\r\n    case SKILLS_EDIT_NEW_SKILL:\r\n      return {\r\n        ...state,\r\n        editSkill: undefined,\r\n        isEditSkillShow: true,\r\n        isNewSkill: true,\r\n      };\r\n    case SKILLS_EDIT_SKILL_BY_IP: {\r\n      const filtered: SkillType[] = state.skillList.filter(skill => skill.id === action.id);\r\n      if (filtered.length) {\r\n        return {\r\n          ...state,\r\n          editSkill: filtered[0],\r\n          isEditSkillShow: true,\r\n          isNewSkill: false,\r\n        };\r\n      }\r\n      return state;\r\n    }\r\n    case SKILLS_INSERT_SKILL:\r\n      return {\r\n        ...state,\r\n        skillList: state.skillList.concat([ action.skill ]),\r\n        isEditSkillShow: false,\r\n      };\r\n    case SKILLS_UPDATE_SKILL:\r\n      return {\r\n        ...state,\r\n        skillList: state.skillList.map(skl => (skl.id === action.skill.id) ? action.skill : skl),\r\n        isEditSkillShow: false,\r\n      };\r\n    case SKILLS_DELETE_SKILL:\r\n      return {\r\n        ...state,\r\n        skillList: state.skillList.filter(skl => skl.id !== action.id),\r\n        isEditSkillShow: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SkillType } from \"./dic-type\";\n\nexport const SKILLS: SkillType[] = [ {\n  \"id\": \"population\",\n  \"name\": \"Население\",\n  \"definition\": \"Обеспечивает следующий ресурс: Население.\",\n  \"image\": \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_population.png\"\n}, {\n  \"id\": \"goods\",\n  \"name\": \"Производство товаров\",\n  \"image\": \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_goods.png\",\n  \"definition\": \"Производит случайные товары из эпохи игрока каждые 24 часа. Начиная с эпохи Модерна, производит в два раза больше полуфабрикатов.\"\n}, {\n  \"id\": \"military\",\n  \"name\": \"Неистовство\",\n  \"image\": \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_military.png\",\n  \"definition\": \"Атака и защита атакующих боевых единиц повышаются на определенный процент.\"\n}, {\n  \"id\": \"happy\",\n  \"name\": \"Уровень счастья\",\n  \"image\": \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_happy.png\",\n  \"definition\": \"Обеспечивает следующий ресурс: Уровень счастья.\"\n}, {\n  \"id\": \"medals\",\n  \"name\": \"Производство медалей\",\n  \"image\": \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_medals.png\",\n  \"definition\": \"Производит ресурс «Медали» каждые 24 часа.\"\n}, {\n  \"id\": \"supplies_plus\",\n  \"name\": \"Изобилие\",\n  \"image\": \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_supplies.png\",\n  \"definition\": \"Первые собранные ресурсы здания Ресурсы умножаются на определенный процент.\"\n}, {\n  \"id\": \"supplies\",\n  \"name\": \"Производство ресурсов\",\n  \"image\": \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_supplies.png\",\n  \"definition\": \"Производит ресурс «Ресурсы» каждые 24 часа.\"\n}, {\n  \"id\": \"forge_points\",\n  \"name\": \"Исследования\",\n  \"image\": \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_forgepoints.png\",\n  \"definition\": \"Производит ресурс «Стратегические очки» каждые 24 часа.\"\n}, {\n  \"id\": \"coins\",\n  \"name\": \"Производство монет\",\n  \"image\": \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_coins.png\",\n  \"definition\": \"Производит ресурс «Монеты» каждые 24 часа.\"\n}, {\n  \"id\": \"coins_plus\",\n  \"name\": \"Приток монет\",\n  \"definition\": \"Первые собранные ресурсы здания Монеты умножаются на определенный процент.\",\n  \"image\": \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_coins.png\"\n}, {\n  \"id\": \"fierce_resistance\",\n  \"name\": \"Жестокое сопротивление\",\n  \"image\": \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_fierce_resistance.png\",\n  \"definition\": \"Атака и защита обороняющихся боевых единиц повышаются на определенный процент. К тому же гильдия получает определенную прибавку к резерву.\"\n}, {\n  \"id\": \"scroll\",\n  \"name\": \"Квест-бонус\",\n  \"image\": \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_scroll.png\",\n  \"definition\": \"Получая за выполненные задания монеты, ресурсы, товары, бриллианты или медали, вы получаете дополнительный процент сверху.\"\n}, {\n  \"id\": \"penal_unit\",\n  \"name\": \"Карательный юнит\",\n  \"image\": \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_penal_unit.png\",\n  \"definition\": \"Производит свободные боевые единицы военного здания в городе игрока каждые 24 часа. Ускорение найма гильдии снижает время.\"\n}, {\n  \"id\": \"defence\",\n  \"name\": \"Бонус резерва\",\n  \"image\": \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_defence.png\",\n  \"definition\": \"Гильдия получает определенную прибавку к резерву.\"\n}, {\n  \"id\": \"guild_goods\",\n  \"name\": \"Товары гильдии\",\n  \"image\": \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_guild_goods.png\",\n  \"definition\": \"Производит некоторое количество каждого текущего товара для казны гильдии. Можно собрать только находясь в гильдии.\"\n}, {\n  \"id\": \"aid_goods\",\n  \"name\": \"Товары за помощь\",\n  \"image\": \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_aid_goods.png\",\n  \"definition\": \"За первые случаи помощи зданию вы получаете случайный товар той эпохи, к которой относится здание.\"\n}, {\n  \"id\": \"plunder_goods\",\n  \"name\": \"Товары за грабёж\",\n  \"image\": \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_plunder_goods.png\",\n  \"definition\": \"За первые грабежи здания вы получаете случайный товар той эпохи, к которой относится здание.\"\n}, {\n  \"id\": \"contribution_boost\",\n  \"name\": \"Приз за сотрудничество\",\n  \"image\": \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_contribution_boost.png\",\n  \"definition\": \"Награды за вложение повышаются на определенный процент.\"\n}, {\n  \"id\": \"aid_blueprints\",\n  \"name\": \"Чертежи за помощь\",\n  \"image\": \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_aid_blueprints.png\",\n  \"definition\": \"Повышает шанс найти чертеж, помогая другому игроку.\"\n}, {\n  \"id\": \"helping_hands\",\n  \"name\": \"Рука помощи\",\n  \"image\": \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_helping_hands.png\",\n  \"definition\": \"Добавляет шанс получить что-нибудь дополнительное за помощь другим игрокам.\"\n}, {\n  \"id\": \"relic_hunt\",\n  \"name\": \"Охота за реликвиями\",\n  \"image\": \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_relic_hunt.png\",\n  \"definition\": \"Шанс появления скрытой реликвии на карте Экспедиции гильдии после разрешения столкновения.\"\n}, {\n  \"id\": \"critical_hit_chance\",\n  \"name\": \"Критический удар\",\n  \"image\": \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_critical_hit_chance.png\",\n  \"definition\": \"Шанс нанести 150% урона боевым единицам той же эпохи.\"\n}, {\n  \"id\": \"plunder_and_pillage\",\n  \"name\": \"Грабёж и мародёрство\",\n  \"image\": \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_plunder_and_pillage.png\",\n  \"definition\": \"Добавляет шанс удвоить награбленные ресурсы.\"\n}, {\n  \"id\": \"first_strike\",\n  \"name\": \"Первый удар\",\n  \"image\": \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_first_strike.png\",\n  \"definition\": \"В первых битвах есть шанс убить одну боевую единицу врага в начале боя. Если в битве две волны, то умение действует только во время первой.\"\n}, {\n  \"id\": \"double_collect\",\n  \"name\": \"Двойная коллекция\",\n  \"image\": \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_double_collect.png\",\n  \"definition\": \"При первом сборе есть шанс удвоить собранные ресурсы. Не касается военных зданий и Великих строений.\"\n}, {\n  \"id\": \"advanced_tactics\",\n  \"name\": \"Улучшенная тактика\",\n  \"image\": \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_advanced_tactics.png\",\n  \"definition\": \"Атака и защита атакующих и обороняющихся боевых единиц повышаются на определенный процент.\"\n}, {\n  \"id\": \"spoils_of_war\",\n  \"name\": \"Военные трофеи\",\n  \"image\": \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_spoils_of_war.png\",\n  \"definition\": \"После победы в первых нескольких битвах у вас будет шанс получить случайную награду.\"\n}, {\n  \"id\": \"previous_era_good_production\",\n  \"name\": \"Производство товаров предыдущей эпохи\",\n  \"image\": \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_previous_era_good_production.png\",\n  \"definition\": \"Производит случайные товары предыдущей эпохи каждые 24 часа. В Бронзовом веке производит товары Бронзового века.\"\n}, {\n  \"id\": \"missile_launch\",\n  \"name\": \"Запуск ракеты\",\n  \"image\": \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_missile_launch.png\",\n  \"definition\": \"В первых битвах есть шанс убить половину войска врага в начале боя. Если в битве две волны, то умение применяется только к первой волне.\"\n}, {\n  \"id\": \"diplomatic_gifts\",\n  \"name\": \"Дипломатические дары\",\n  \"image\": \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_diplomatic_gifts.png\",\n  \"definition\": \"После победы в первых нескольких переговорах (исключая переговоры в поселениях) у вас будет шанс получить случайную награду.\"\n}, {\n  \"id\": \"special_goods\",\n  \"name\": \"Орбитальный транспорт\",\n  \"image\": \"https://foeru.innogamescdn.com/assets/shared/icons/icon_great_building_bonus_special_goods.png\",\n  \"definition\": \"Начиная с эпохи Арктического будущего производит особые ресурсы каждые 24 часа. Вероятность и типы особых ресурсов зависят от эпохи. До эпохи Арктического будущего производит медали.\"\n} ];\n","/*\n * Copyright 2020 LasGIS FOE Helper\n */\n\nimport { combineReducers } from 'redux';\nimport { commonReducer } from '../common/services/reducer';\nimport { connectRouter } from \"connected-react-router\";\nimport { History } from \"history\";\nimport { skillsReducer } from \"../pages/Skills/services/reducer\";\n\nexport default (history: History) => combineReducers({\n  router: connectRouter(history),\n  common: commonReducer,\n  skills: skillsReducer,\n});\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport history from './history';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object'\r\n  && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(routerMiddleware(history), thunk));\r\n\r\nexport default function configureStore(preloadedState = {}) {\r\n  return createStore(rootReducer(history), preloadedState, enhancer);\r\n}\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './pages/Main/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport configureStore from \"./redux/configureStore\";\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n//  <React.StrictMode>\r\n  <Provider store={store}>\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <App/>\r\n    </Router>\r\n  </Provider>\r\n//  </React.StrictMode>\r\n  , document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}