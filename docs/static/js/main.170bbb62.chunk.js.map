{"version":3,"sources":["dictionary/dic-type.ts","pages/Home/Home.tsx","common/services/action-creators.ts","common/services/action-constants.ts","pages/Optional/Optional.tsx","pages/Optional/OptionalNotArg.tsx","dictionary/eras.ts","utils/index.ts","pages/Eras/Eras.tsx","pages/Main/MenuHelper.tsx","pages/Main/App.tsx","serviceWorker.ts","redux/history.ts","common/services/reducer.ts","redux/rootReducer.ts","redux/configureStore.ts","index.tsx"],"names":["EraKey","mapDispatch","commonShowLoader","type","commonHideLoader","connector","connect","state","loading","common","props","tempShowLoader","delay","setTimeout","align","onClick","danger","Optional","text","OptionalNotArg","ERAS","short","background","borderColor","color","key","Without","name","Stone","Bronze","Iron","EarlyMiddle","HighMiddle","LateMiddle","Colonial","Industrial","Progressivism","Modern","Postmodern","NewestTime","Tomorrow","Future","Arctic","Oceanic","Virtual","Mars","Asteroid","compareAlphabetically","reduce","acc","era","a","b","aText","bText","ErasPage","style","width","dataSource","columns","title","dataIndex","sorter","bordered","onRow","pagination","size","MENU_DATA","icon","pathname","component","subMenus","Eras","SubMenu","Menu","Content","Layout","Footer","Sider","RESOLVED_SUBMENUS","resolveSubmenu","map","menu","Item","to","RESOLVED_ROUTES","resolveRoutes","summary","push","path","App","useState","menuCollapsed","setMenuCollapsed","selectedKeys","setSelectedKeys","breadcrumbs","setBreadcrumbs","useEffect","onSelectMenu","selectedMenu","findSelectedMenuByPathname","menuData","selected","newBreadcrumbs","startsWith","filter","length","undefined","window","location","minHeight","className","collapsible","collapsed","onCollapse","classNames","mode","theme","onSelect","height","padding","margin","crumb","index","exact","Home","Boolean","hostname","match","createHashHistory","initialState","commonReducer","action","history","combineReducers","router","connectRouter","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","routerMiddleware","thunk","store","preloadedState","createStore","rootReducer","configureStore","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.170bbb62.chunk.js","sourcesContent":["/*\r\n* Copyright 2020 LasGIS FOE Helper\r\n*/\r\n\r\n/** Эпохи */\r\nexport enum EraKey {\r\n  /** Without Century | Без Века */\r\n  Without = 0,\r\n  /** Stone Age | Каменный Век */\r\n  Stone = 1,\r\n  /** Bronze Age | Бронзовый Век */\r\n  Bronze = 2,\r\n  /** Iron Age | Железный Век */\r\n  Iron = 3,\r\n  /** Early Middle Ages | Раннее Средневековье */\r\n  EarlyMiddle = 4,\r\n  /** High Middle Ages | Высокое Средневековье */\r\n  HighMiddle = 5,\r\n  /** Late Middle Ages | Позднее Средневековье */\r\n  LateMiddle = 6,\r\n  /** Colonial Period | Колониальный период */\r\n  Colonial = 7,\r\n  /** Industrial Era | Индустриальная эпоха */\r\n  Industrial = 8,\r\n  /** Progressivism | Эра прогрессивизма */\r\n  Progressivism = 9,\r\n  /** Age of Modern | Эпоха Модерна */\r\n  Modern = 10,\r\n  /** Postmodern Era | Эпоха Постмодерна */\r\n  Postmodern = 11,\r\n  /** Newest Time | Новейшее время */\r\n  NewestTime = 12,\r\n  /** Tomorrow Era | Завтрашняя эпоха */\r\n  Tomorrow = 13,\r\n  /** Era of the Future | Эра Будущего */\r\n  Future = 14,\r\n  /** Arctic Future | Арктическое будущее */\r\n  Arctic = 15,\r\n  /** Oceanic Future | Океаническое будущее */\r\n  Oceanic = 16,\r\n  /** Virtual Future | Виртуальное будущее */\r\n  Virtual = 17,\r\n  /** Space Age Mars | Космическая эра Марса */\r\n  Mars = 18,\r\n  /** Asteroid Belt | Пояс астероидов из космической эры */\r\n  Asteroid = 19,\r\n}\r\n\r\nexport type EraType = {\r\n  key: EraKey;\r\n  short: string;\r\n  background: string;\r\n  borderColor: string;\r\n  color: string;\r\n  name: string;\r\n};\r\n\r\n/** Великие Строения */\r\n/*\r\n1\tОбсерватория\t0 нет\r\n2\tХрам Реликвий\t0 нет\r\n3\tДельфийский Оракул\t0 нет\r\n4\tВавилонская башня\t2 БВ\r\n5\tСтатуя Зевса\t2 БВ\r\n6\tКолизей\t3 ЖВ\r\n7\tАлександрийский маяк\t3 ЖВ\r\n8\tСобор Святой Софии\t4 РС\r\n9\tАхенский Собор\t4 РС\r\n10\tСобор Святого Марка\t5 ВС\r\n11\tНотр-Дам\t5 ВС\r\n12\tСобор Василия Блаженного\t6 ПС\r\n13\tКастель-Дель-Монте\t6 ПС\r\n14\tДильский замок\t7 КП\r\n15\tФрауэнкирхе\t7 КП\r\n16\tКапитолий \t8 ИЭ\r\n17\tАльберт-Холл\t8 ИЭ\r\n18\tШато-Фронтенак\t9 ЭП\r\n19\tАлькатрас\t9 ЭП\r\n20\tСпейс-Нидл\tA ЭМ\r\n21\tАтомиум\tA ЭМ\r\n22\tХабитат\tB ПМ\r\n23\tКосмодром Канаверал\tB ПМ\r\n24\tХрам Лотоса\tC НВ\r\n25\tБашня Инноваций\tC НВ\r\n26\tВращающаяся башня\tD За\r\n27\tВояджер V1\tD За\r\n28\tАрка\tE Бу\r\n29\tДождевой лес\tE Бу\r\n30\tСтатуя Геи\tF АБ\r\n31\tАрктическая оранжерея\tF АБ\r\n32\tЗернохранилище\tF АБ\r\n33\tМузей Атлантиды\tG ОБ\r\n34\tКракен\tG ОБ\r\n35\tСиняя галактика\tG ОБ\r\n36\tТерракотовая армия\tH ВБ\r\n37\tЗамок Химэдзи\tH ВБ\r\n38\tКосмопорт (Колония на Марсе)\tI КЭ\r\n39\tЗвездочёт\tI КЭ\r\n40\tПроект «Дева»\tI КЭ\r\n*/\r\n","import { Button, Space } from \"antd\";\r\nimport React from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { RootStoreData } from \"../../common/types/redux-types\";\r\nimport { commonHideLoader, commonShowLoader } from \"../../common/services/action-creators\";\r\n\r\nconst Home: React.FC<PropsFromRedux> = (props) => {\r\n\r\n  const { loading, commonHideLoader, commonShowLoader } = props;\r\n\r\n  const tempShowLoader = (delay: number) => {\r\n    commonShowLoader();\r\n    setTimeout(() => {\r\n      commonHideLoader();\r\n    }, delay);\r\n  }\r\n\r\n  return (\r\n    <Space align='center'>\r\n      <h1>{loading ? 'loading' : 'NOT'}</h1>\r\n      <Button type='primary' onClick={() => tempShowLoader(1000)}>Show Loader</Button>\r\n      <Button type='ghost' onClick={() => tempShowLoader(2000)}>2 сек</Button>\r\n      <Button type='default' onClick={() => tempShowLoader(5000)}>5 сек</Button>\r\n      <Button type='link' onClick={() => tempShowLoader(20000)}>20 сек</Button>\r\n      <Button type='primary' danger onClick={commonHideLoader}>Stop Loader</Button>\r\n    </Space>\r\n  );\r\n};\r\n\r\nconst mapState = (state: RootStoreData) => {\r\n  const { loading } = state.common;\r\n  return {\r\n    loading\r\n  };\r\n};\r\n\r\nconst mapDispatch = {\r\n  commonShowLoader,\r\n  commonHideLoader\r\n};\r\n\r\nconst connector = connect(mapState, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(Home);\r\n","/*\n * Copyright 2020 LasGIS FOE Helper\n */\n\nimport { COMMON_HIDE_LOADER, COMMON_SHOW_LOADER, } from './action-constants';\n\nexport const commonShowLoader = () => ({ type: COMMON_SHOW_LOADER } as const);\nexport const commonHideLoader = () => ({ type: COMMON_HIDE_LOADER } as const);\n","/*\n * Copyright 2020 LasGIS FOE Helper\n */\n\nexport const COMMON_SHOW_LOADER = 'COMMON_SHOW_LOADER';\nexport const COMMON_HIDE_LOADER = 'COMMON_HIDE_LOADER';\n","import { Space } from \"antd\";\r\nimport React from \"react\";\r\n\r\ntype Props = {\r\n  text: string;\r\n}\r\n\r\nconst Optional: React.FC<Props> = ({ text }) => <Space align='center'>\r\n  <h1>{text}</h1>\r\n</Space>;\r\n\r\nexport default Optional;\r\n\r\n","import { Space } from \"antd\";\r\nimport React from \"react\";\r\n\r\nconst OptionalNotArg = () => {\r\n  return (\r\n    <Space align='center'>\r\n      <h1>NO argument</h1>\r\n    </Space>\r\n  );\r\n}\r\n\r\nexport default OptionalNotArg;\r\n\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport { EraKey, EraType } from \"./dic-type\";\r\n\r\nexport const ERAS: EraType[] = [\r\n  { short: 'БЭ', background: '#216565', borderColor: '#79bcbc', color: '#ffffff', key: EraKey.Without, name: \"Без Века\" },\r\n  { short: 'КЭ', background: '#5a4d3c', borderColor: '#837864', color: '#ffffff', key: EraKey.Stone, name: \"Каменный Век\" },\r\n  { short: 'БВ', background: '#503d09', borderColor: '#d5b945', color: '#ffe783', key: EraKey.Bronze, name: \"Бронзовый Век\" },\r\n  { short: 'ЖВ', background: '#521e09', borderColor: '#ff7772', color: '#f4eea7', key: EraKey.Iron, name: \"Железный Век\" },\r\n  { short: 'РС', background: '#324125', borderColor: '#77ad81', color: '#cce2a2', key: EraKey.EarlyMiddle, name: \"Раннее Средневековье\" },\r\n  { short: 'ВС', background: '#154040', borderColor: '#3bbaba', color: '#9bf7f7', key: EraKey.HighMiddle, name: \"Высокое Средневековье\" },\r\n  { short: 'ПС', background: '#46254a', borderColor: '#d178db', color: '#f4c5f9', key: EraKey.LateMiddle, name: \"Позднее Средневековье\" },\r\n  { short: 'КП', background: '#6b3c08', borderColor: '#ffffff', color: '#fecead', key: EraKey.Colonial, name: \"Колониальный период\" },\r\n  { short: 'ИЭ', background: '#561918', borderColor: '#ffafaf', color: '#ffafaf', key: EraKey.Industrial, name: \"Индустриальная эпоха\" },\r\n  { short: 'ЭП', background: '#70490d', borderColor: '#ffb065', color: '#ffead5', key: EraKey.Progressivism, name: \"Эра прогрессивизма\" },\r\n  { short: 'ЭМ', background: '#27426d', borderColor: '#65b4ff', color: '#ffead5', key: EraKey.Modern, name: \"Эпоха Модерна\" },\r\n  { short: 'ПМ', background: '#4f5751', borderColor: '#f8f8f8', color: '#ffead5', key: EraKey.Postmodern, name: \"Эпоха Постмодерна\" },\r\n  { short: 'НВ', background: '#c1522e', borderColor: '#ff8946', color: '#ffd6cb', key: EraKey.NewestTime, name: \"Новейшее время\" },\r\n  { short: 'ЭЗ', background: '#1e2126', borderColor: '#3d76c8', color: '#b9b9b9', key: EraKey.Tomorrow, name: \"Завтрашняя эпоха\" },\r\n  { short: 'ЭБ', background: '#3d5f1b', borderColor: '#80ff00', color: '#cce5ac', key: EraKey.Future, name: \"Эра Будущего\" },\r\n  { short: 'АБ', background: '#b1b1b1', borderColor: '#daf0ff', color: '#1b1d29', key: EraKey.Arctic, name: \"Арктическое будущее\" },\r\n  { short: 'ОБ', background: '#19483c', borderColor: '#3fffe1', color: '#cbfff3', key: EraKey.Oceanic, name: \"Океаническое будущее\" },\r\n  { short: 'ВБ', background: '#371a52', borderColor: '#bf77ff', color: '#e1bfff', key: EraKey.Virtual, name: \"Виртуальное будущее\" },\r\n  { short: 'КМ', background: '#9c4536', borderColor: '#e04021', color: '#ffcbc1', key: EraKey.Mars, name: \"Космическая эра Марса\" },\r\n  { short: 'КА', background: '#291daf', borderColor: '#0d72fc', color: '#ccceff', key: EraKey.Asteroid, name: \"Пояс астероидов из космической эры\" },\r\n];\r\n\r\nexport const ERA_KEY_MAP: { [eraKey: number]: EraType } = ERAS.reduce((acc: { [eraKey: number]: EraType }, era: EraType) => {\r\n  acc[era.key] = era;\r\n  return acc;\r\n}, {});\r\n\r\nexport const ERA_SHORT_MAP: { [short: string]: EraType } = ERAS.reduce((acc: { [short: string]: EraType }, era: EraType) => {\r\n  acc[era.short] = era;\r\n  return acc;\r\n}, {});\r\n","export const compareAlphabetically = (a?: string, b?: string) => {\r\n  const aText = a || '';\r\n  const bText = b || '';\r\n  if (aText < bText) return -1;\r\n  if (aText > bText) return 1;\r\n  return 0;\r\n};\r\n\r\nexport const compareNumber = (a?: number, b?: number) => {\r\n  const aNum = a || 0;\r\n  const bNum = b || 0;\r\n  if (aNum < bNum) return -1;\r\n  if (aNum > bNum) return 1;\r\n  return 0;\r\n};\r\n","import React from \"react\";\r\nimport { Table } from \"antd\";\r\nimport { ERAS } from \"../../dictionary/eras\";\r\nimport { EraType } from \"../../dictionary/dic-type\";\r\nimport { compareAlphabetically } from \"../../utils\";\r\n\r\nconst ErasPage: React.FC = (props) => {\r\n\r\n  return (\r\n    <Table\r\n      style={{ width: '300px' }}\r\n      dataSource={ERAS}\r\n      columns={[ {\r\n        title: '№',\r\n        dataIndex: 'key',\r\n        width: '20px'\r\n      }, {\r\n        title: 'Абр.',\r\n        dataIndex: 'short',\r\n        width: '60px',\r\n        sorter: (a: EraType, b: EraType) => compareAlphabetically(a.short, b.short),\r\n      }, {\r\n        title: 'Полное название',\r\n        dataIndex: 'name',\r\n        sorter: (a: EraType, b: EraType) => compareAlphabetically(a.name, b.name),\r\n      } ]}\r\n      bordered\r\n      onRow={(era: EraType) => ({\r\n        style: {\r\n          background: era.background,\r\n          borderColor: era.borderColor,\r\n          color: era.color\r\n        }\r\n      })}\r\n      pagination={false}\r\n      size='small'\r\n    />\r\n  );\r\n}\r\n\r\nexport default ErasPage;\r\n","import React from \"react\";\r\nimport { DesktopOutlined, HomeOutlined, LaptopOutlined, UserOutlined } from \"@ant-design/icons/lib/icons\";\r\nimport Home from \"../Home/Home\";\r\nimport Optional from \"../Optional/Optional\";\r\nimport OptionalNotArg from \"../Optional/OptionalNotArg\";\r\nimport ErasPage from \"../Eras/Eras\";\r\n\r\nexport type SubmenuData = {\r\n  type: 'submenu';\r\n  key: string;\r\n  name: string;\r\n  icon?: React.ReactNode;\r\n  subMenus: MenuData[];\r\n};\r\n\r\nexport type OptionData = {\r\n  type: 'option';\r\n  key: string;\r\n  name: string;\r\n  pathname: string;\r\n  icon?: React.ReactNode;\r\n  component?: React.ReactNode;\r\n  props?: any;\r\n};\r\n\r\nexport type MenuData = SubmenuData | OptionData;\r\n\r\nexport type SelectedMenuData = {\r\n  menu: OptionData;\r\n  breadcrumbs: string[];\r\n};\r\n\r\nexport const MENU_DATA: MenuData[] = [\r\n  {\r\n    type: 'option', key: \"home\", name: \"Home\", icon: <HomeOutlined/>,\r\n    pathname: \"/home\", component: <Home/>\r\n  }, {\r\n    type: 'submenu', key: \"dic\", name: \"Словари\", icon: <DesktopOutlined/>,\r\n    subMenus: [ {\r\n      type: 'option', key: \"eras\", name: \"Эпохи\", icon: <LaptopOutlined/>,\r\n      pathname: \"/eras\", component: <ErasPage/>\r\n    }, {\r\n      type: 'option', key: \"great_buildings\", name: \"Великие Строения\", icon: <LaptopOutlined/>,\r\n      pathname: \"/great-buildings\", component: <Optional text=\"Great Buildings\"/>\r\n    } ]\r\n  }, {\r\n    type: 'submenu', key: \"sub2\", name: \"navigation 2\", icon: <DesktopOutlined/>,\r\n    subMenus: [ {\r\n      type: 'option', key: \"sub2-1\", name: \"Option 1\", icon: <LaptopOutlined/>,\r\n      pathname: \"/sub2-option1\", component: <Optional text=\"SUB2 OPTION1\"/>\r\n    }, {\r\n      type: 'submenu', key: \"sub22\", name: \"navigation 22\", icon: <DesktopOutlined/>,\r\n      subMenus: [ {\r\n        type: 'option', key: \"sub22-1\", name: \"Option 1\", icon: <LaptopOutlined/>,\r\n        pathname: \"/sub22-option1\", component: <Optional text=\"SUB2 SUB22 OPTION1\"/>\r\n      },{\r\n        type: 'option', key: \"sub22-2\", name: \"Option 2\", icon: <LaptopOutlined/>,\r\n        pathname: \"/sub22-option2\", component: <Optional text=\"SUB2 SUB22 OPTION2\"/>\r\n      } ]\r\n    }, {\r\n      type: 'option', key: \"sub2-3\", name: \"Option 3\", icon: <LaptopOutlined/>,\r\n      pathname: \"/sub2-option3\", component: <Optional text=\"SUB2 OPTION3\"/>\r\n    } ]\r\n  }, {\r\n    type: 'submenu', key: \"sub3\", name: \"navigation 3\", icon: <DesktopOutlined/>,\r\n    subMenus: [ {\r\n      type: 'option', key: \"sub3-1\", name: \"Option 1\", icon: <LaptopOutlined/>,\r\n      pathname: \"/sub3-option1\", component: <Optional text=\"SUB3 OPTION1\"/>\r\n    }, {\r\n      type: 'option', key: \"sub3-2\", name: \"Option 2\", icon: <LaptopOutlined/>,\r\n      pathname: \"/sub3-option2\", component: <Optional text=\"SUB3 OPTION2\"/>\r\n    }, {\r\n      type: 'option', key: \"sub3-3\", name: \"OptionalNotArg\", icon: <UserOutlined/>,\r\n      pathname: \"/sub3-option3\", component: <OptionalNotArg/>\r\n    } ]\r\n  }\r\n];\r\n\r\nexport const findSelectedMenuByPathname = (\r\n  pathname: string, menuData: MenuData[], breadcrumbs?: string[]\r\n): SelectedMenuData | undefined => {\r\n  const selected = menuData.map(menu => {\r\n    switch (menu.type) {\r\n      case \"submenu\":\r\n        const newBreadcrumbs: string[] = breadcrumbs ? [ ...breadcrumbs ] : [];\r\n        newBreadcrumbs.push(menu.name);\r\n        const selected = findSelectedMenuByPathname(pathname, menu.subMenus, newBreadcrumbs);\r\n        if (selected) {\r\n          return selected\r\n        }\r\n        break;\r\n      case \"option\":\r\n        if (pathname.startsWith(menu.pathname)) {\r\n          const newBreadcrumbs: string[] = breadcrumbs ? breadcrumbs : [];\r\n          newBreadcrumbs.push(menu.name);\r\n          return {\r\n            menu: menu,\r\n            breadcrumbs: newBreadcrumbs\r\n          }\r\n        }\r\n    }\r\n    return undefined;\r\n  }).filter(menu => menu);\r\n  return selected.length ? selected[0] : undefined;\r\n};\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport './App.scss';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\nimport { Breadcrumb, Layout, Menu } from 'antd';\r\nimport classNames from 'classnames';\r\nimport Home from \"../Home/Home\";\r\nimport { findSelectedMenuByPathname, MENU_DATA, MenuData } from \"./MenuHelper\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Content, Footer, Sider } = Layout;\r\n\r\n/**  */\r\nconst version = '1.0.0.2';\r\n\r\nconst resolveSubmenu = (subMenus: MenuData[]) => {\r\n  return subMenus.map((menu: MenuData) => {\r\n    switch (menu.type) {\r\n      case \"option\": {\r\n        return (\r\n          <Menu.Item key={menu.key} icon={menu.icon}>\r\n            <span>{menu.name}</span>\r\n            <Link to={menu.pathname}/>\r\n          </Menu.Item>\r\n        );\r\n      }\r\n      case \"submenu\": {\r\n        return (\r\n          <SubMenu key={menu.key} icon={menu.icon} title={menu.name}>\r\n            {resolveSubmenu(menu.subMenus)}\r\n          </SubMenu>\r\n        );\r\n      }\r\n      default:\r\n        return null;\r\n    }\r\n  });\r\n};\r\n\r\nconst resolveRoutes = (subMenus: MenuData[]): any[] => {\r\n  return subMenus.map((menu: MenuData) => {\r\n    const summary = [];\r\n    switch (menu.type) {\r\n      case \"option\": {\r\n        summary.push(\r\n          <Route key={menu.key} path={menu.pathname}>\r\n            {menu.component}\r\n          </Route>\r\n        );\r\n        break;\r\n      }\r\n      case \"submenu\": {\r\n        summary.push(resolveRoutes(menu.subMenus));\r\n        break;\r\n      }\r\n    }\r\n    return summary;\r\n  });\r\n};\r\n\r\nconst RESOLVED_SUBMENUS = resolveSubmenu(MENU_DATA);\r\nconst RESOLVED_ROUTES = resolveRoutes(MENU_DATA);\r\n\r\nfunction App() {\r\n\r\n  const [ menuCollapsed, setMenuCollapsed ] = useState<boolean>(false);\r\n  const [ selectedKeys, setSelectedKeys ] = useState<string[]>(['']);\r\n  const [ breadcrumbs, setBreadcrumbs ] = useState<string[]>(['...']);\r\n\r\n  useEffect(() => {\r\n    onSelectMenu();\r\n  }, []);\r\n\r\n  const onSelectMenu = () => {\r\n    const selectedMenu = findSelectedMenuByPathname(window.location.pathname, MENU_DATA);\r\n    setSelectedKeys([ selectedMenu ? selectedMenu.menu.key : '' ]);\r\n    setBreadcrumbs(selectedMenu ? selectedMenu.breadcrumbs : [ '...' ]);\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ minHeight: '100vh' }}>\r\n      <Sider\r\n        className=\"site-left-menu\"\r\n        collapsible\r\n        collapsed={menuCollapsed}\r\n        onCollapse={(collapsed) => {\r\n          setMenuCollapsed(collapsed);\r\n        }}\r\n      >\r\n        <div className={classNames(\"logo\", { \"logo__short\": menuCollapsed })}><span>Logo</span></div>\r\n        <Menu\r\n          mode=\"inline\"\r\n          theme='dark'\r\n          selectedKeys={selectedKeys}\r\n          onSelect={onSelectMenu}\r\n          style={{ height: '100%' }}\r\n        >\r\n          {RESOLVED_SUBMENUS}\r\n        </Menu>\r\n      </Sider>\r\n      <Layout style={{ padding: '0 12px' }}>\r\n        <Breadcrumb style={{ margin: '6px 0' }}>\r\n          {breadcrumbs.map((crumb: string, index:number) => <Breadcrumb.Item key={index}>{crumb}</Breadcrumb.Item>)}\r\n        </Breadcrumb>\r\n        <Content className=\"site-layout-background\">\r\n          <Switch>\r\n            <Route key='zero' exact path=\"/\" component={Home}/>\r\n            <Route key='home' path=\"/home\" component={Home}/>\r\n            {RESOLVED_ROUTES}\r\n          </Switch>\r\n        </Content>\r\n        <Footer className='footer'>LasGIS ©2020 Created using Ant Design - version({version})</Footer>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport { createHashHistory } from 'history';\r\n\r\nexport default createHashHistory();\r\n","/*\n * Copyright 2020 LasGIS FOE Helper\n */\n\nimport { COMMON_HIDE_LOADER, COMMON_SHOW_LOADER } from './action-constants';\nimport { CommonActions, CommonStoreData } from './types';\n\nconst initialState: CommonStoreData = {\n  loading: false,\n};\n\nexport function commonReducer(state: CommonStoreData = initialState, action: CommonActions): CommonStoreData {\n  switch (action.type) {\n    case COMMON_SHOW_LOADER:\n      return { ...state, loading: true };\n    case COMMON_HIDE_LOADER:\n      return { ...state, loading: false };\n    default:\n      return state;\n  }\n}\n","/*\n * Copyright 2020 LasGIS FOE Helper\n */\n\nimport { combineReducers } from 'redux';\nimport { commonReducer } from '../common/services/reducer';\nimport { connectRouter } from \"connected-react-router\";\nimport { History } from \"history\";\n\nexport default (history: History) => combineReducers({\n  router: connectRouter(history),\n  common: commonReducer,\n});\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport history from './history';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object'\r\n  && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(routerMiddleware(history), thunk));\r\n\r\nexport default function configureStore(preloadedState = {}) {\r\n  return createStore(rootReducer(history), preloadedState, enhancer);\r\n}\r\n","/*\r\n * Copyright 2020 LasGIS FOE Helper\r\n */\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './pages/Main/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport configureStore from \"./redux/configureStore\";\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n//  <React.StrictMode>\r\n  <Provider store={store}>\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <App/>\r\n    </Router>\r\n  </Provider>\r\n//  </React.StrictMode>\r\n  , document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}